
.. blogpost::
    :title: Follow up on PyData in Paris
    :keywords: pydata
    :date: 2016-06-18
    :categories: conference

    I added some notes taken from others presentations
    during the second day of `PyData <http://pydata.org/paris2016/>`_:
    :ref:`l-pydataparis-notes`. This is my second PyData conferences
    and even if I missed on day this time (to prepare my slides),
    I've shared and learned.

    I particularly enjoyed the talk about the work
    `scikit-learn <http://scikit-learn.org/stable/index.html>`_'s
    teams is doing to process issues and pull requests
    (see `The Scikit-Learn Day 2016: for enthousiasts, contributors and startup founders! <http://open-source-innovation-spring.org/scikit-learn-day/>`_).

    A couple of people insisted on the difficulty to hire people good in
    computer science, in computer and in science at the same time.
    I was wondering how I could talk about good practices in
    the software industry in my teachings in my teachings.
    Maybe I'll start by reading and commenting
    of couple of issues and pull requests from *scikit-learn* during a lecture.

    It turned out it was not so easy to find a page with the list
    of core developpers for *scikit-learn*. The best page is
    probably this one:
    `contributors <https://github.com/scikit-learn/scikit-learn/graphs/contributors>`_.
    While looking for it, I discovered another library for RandomForest:
    `Boruta <https://m2.icm.edu.pl/boruta/>`_, implemented in Python by
    `Daniel Homola <http://danielhomola.com/2015/05/08/borutapy-an-all-relevant-feature-selection-method/>`_.
    Some others links discovered during this search:

    * `Accelerating RandomForest in Scikit-Learn <http://www.slideshare.net/glouppe/accelerating-random-forests-in-scikitlearn>`_
    * `Six reasons why I recommend scikit-learn <http://radar.oreilly.com/2013/12/six-reasons-why-i-recommend-scikit-learn.html>`_
