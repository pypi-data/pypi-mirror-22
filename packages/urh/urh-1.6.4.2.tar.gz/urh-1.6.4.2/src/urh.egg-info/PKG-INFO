Metadata-Version: 1.1
Name: urh
Version: 1.6.4.2
Summary: Universal Radio Hacker: investigate wireless protocols like a boss
Home-page: https://github.com/jopohl/urh
Author: Johannes Pohl
Author-email: Johannes.Pohl90@gmail.com
License: GNU General Public License (GPL)
Download-URL: https://github.com/jopohl/urh/tarball/v1.6.4.2
Description: Universal Radio Hacker
        ======================
        
        |Linux/OSX Build Status| |Windows Build status| |Code Climate| |PyPI
        version| |Donate|
        
        The Universal Radio Hacker is a software for investigating unknown
        wireless protocols. Features include
        
        -  **hardware interfaces** for common Software Defined Radios
        -  **easy demodulation** of signals
        -  **assigning participants** to keep overview of your data
        -  **customizable decodings** to crack even sophisticated encodings like
           CC1101 data whitening
        -  **assign labels** to reveal the logic of the protocol
        -  **fuzzing component** to find security leaks
        -  **modulation support** to inject the data back into the system
        
        Check out the `wiki <https://github.com/jopohl/urh/wiki>`__ for more
        information and supported devices.
        
        Like to see things in action? Watch URH on YouTube!
        
        |Youtube Image|
        
        Installation
        ------------
        
        Dependencies
        ~~~~~~~~~~~~
        
        Required
        ^^^^^^^^
        
        -  Python 3.4+
        -  numpy / psutil / zmq
        -  PyQt5
        -  C++ Compiler
        
        Optional
        ^^^^^^^^
        
        -  librtlsdr (for native RTL-SDR device backend)
        -  libhackrf (for native HackRF device backend)
        -  libairspy (for native AirSPy device backend)
        -  liblimesdr (for native LimeSDR device backend)
        -  libuhd (for native USRP device backend)
        -  rfcat (for RfCat plugin to send e.g. with YardStick One)
        -  gnuradio / gnuradio-osmosdr (for GNU Radio device backends)
        
        Arch Linux
        ~~~~~~~~~~
        
        .. code:: bash
        
            yaourt -S urh
        
        Ubuntu/Debian
        ~~~~~~~~~~~~~
        
        If you want to use native device backends, make sure you install the
        **-dev** package for your desired SDRs, that is: - AirSpy:
        ``libairspy-dev`` - HackRF: ``libhackrf-dev`` - RTL-SDR:
        ``librtlsdr-dev`` - USRP: ``libuhd-dev``
        
        If your device does not have a ``-dev`` package, e.g. LimeSDR, you need
        to manually create a symlink to the ``.so``, like this:
        
        .. code:: bash
        
            sudo ln -s /usr/lib/x86_64-linux-gnu/libLimeSuite.so.17.02.2 /usr/lib/x86_64-linux-gnu/libLimeSuite.so
        
        **before** installing URH, using:
        
        .. code:: bash
        
            sudo apt-get update
            sudo apt-get install python3-numpy python3-psutil python3-zmq python3-pyqt5 g++ libpython3-dev python3-pip
            sudo pip3 install urh
        
        Windows
        ~~~~~~~
        
        1. Install `Visual C++ Build
           Tools <http://landinghub.visualstudio.com/visual-cpp-build-tools>`__.
        2. Install `Python 3 for
           Windows <https://www.python.org/downloads/windows/>`__. Choose a **64
           Bit** version!
        3. (Optional) Open a terminal (**cmd**) and type: ``pip install numpy``
           - *This speeds the installation up a bit.*
        4. In a terminal, type: ``pip install urh``.
        5. Type ``urh`` in a terminal or search for ``urh`` in search bar.
        
        Mac OS X
        ~~~~~~~~
        
        1. Install `Python 3 for Mac OS
           X <https://www.python.org/downloads/mac-osx/>`__. *If you experience
           issues with preinstalled Python, make sure you update to a recent
           version using the given link.*
        2. (Optional) Install desired native libs e.g.
           ``brew install librtlsdr`` for corresponding native device support.
        3. In a terminal, type: ``pip3 install urh``.
        4. Type ``urh`` in a terminal to get it started.
        
        Updating
        ~~~~~~~~
        
        If you installed URH via pip you can keep it up to date with
        
        .. code:: bash
        
            pip3 install --upgrade urh
        
        If this shouldn't work you can try:
        
        .. code:: bash
        
            python3 -m pip install --upgrade urh
        
        Running from source
        ~~~~~~~~~~~~~~~~~~~
        
        If you like to live on bleeding edge, you can run URH from source.
        
        Without Installation
        ^^^^^^^^^^^^^^^^^^^^
        
        To execute the Universal Radio Hacker without installation, just run:
        
        .. code:: bash
        
            git clone https://github.com/jopohl/urh/
            cd urh/src/urh
            ./main.py
        
        Note, before first usage the C++ extensions will be built.
        
        Installing from source
        ^^^^^^^^^^^^^^^^^^^^^^
        
        To install from source you need to have ``python-setuptools`` installed.
        You can get it e.g. with ``pip install setuptools``. Once the setuptools
        are installed use:
        
        .. code:: bash
        
            git clone https://github.com/jopohl/urh/
            cd urh
            python setup.py install
        
        And start the application by typing ``urh`` in a terminal.
        
        Screenshots
        -----------
        
        Get the data out of raw signals
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        
        .. figure:: http://i.imgur.com/Wy17Zv3.png
           :alt: Interpretation phase
        
           Interpretation phase
        
        Keep an overview even on complex protocols
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        
        .. figure:: http://i.imgur.com/ubAL3pE.png
           :alt: Analysis phase
        
           Analysis phase
        
        Record and send signals
        ~~~~~~~~~~~~~~~~~~~~~~~
        
        .. figure:: http://i.imgur.com/BfQpg23.png
           :alt: Record
        
           Record
        
        .. |Linux/OSX Build Status| image:: https://img.shields.io/travis/jopohl/urh/master.svg?label=Linux/OSX
           :target: https://travis-ci.org/jopohl/urh
        .. |Windows Build status| image:: https://img.shields.io/appveyor/ci/jopohl/urh/master.svg?label=Windows
           :target: https://ci.appveyor.com/project/jopohl/urh/branch/master
        .. |Code Climate| image:: https://codeclimate.com/github/jopohl/urh/badges/gpa.svg
           :target: https://codeclimate.com/github/jopohl/urh
        .. |PyPI version| image:: https://badge.fury.io/py/urh.svg
           :target: https://pypi.python.org/pypi/urh
        .. |Donate| image:: https://img.shields.io/badge/Donate-PayPal-green.svg
           :target: https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=6WDFF59DL56Z2
        .. |Youtube Image| image:: http://i.imgur.com/5HGzP2T.png
           :target: https://www.youtube.com/watch?v=kuubkTDAxwA
        
Platform: UNKNOWN
