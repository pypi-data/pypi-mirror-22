- name: "provision/deprovision os_server resources by looping on count"
  os_server2:
    state: "{{ state }}"
    auth: "{{ auth_var | default(omit) }}"
    name: "{{ res_grp_name }}_{{ res_def['res_name'] | default(res_def['name']) }}"
    image: "{{ res_def['image'] }}"
    key_name: "{{ res_def['keypair'] }}"
    api_timeout: 99999
    flavor: "{{ res_def['flavor'] }}"
    nics:  "{{ res_def['networks'] | os_net }}"
    floating_ip_pools: "{{ res_def['fip_pool'] | default(omit) }}"
    security_groups: "{{ res_def['security_groups'] | default(omit) }}"
    count: "{{ res_def['count'] }}"
  when: not async and auth_var['changed'] == true
  register: res_def_output

- name: "provision/deprovision os_server resources by looping on count"
  os_server2:
    state: "{{ state }}"
    name: "{{ res_grp_name }}_{{ res_def['res_name'] | default(res_def['name']) }}"
    image: "{{ res_def['image'] }}"
    key_name: "{{ res_def['keypair'] }}"
    api_timeout: 99999
    flavor: "{{ res_def['flavor'] }}"
    nics:  "{{ res_def['networks'] | os_net }}"
    floating_ip_pools: "{{ res_def['fip_pool'] | default(omit) }}"
    security_groups: "{{ res_def['security_groups'] | default(omit) }}"
    count: "{{ res_def['count'] }}"
  when: not async and auth_var['changed'] == false
  register: res_def_output

- name: "Append outputitem to topology_outputs"
  set_fact:
    topology_outputs_os_server: "{{ topology_outputs_os_server + [res_def_output] }}"
  when: not async

- name: "provision/deprovision os_server resources by looping on count"
  os_server2:
    state: "{{ state }}"
    auth: "{{ auth_var | provide_default(omit) }}"
    name: "{{ res_grp_name }}_{{ res_def['res_name'] | default(res_def['name']) }}"
    image: "{{ res_def['image'] }}"
    key_name: "{{ res_def['keypair'] }}"
    api_timeout: 99999
    flavor: "{{ res_def['flavor'] }}"
    nics:  "{{ res_def['networks'] | os_net }}"
    floating_ip_pools: "{{ res_def['fip_pool'] | default(omit) }}"
    security_groups: "{{ res_def['security_groups'] | default(omit) }}"
    count: "{{ res_def['count'] }}"
  async: "{{ async_timeout | default(1000) }}"
  poll: 0
  register: res_def_output
  when: async and auth_var['changed'] == true

- name: "provision/deprovision os_server resources by looping on count"
  os_server2:
    state: "{{ state }}"
    name: "{{ res_grp_name }}_{{ res_def['res_name'] | default(res_def['name']) }}"
    image: "{{ res_def['image'] }}"
    key_name: "{{ res_def['keypair'] }}"
    api_timeout: 99999
    flavor: "{{ res_def['flavor'] }}"
    nics:  "{{ res_def['networks'] | os_net }}"
    floating_ip_pools: "{{ res_def['fip_pool'] | default(omit) }}"
    security_groups: "{{ res_def['security_groups'] | default(omit) }}"
    count: "{{ res_def['count'] }}"
  async: "{{ async_timeout | default(1000) }}"
  poll: 0
  register: res_def_output
  when: async and auth_var['changed'] == false 


# following tasks saves the async job details
- name: "Async:: save the job id"
  set_fact:
    topology_outputs_os_server: "{{ topology_outputs_os_server + [ res_def_output ] }}"
  when: async
