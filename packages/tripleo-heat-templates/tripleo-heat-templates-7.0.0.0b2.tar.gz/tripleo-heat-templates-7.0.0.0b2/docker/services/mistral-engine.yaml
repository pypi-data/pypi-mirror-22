heat_template_version: pike

description: >
  OpenStack containerized Mistral Engine service

parameters:
  DockerNamespace:
    description: namespace
    default: 'tripleoupstream'
    type: string
  DockerMistralEngineImage:
    description: image
    default: 'centos-binary-mistral-engine:latest'
    type: string
  DockerMistralConfigImage:
    description: image
    default: 'centos-binary-mistral-api:latest'
    type: string
  EndpointMap:
    default: {}
    description: Mapping of service endpoint -> protocol. Typically set
                 via parameter_defaults in the resource registry.
    type: json
  ServiceNetMap:
    default: {}
    description: Mapping of service_name -> network name. Typically set
                 via parameter_defaults in the resource registry.  This
                 mapping overrides those in ServiceNetMapDefaults.
    type: json
  DefaultPasswords:
    default: {}
    type: json
  RoleName:
    default: ''
    description: Role name on which the service is applied
    type: string
  RoleParameters:
    default: {}
    description: Parameters specific to the role
    type: json


resources:

  ContainersCommon:
    type: ./containers-common.yaml

  MistralBase:
    type: ../../puppet/services/mistral-engine.yaml
    properties:
      EndpointMap: {get_param: EndpointMap}
      ServiceNetMap: {get_param: ServiceNetMap}
      DefaultPasswords: {get_param: DefaultPasswords}
      RoleName: {get_param: RoleName}
      RoleParameters: {get_param: RoleParameters}

outputs:
  role_data:
    description: Role data for the Mistral Engine role.
    value:
      service_name: {get_attr: [MistralBase, role_data, service_name]}
      config_settings:
        map_merge:
          - get_attr: [MistralBase, role_data, config_settings]
      step_config: &step_config
        get_attr: [MistralBase, role_data, step_config]
      service_config_settings: {get_attr: [MistralBase, role_data, service_config_settings]}
      # BEGIN DOCKER SETTINGS
      puppet_config:
        config_volume: mistral
        puppet_tags: mistral_config
        step_config: *step_config
        config_image:
          list_join:
            - '/'
            - [ {get_param: DockerNamespace}, {get_param: DockerMistralConfigImage} ]
      kolla_config:
        /var/lib/kolla/config_files/mistral_engine.json:
          command: /usr/bin/mistral-server --config-file=/etc/mistral/mistral.conf --log-file=/var/log/mistral/engine.log --server=engine
          permissions:
            - path: /var/log/mistral
              owner: mistral:mistral
              recurse: true
      docker_config:
        step_4:
          mistral_engine:
            image:
              list_join:
                - '/'
                - [ {get_param: DockerNamespace}, {get_param: DockerMistralEngineImage} ]
            net: host
            privileged: false
            restart: always
            volumes:
              list_concat:
                - {get_attr: [ContainersCommon, volumes]}
                -
                  - /run:/run
                  - /var/lib/kolla/config_files/mistral_engine.json:/var/lib/kolla/config_files/config.json:ro
                  - /var/lib/config-data/mistral/etc/mistral/:/etc/mistral/:ro
                  - /var/log/containers/mistral:/var/log/mistral
            environment:
              - KOLLA_CONFIG_STRATEGY=COPY_ALWAYS
      host_prep_tasks:
        - name: create persistent logs directory
          file:
            path: /var/log/containers/mistral
            state: directory
      upgrade_tasks:
        - name: Stop and disable mistral_engine service
          tags: step2
          service: name=openstack-mistral-engine state=stopped enabled=no
