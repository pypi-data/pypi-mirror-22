heat_template_version: pike

description: >
  OpenStack containerized Zaqar services

parameters:
  DockerNamespace:
    description: namespace
    default: 'tripleoupstream'
    type: string
  DockerZaqarImage:
    description: image
    default: 'centos-binary-zaqar:latest'
    type: string
  EndpointMap:
    default: {}
    description: Mapping of service endpoint -> protocol. Typically set
                 via parameter_defaults in the resource registry.
    type: json
  ServiceNetMap:
    default: {}
    description: Mapping of service_name -> network name. Typically set
                 via parameter_defaults in the resource registry.  This
                 mapping overrides those in ServiceNetMapDefaults.
    type: json
  DefaultPasswords:
    default: {}
    type: json
  RoleName:
    default: ''
    description: Role name on which the service is applied
    type: string
  RoleParameters:
    default: {}
    description: Parameters specific to the role
    type: json

resources:

  ContainersCommon:
    type: ./containers-common.yaml

  ZaqarBase:
    type: ../../puppet/services/zaqar.yaml
    properties:
      EndpointMap: {get_param: EndpointMap}
      ServiceNetMap: {get_param: ServiceNetMap}
      DefaultPasswords: {get_param: DefaultPasswords}
      RoleName: {get_param: RoleName}
      RoleParameters: {get_param: RoleParameters}

outputs:
  role_data:
    description: Role data for the Zaqar API role.
    value:
      service_name: {get_attr: [ZaqarBase, role_data, service_name]}
      config_settings: {get_attr: [ZaqarBase, role_data, config_settings]}
      step_config: &step_config
       get_attr: [ZaqarBase, role_data, step_config]
      service_config_settings: {get_attr: [ZaqarBase, role_data, service_config_settings]}
      # BEGIN DOCKER SETTINGS
      puppet_config:
        config_volume: zaqar
        puppet_tags: zaqar_config
        step_config: *step_config
        config_image: &zaqar_image
          list_join:
            - '/'
            - [ {get_param: DockerNamespace}, {get_param: DockerZaqarImage} ]
      kolla_config:
        /var/lib/kolla/config_files/zaqar.json:
          command: /usr/sbin/httpd -DFOREGROUND
        /var/lib/kolla/config_files/zaqar_websocket.json:
          command: /usr/bin/zaqar-server --config-file /etc/zaqar/zaqar.conf --config-file /etc/zaqar/1.conf
          permissions:
            - path: /var/log/zaqar
              owner: zaqar:zaqar
              recurse: true
      docker_config:
        step_4:
          zaqar:
            image: *zaqar_image
            net: host
            privileged: false
            restart: always
            # NOTE(mandre) kolla image changes the user to 'zaqar', we need it
            # to be root to run httpd
            user: root
            volumes:
              list_concat:
                - {get_attr: [ContainersCommon, volumes]}
                -
                  - /var/lib/kolla/config_files/zaqar.json:/var/lib/kolla/config_files/config.json:ro
                  - /var/lib/config-data/zaqar/etc/zaqar/:/etc/zaqar/:ro
                  - /var/lib/config-data/zaqar/var/www/:/var/www/:ro
                  - /var/lib/config-data/zaqar/etc/httpd/:/etc/httpd/:ro
                  - /var/log/containers/zaqar:/var/log/zaqar
            environment:
              - KOLLA_CONFIG_STRATEGY=COPY_ALWAYS
          zaqar_websocket:
            image: *zaqar_image
            net: host
            privileged: false
            restart: always
            volumes:
              list_concat:
                - {get_attr: [ContainersCommon, volumes]}
                -
                  - /var/lib/kolla/config_files/zaqar_websocket.json:/var/lib/kolla/config_files/config.json:ro
                  - /var/lib/config-data/zaqar/etc/zaqar/:/etc/zaqar/:ro
                  - /var/lib/config-data/zaqar/var/www/:/var/www/:ro
                  - /var/lib/config-data/zaqar/etc/httpd/:/etc/httpd/:ro
                  - /var/log/containers/zaqar:/var/log/zaqar
            environment:
              - KOLLA_CONFIG_STRATEGY=COPY_ALWAYS
      host_prep_tasks:
        - name: create persistent logs directory
          file:
            path: /var/log/containers/zaqar
            state: directory
      upgrade_tasks:
        - name: Stop and disable zaqar service
          tags: step2
          service: name=httpd state=stopped enabled=no
