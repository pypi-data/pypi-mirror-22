heat_template_version: pike

description: >
  OpenStack containerized swift proxy service

parameters:
  DockerNamespace:
    description: namespace
    default: 'tripleoupstream'
    type: string
  DockerSwiftProxyImage:
    description: image
    default: 'centos-binary-swift-proxy-server:latest'
    type: string
  EndpointMap:
    default: {}
    description: Mapping of service endpoint -> protocol. Typically set
                 via parameter_defaults in the resource registry.
    type: json
  ServiceNetMap:
    default: {}
    description: Mapping of service_name -> network name. Typically set
                 via parameter_defaults in the resource registry.  This
                 mapping overrides those in ServiceNetMapDefaults.
    type: json
  DefaultPasswords:
    default: {}
    type: json
  RoleName:
    default: ''
    description: Role name on which the service is applied
    type: string
  RoleParameters:
    default: {}
    description: Parameters specific to the role
    type: json
  EnableInternalTLS:
    type: boolean
    default: false

conditions:

  internal_tls_enabled: {equals: [{get_param: EnableInternalTLS}, true]}

resources:

  ContainersCommon:
    type: ./containers-common.yaml

  SwiftProxyBase:
    type: ../../puppet/services/swift-proxy.yaml
    properties:
      EndpointMap: {get_param: EndpointMap}
      ServiceNetMap: {get_param: ServiceNetMap}
      DefaultPasswords: {get_param: DefaultPasswords}
      RoleName: {get_param: RoleName}
      RoleParameters: {get_param: RoleParameters}

outputs:
  role_data:
    description: Role data for the swift proxy.
    value:
      service_name: {get_attr: [SwiftProxyBase, role_data, service_name]}
      config_settings: {get_attr: [SwiftProxyBase, role_data, config_settings]}
      step_config: &step_config
        get_attr: [SwiftProxyBase, role_data, step_config]
      service_config_settings: {get_attr: [SwiftProxyBase, role_data, service_config_settings]}
      # BEGIN DOCKER SETTINGS
      puppet_config:
        config_volume: swift
        puppet_tags: swift_proxy_config
        step_config: *step_config
        config_image: &swift_proxy_image
          list_join:
            - '/'
            - [ {get_param: DockerNamespace}, {get_param: DockerSwiftProxyImage} ]
      kolla_config:
        /var/lib/kolla/config_files/swift_proxy.json:
          command: /usr/bin/swift-proxy-server /etc/swift/proxy-server.conf
          permissions:
            - path: /var/log/swift
              owner: swift:swift
              recurse: true
        /var/lib/kolla/config_files/swift_proxy_tls_proxy.json:
          command: /usr/sbin/httpd -DFOREGROUND
      docker_config:
        step_4:
          map_merge:
            - swift_proxy:
                image: *swift_proxy_image
                net: host
                user: swift
                restart: always
                volumes:
                  list_concat:
                    - {get_attr: [ContainersCommon, volumes]}
                    -
                      - /var/lib/kolla/config_files/swift_proxy.json:/var/lib/kolla/config_files/config.json:ro
                      # FIXME I'm mounting /etc/swift as rw.  Are the rings written to
                      # at all during runtime?
                      - /var/lib/config-data/swift/etc/swift:/etc/swift:rw
                      - /run:/run
                      - /srv/node:/srv/node
                      - /dev:/dev
                      - /var/log/containers/swift:/var/log/swift
                environment:
                  - KOLLA_CONFIG_STRATEGY=COPY_ALWAYS
            - if:
                - internal_tls_enabled
                - swift_proxy_tls_proxy:
                    image: *swift_proxy_image
                    net: host
                    user: root
                    restart: always
                    volumes:
                      list_concat:
                        - {get_attr: [ContainersCommon, volumes]}
                        -
                          - /var/lib/kolla/config_files/swift_proxy_tls_proxy.json:/var/lib/kolla/config_files/config.json:ro
                          - /var/lib/config-data/swift/etc/httpd/:/etc/httpd/:ro
                          - /etc/pki/tls/certs/httpd:/etc/pki/tls/certs/httpd:ro
                          - /etc/pki/tls/private/httpd:/etc/pki/tls/private/httpd:ro
                    environment:
                      - KOLLA_CONFIG_STRATEGY=COPY_ALWAYS
                - {}
      host_prep_tasks:
        - name: create persistent directories
          file:
            path: "{{ item }}"
            state: directory
          with_items:
            - /var/log/containers/swift
            - /srv/node
      upgrade_tasks:
        - name: Stop and disable swift_proxy service
          tags: step2
          service: name=openstack-swift-proxy state=stopped enabled=no
      metadata_settings:
        get_attr: [SwiftProxyBase, role_data, metadata_settings]
