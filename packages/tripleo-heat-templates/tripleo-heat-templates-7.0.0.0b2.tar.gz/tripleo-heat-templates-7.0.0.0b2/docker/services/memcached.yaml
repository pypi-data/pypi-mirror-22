heat_template_version: pike

description: >
  OpenStack containerized Memcached services

parameters:
  DockerNamespace:
    description: namespace
    default: 'tripleoupstream'
    type: string
  DockerMemcachedImage:
    description: image
    default: 'centos-binary-memcached:latest'
    type: string
  EndpointMap:
    default: {}
    description: Mapping of service endpoint -> protocol. Typically set
                 via parameter_defaults in the resource registry.
    type: json
  ServiceNetMap:
    default: {}
    description: Mapping of service_name -> network name. Typically set
                 via parameter_defaults in the resource registry.  This
                 mapping overrides those in ServiceNetMapDefaults.
    type: json
  DefaultPasswords:
    default: {}
    type: json
  RoleName:
    default: ''
    description: Role name on which the service is applied
    type: string
  RoleParameters:
    default: {}
    description: Parameters specific to the role
    type: json

resources:

  ContainersCommon:
    type: ./containers-common.yaml

  MemcachedBase:
    type: ../../puppet/services/memcached.yaml
    properties:
      EndpointMap: {get_param: EndpointMap}
      ServiceNetMap: {get_param: ServiceNetMap}
      DefaultPasswords: {get_param: DefaultPasswords}
      RoleName: {get_param: RoleName}
      RoleParameters: {get_param: RoleParameters}

outputs:
  role_data:
    description: Role data for the Memcached API role.
    value:
      service_name: {get_attr: [MemcachedBase, role_data, service_name]}
      config_settings: {get_attr: [MemcachedBase, role_data, config_settings]}
      step_config: &step_config
        get_attr: [MemcachedBase, role_data, step_config]
      service_config_settings: {get_attr: [MemcachedBase, role_data, service_config_settings]}
      # BEGIN DOCKER SETTINGS
      puppet_config:
        config_volume: 'memcached'
        puppet_tags: 'file'
        step_config: *step_config
        config_image: &memcached_image
          list_join:
            - '/'
            - [ {get_param: DockerNamespace}, {get_param: DockerMemcachedImage} ]
      kolla_config: {}
      docker_config:
        step_1:
          memcached_init_logs:
            start_order: 0
            image: *memcached_image
            privileged: false
            user: root
            volumes:
               - /var/lib/config-data/memcached/etc/sysconfig/memcached:/etc/sysconfig/memcached:ro
               - /var/log/memcached.log:/var/log/memcached.log
            command: ['/bin/bash', '-c', 'source /etc/sysconfig/memcached; chown ${USER} /var/log/memcached.log']
          memcached:
            start_order: 1
            image: *memcached_image
            net: host
            privileged: false
            restart: always
            volumes:
              list_concat:
                - {get_attr: [ContainersCommon, volumes]}
                -
                  - /var/lib/config-data/memcached/etc/sysconfig/memcached:/etc/sysconfig/memcached:ro
            # TODO(bogdando) capture memcached syslog logs from a container
            command: ['/bin/bash', '-c', 'source /etc/sysconfig/memcached; /usr/bin/memcached -p ${PORT} -u ${USER} -m ${CACHESIZE} -c ${MAXCONN} $OPTIONS']
            environment:
              - KOLLA_CONFIG_STRATEGY=COPY_ALWAYS
      upgrade_tasks:
        - name: Stop and disable memcached service
          tags: step2
          service: name=memcached state=stopped enabled=no
