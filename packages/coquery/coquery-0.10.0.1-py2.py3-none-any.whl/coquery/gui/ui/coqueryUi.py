# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'coquery.ui'
#
# Created by: PyQt5 UI code generator 5.6
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(720, 748)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.splitter = QtWidgets.QSplitter(self.centralwidget)
        self.splitter.setOrientation(QtCore.Qt.Vertical)
        self.splitter.setObjectName("splitter")
        self.options_area = QtWidgets.QFrame(self.splitter)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(1)
        sizePolicy.setHeightForWidth(self.options_area.sizePolicy().hasHeightForWidth())
        self.options_area.setSizePolicy(sizePolicy)
        self.options_area.setObjectName("options_area")
        self.gridLayout = QtWidgets.QGridLayout(self.options_area)
        self.gridLayout.setContentsMargins(0, 0, 0, -1)
        self.gridLayout.setSpacing(6)
        self.gridLayout.setObjectName("gridLayout")
        self.box_input_settings = QtWidgets.QGroupBox(self.options_area)
        self.box_input_settings.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignTop)
        self.box_input_settings.setObjectName("box_input_settings")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.box_input_settings)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.radio_query_string = QtWidgets.QRadioButton(self.box_input_settings)
        self.radio_query_string.setText("")
        self.radio_query_string.setChecked(True)
        self.radio_query_string.setObjectName("radio_query_string")
        self.gridLayout_3.addWidget(self.radio_query_string, 0, 0, 1, 1, QtCore.Qt.AlignTop)
        self.edit_query_string = CoqTextEdit(self.box_input_settings)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.edit_query_string.sizePolicy().hasHeightForWidth())
        self.edit_query_string.setSizePolicy(sizePolicy)
        self.edit_query_string.setObjectName("edit_query_string")
        self.gridLayout_3.addWidget(self.edit_query_string, 0, 1, 1, 1)
        self.radio_query_file = QtWidgets.QRadioButton(self.box_input_settings)
        self.radio_query_file.setText("")
        self.radio_query_file.setObjectName("radio_query_file")
        self.gridLayout_3.addWidget(self.radio_query_file, 1, 0, 1, 1, QtCore.Qt.AlignTop)
        self.gridLayout_6 = QtWidgets.QGridLayout()
        self.gridLayout_6.setObjectName("gridLayout_6")
        self.edit_file_name = CoqClickableLabel(self.box_input_settings)
        self.edit_file_name.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Ignored, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.edit_file_name.sizePolicy().hasHeightForWidth())
        self.edit_file_name.setSizePolicy(sizePolicy)
        self.edit_file_name.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.edit_file_name.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.edit_file_name.setObjectName("edit_file_name")
        self.gridLayout_6.addWidget(self.edit_file_name, 0, 0, 1, 1)
        self.button_change_file = QtWidgets.QPushButton(self.box_input_settings)
        self.button_change_file.setObjectName("button_change_file")
        self.gridLayout_6.addWidget(self.button_change_file, 0, 1, 1, 1)
        self.gridLayout_6.setColumnStretch(0, 1)
        self.gridLayout_3.addLayout(self.gridLayout_6, 1, 1, 1, 1)
        self.gridLayout.addWidget(self.box_input_settings, 0, 1, 1, 1)
        self.group_management = QtWidgets.QGroupBox(self.options_area)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.group_management.sizePolicy().hasHeightForWidth())
        self.group_management.setSizePolicy(sizePolicy)
        self.group_management.setObjectName("group_management")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.group_management)
        self.verticalLayout.setObjectName("verticalLayout")
        self.list_toolbox = QtWidgets.QTableWidget(self.group_management)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Ignored, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.list_toolbox.sizePolicy().hasHeightForWidth())
        self.list_toolbox.setSizePolicy(sizePolicy)
        self.list_toolbox.setAutoScroll(False)
        self.list_toolbox.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.list_toolbox.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
        self.list_toolbox.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.list_toolbox.setShowGrid(False)
        self.list_toolbox.setRowCount(6)
        self.list_toolbox.setColumnCount(3)
        self.list_toolbox.setObjectName("list_toolbox")
        item = QtWidgets.QTableWidgetItem()
        self.list_toolbox.setItem(0, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.list_toolbox.setItem(0, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.list_toolbox.setItem(0, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.list_toolbox.setItem(1, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.list_toolbox.setItem(1, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.list_toolbox.setItem(1, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.list_toolbox.setItem(2, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.list_toolbox.setItem(2, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.list_toolbox.setItem(2, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.list_toolbox.setItem(3, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.list_toolbox.setItem(3, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.list_toolbox.setItem(3, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.list_toolbox.setItem(4, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.list_toolbox.setItem(4, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.list_toolbox.setItem(4, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.list_toolbox.setItem(5, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.list_toolbox.setItem(5, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.list_toolbox.setItem(5, 2, item)
        self.list_toolbox.horizontalHeader().setVisible(False)
        self.list_toolbox.verticalHeader().setVisible(False)
        self.verticalLayout.addWidget(self.list_toolbox)
        self.tool_widget = QtWidgets.QStackedWidget(self.group_management)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tool_widget.sizePolicy().hasHeightForWidth())
        self.tool_widget.setSizePolicy(sizePolicy)
        self.tool_widget.setObjectName("tool_widget")
        self.tool_widget_column_order = QtWidgets.QWidget()
        self.tool_widget_column_order.setObjectName("tool_widget_column_order")
        self.verticalLayout_11 = QtWidgets.QVBoxLayout(self.tool_widget_column_order)
        self.verticalLayout_11.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_11.setObjectName("verticalLayout_11")
        self.list_column_order = CoqButtonList(self.tool_widget_column_order)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.list_column_order.sizePolicy().hasHeightForWidth())
        self.list_column_order.setSizePolicy(sizePolicy)
        self.list_column_order.setObjectName("list_column_order")
        self.verticalLayout_11.addWidget(self.list_column_order)
        self.tool_widget.addWidget(self.tool_widget_column_order)
        self.tool_widget_page_context = QtWidgets.QWidget()
        self.tool_widget_page_context.setObjectName("tool_widget_page_context")
        self.verticalLayout_7 = QtWidgets.QVBoxLayout(self.tool_widget_page_context)
        self.verticalLayout_7.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_7.setObjectName("verticalLayout_7")
        self.widget_context = QtWidgets.QWidget(self.tool_widget_page_context)
        self.widget_context.setObjectName("widget_context")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.widget_context)
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_2.setSpacing(6)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.radio_context_mode_none = QtWidgets.QRadioButton(self.widget_context)
        self.radio_context_mode_none.setObjectName("radio_context_mode_none")
        self.verticalLayout_2.addWidget(self.radio_context_mode_none)
        self.line = QtWidgets.QFrame(self.widget_context)
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.verticalLayout_2.addWidget(self.line)
        self.radio_context_mode_columns = QtWidgets.QRadioButton(self.widget_context)
        self.radio_context_mode_columns.setStyleSheet("text-align: center center")
        self.radio_context_mode_columns.setObjectName("radio_context_mode_columns")
        self.verticalLayout_2.addWidget(self.radio_context_mode_columns)
        self.radio_context_mode_kwic = QtWidgets.QRadioButton(self.widget_context)
        self.radio_context_mode_kwic.setStyleSheet("text-align: center center")
        self.radio_context_mode_kwic.setObjectName("radio_context_mode_kwic")
        self.verticalLayout_2.addWidget(self.radio_context_mode_kwic)
        self.radio_context_mode_string = QtWidgets.QRadioButton(self.widget_context)
        self.radio_context_mode_string.setStyleSheet("text-align: center center")
        self.radio_context_mode_string.setObjectName("radio_context_mode_string")
        self.verticalLayout_2.addWidget(self.radio_context_mode_string)
        self.verticalLayout_7.addWidget(self.widget_context)
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setSpacing(0)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.context_left_span = QtWidgets.QSpinBox(self.tool_widget_page_context)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.context_left_span.sizePolicy().hasHeightForWidth())
        self.context_left_span.setSizePolicy(sizePolicy)
        self.context_left_span.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.context_left_span.setSuffix("")
        self.context_left_span.setObjectName("context_left_span")
        self.horizontalLayout_4.addWidget(self.context_left_span)
        self.context_right_span = QtWidgets.QSpinBox(self.tool_widget_page_context)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.context_right_span.sizePolicy().hasHeightForWidth())
        self.context_right_span.setSizePolicy(sizePolicy)
        self.context_right_span.setFrame(True)
        self.context_right_span.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.context_right_span.setSuffix("")
        self.context_right_span.setObjectName("context_right_span")
        self.horizontalLayout_4.addWidget(self.context_right_span, 0, QtCore.Qt.AlignTop)
        self.horizontalLayout_4.setStretch(0, 1)
        self.horizontalLayout_4.setStretch(1, 1)
        self.verticalLayout_7.addLayout(self.horizontalLayout_4)
        self.check_restrict = QtWidgets.QCheckBox(self.tool_widget_page_context)
        self.check_restrict.setObjectName("check_restrict")
        self.verticalLayout_7.addWidget(self.check_restrict)
        spacerItem = QtWidgets.QSpacerItem(20, 0, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_7.addItem(spacerItem)
        self.tool_widget.addWidget(self.tool_widget_page_context)
        self.tool_widget_page_stopwords = QtWidgets.QWidget()
        self.tool_widget_page_stopwords.setObjectName("tool_widget_page_stopwords")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.tool_widget_page_stopwords)
        self.verticalLayout_5.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.label_stopwords = QtWidgets.QLabel(self.tool_widget_page_stopwords)
        self.label_stopwords.setObjectName("label_stopwords")
        self.verticalLayout_5.addWidget(self.label_stopwords)
        self.button_stopwords = QtWidgets.QPushButton(self.tool_widget_page_stopwords)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.button_stopwords.sizePolicy().hasHeightForWidth())
        self.button_stopwords.setSizePolicy(sizePolicy)
        self.button_stopwords.setObjectName("button_stopwords")
        self.verticalLayout_5.addWidget(self.button_stopwords)
        spacerItem1 = QtWidgets.QSpacerItem(20, 0, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_5.addItem(spacerItem1)
        self.tool_widget.addWidget(self.tool_widget_page_stopwords)
        self.tool_widget_page_groups = QtWidgets.QWidget()
        self.tool_widget_page_groups.setObjectName("tool_widget_page_groups")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout(self.tool_widget_page_groups)
        self.verticalLayout_6.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.tree_groups = CoqGroupTree(self.tool_widget_page_groups)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Ignored, QtWidgets.QSizePolicy.Ignored)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tree_groups.sizePolicy().hasHeightForWidth())
        self.tree_groups.setSizePolicy(sizePolicy)
        self.tree_groups.setObjectName("tree_groups")
        self.tree_groups.headerItem().setText(0, "1")
        self.verticalLayout_6.addWidget(self.tree_groups)
        self.tool_widget.addWidget(self.tool_widget_page_groups)
        self.tool_widget_page_transform = QtWidgets.QWidget()
        self.tool_widget_page_transform.setObjectName("tool_widget_page_transform")
        self.verticalLayout_10 = QtWidgets.QVBoxLayout(self.tool_widget_page_transform)
        self.verticalLayout_10.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_10.setObjectName("verticalLayout_10")
        self.layout_aggregate = QtWidgets.QVBoxLayout()
        self.layout_aggregate.setObjectName("layout_aggregate")
        self.verticalLayout_10.addLayout(self.layout_aggregate)
        spacerItem2 = QtWidgets.QSpacerItem(20, 0, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_10.addItem(spacerItem2)
        self.tool_widget.addWidget(self.tool_widget_page_transform)
        self.tool_widget_page_summary = QtWidgets.QWidget()
        self.tool_widget_page_summary.setObjectName("tool_widget_page_summary")
        self.verticalLayout_13 = QtWidgets.QVBoxLayout(self.tool_widget_page_summary)
        self.verticalLayout_13.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_13.setObjectName("verticalLayout_13")
        self.button_add_summary_function = QtWidgets.QPushButton(self.tool_widget_page_summary)
        self.button_add_summary_function.setObjectName("button_add_summary_function")
        self.verticalLayout_13.addWidget(self.button_add_summary_function)
        self.button_filters = QtWidgets.QPushButton(self.tool_widget_page_summary)
        self.button_filters.setObjectName("button_filters")
        self.verticalLayout_13.addWidget(self.button_filters)
        spacerItem3 = QtWidgets.QSpacerItem(20, 0, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_13.addItem(spacerItem3)
        self.tool_widget.addWidget(self.tool_widget_page_summary)
        self.verticalLayout.addWidget(self.tool_widget)
        self.button_box_reaggregate = QtWidgets.QWidget(self.group_management)
        self.button_box_reaggregate.setObjectName("button_box_reaggregate")
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout(self.button_box_reaggregate)
        self.horizontalLayout_5.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.button_apply_management = QtWidgets.QPushButton(self.button_box_reaggregate)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.button_apply_management.sizePolicy().hasHeightForWidth())
        self.button_apply_management.setSizePolicy(sizePolicy)
        self.button_apply_management.setObjectName("button_apply_management")
        self.horizontalLayout_5.addWidget(self.button_apply_management)
        self.button_cancel_management = QtWidgets.QPushButton(self.button_box_reaggregate)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.button_cancel_management.sizePolicy().hasHeightForWidth())
        self.button_cancel_management.setSizePolicy(sizePolicy)
        self.button_cancel_management.setObjectName("button_cancel_management")
        self.horizontalLayout_5.addWidget(self.button_cancel_management)
        self.verticalLayout.addWidget(self.button_box_reaggregate)
        self.verticalLayout.setStretch(1, 1)
        self.gridLayout.addWidget(self.group_management, 0, 2, 2, 1)
        self.groupBox_2 = QtWidgets.QGroupBox(self.options_area)
        self.groupBox_2.setObjectName("groupBox_2")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.groupBox_2)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        spacerItem4 = QtWidgets.QSpacerItem(40, 10, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_3.addItem(spacerItem4)
        self.button_run_query = QtWidgets.QPushButton(self.groupBox_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.button_run_query.sizePolicy().hasHeightForWidth())
        self.button_run_query.setSizePolicy(sizePolicy)
        self.button_run_query.setAutoDefault(True)
        self.button_run_query.setDefault(True)
        self.button_run_query.setObjectName("button_run_query")
        self.horizontalLayout_3.addWidget(self.button_run_query)
        self.button_stop_query = QtWidgets.QPushButton(self.groupBox_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.button_stop_query.sizePolicy().hasHeightForWidth())
        self.button_stop_query.setSizePolicy(sizePolicy)
        self.button_stop_query.setAutoDefault(False)
        self.button_stop_query.setDefault(False)
        self.button_stop_query.setObjectName("button_stop_query")
        self.horizontalLayout_3.addWidget(self.button_stop_query)
        spacerItem5 = QtWidgets.QSpacerItem(40, 10, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_3.addItem(spacerItem5)
        self.gridLayout.addWidget(self.groupBox_2, 1, 1, 1, 1)
        self.box_corpus_select = QtWidgets.QGroupBox(self.options_area)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.box_corpus_select.sizePolicy().hasHeightForWidth())
        self.box_corpus_select.setSizePolicy(sizePolicy)
        self.box_corpus_select.setObjectName("box_corpus_select")
        self.output_columns = QtWidgets.QVBoxLayout(self.box_corpus_select)
        self.output_columns.setObjectName("output_columns")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setSpacing(10)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.label_2 = QtWidgets.QLabel(self.box_corpus_select)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_2.sizePolicy().hasHeightForWidth())
        self.label_2.setSizePolicy(sizePolicy)
        self.label_2.setObjectName("label_2")
        self.horizontalLayout_2.addWidget(self.label_2)
        self.combo_corpus = QtWidgets.QComboBox(self.box_corpus_select)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.combo_corpus.sizePolicy().hasHeightForWidth())
        self.combo_corpus.setSizePolicy(sizePolicy)
        self.combo_corpus.setFocusPolicy(QtCore.Qt.WheelFocus)
        self.combo_corpus.setEditable(False)
        self.combo_corpus.setInsertPolicy(QtWidgets.QComboBox.InsertAlphabetically)
        self.combo_corpus.setSizeAdjustPolicy(QtWidgets.QComboBox.AdjustToContents)
        self.combo_corpus.setFrame(True)
        self.combo_corpus.setObjectName("combo_corpus")
        self.horizontalLayout_2.addWidget(self.combo_corpus)
        self.horizontalLayout_2.setStretch(1, 1)
        self.output_columns.addLayout(self.horizontalLayout_2)
        spacerItem6 = QtWidgets.QSpacerItem(0, 0, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.output_columns.addItem(spacerItem6)
        self.gridLayout.addWidget(self.box_corpus_select, 0, 0, 2, 1)
        self.gridLayout.setColumnStretch(1, 1)
        self.layoutWidget = QtWidgets.QWidget(self.splitter)
        self.layoutWidget.setObjectName("layoutWidget")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.layoutWidget)
        self.verticalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.splitter_columns = QtWidgets.QSplitter(self.layoutWidget)
        self.splitter_columns.setOrientation(QtCore.Qt.Horizontal)
        self.splitter_columns.setChildrenCollapsible(False)
        self.splitter_columns.setObjectName("splitter_columns")
        self.data_preview = CoqResultsTableView(self.splitter_columns)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.data_preview.sizePolicy().hasHeightForWidth())
        self.data_preview.setSizePolicy(sizePolicy)
        self.data_preview.setEditTriggers(QtWidgets.QAbstractItemView.AllEditTriggers)
        self.data_preview.setAlternatingRowColors(True)
        self.data_preview.setSelectionMode(QtWidgets.QAbstractItemView.ExtendedSelection)
        self.data_preview.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectItems)
        self.data_preview.setTextElideMode(QtCore.Qt.ElideRight)
        self.data_preview.setVerticalScrollMode(QtWidgets.QAbstractItemView.ScrollPerPixel)
        self.data_preview.setHorizontalScrollMode(QtWidgets.QAbstractItemView.ScrollPerPixel)
        self.data_preview.setObjectName("data_preview")
        self.widget_hidden_columns = QtWidgets.QWidget(self.splitter_columns)
        self.widget_hidden_columns.setObjectName("widget_hidden_columns")
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout(self.widget_hidden_columns)
        self.horizontalLayout_6.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_6.setSpacing(0)
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.verticalLayout_8 = QtWidgets.QVBoxLayout()
        self.verticalLayout_8.setSpacing(0)
        self.verticalLayout_8.setObjectName("verticalLayout_8")
        self.button_toggle_hidden = CoqRotatedButton(self.widget_hidden_columns)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.button_toggle_hidden.sizePolicy().hasHeightForWidth())
        self.button_toggle_hidden.setSizePolicy(sizePolicy)
        self.button_toggle_hidden.setStyleSheet("color: rgb(0, 0, 0);\n"
"background-color: rgb(244, 165, 130);")
        self.button_toggle_hidden.setObjectName("button_toggle_hidden")
        self.verticalLayout_8.addWidget(self.button_toggle_hidden)
        spacerItem7 = QtWidgets.QSpacerItem(0, 0, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_8.addItem(spacerItem7)
        self.horizontalLayout_6.addLayout(self.verticalLayout_8)
        self.hidden_columns = CoqHiddenResultsTable(self.widget_hidden_columns)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Ignored, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.hidden_columns.sizePolicy().hasHeightForWidth())
        self.hidden_columns.setSizePolicy(sizePolicy)
        self.hidden_columns.setEditTriggers(QtWidgets.QAbstractItemView.SelectedClicked)
        self.hidden_columns.setAlternatingRowColors(True)
        self.hidden_columns.setSelectionMode(QtWidgets.QAbstractItemView.ExtendedSelection)
        self.hidden_columns.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.hidden_columns.setTextElideMode(QtCore.Qt.ElideRight)
        self.hidden_columns.setVerticalScrollMode(QtWidgets.QAbstractItemView.ScrollPerPixel)
        self.hidden_columns.setHorizontalScrollMode(QtWidgets.QAbstractItemView.ScrollPerPixel)
        self.hidden_columns.setObjectName("hidden_columns")
        self.horizontalLayout_6.addWidget(self.hidden_columns)
        self.horizontalLayout_6.setStretch(1, 1)
        self.verticalLayout_3.addWidget(self.splitter_columns)
        self.text_no_match = QtWidgets.QTextEdit(self.layoutWidget)
        self.text_no_match.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.text_no_match.sizePolicy().hasHeightForWidth())
        self.text_no_match.setSizePolicy(sizePolicy)
        self.text_no_match.setTextInteractionFlags(QtCore.Qt.NoTextInteraction)
        self.text_no_match.setObjectName("text_no_match")
        self.verticalLayout_3.addWidget(self.text_no_match)
        self.widget_find = CoqFindWidget(self.layoutWidget)
        self.widget_find.setObjectName("widget_find")
        self.verticalLayout_3.addWidget(self.widget_find)
        self.verticalLayout_3.setStretch(0, 1)
        self.verticalLayout_4.addWidget(self.splitter)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 720, 24))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuHilfe = QtWidgets.QMenu(self.menubar)
        self.menuHilfe.setObjectName("menuHilfe")
        self.menuCorpus = QtWidgets.QMenu(self.menubar)
        self.menuCorpus.setObjectName("menuCorpus")
        self.menuSettings = QtWidgets.QMenu(self.menubar)
        self.menuSettings.setObjectName("menuSettings")
        self.menuAnalyse = QtWidgets.QMenu(self.menubar)
        self.menuAnalyse.setObjectName("menuAnalyse")
        self.menuFrequencies = QtWidgets.QMenu(self.menuAnalyse)
        self.menuFrequencies.setObjectName("menuFrequencies")
        self.menuFrequency_maps = QtWidgets.QMenu(self.menuAnalyse)
        self.menuFrequency_maps.setObjectName("menuFrequency_maps")
        self.menuCorpus_locations = QtWidgets.QMenu(self.menuAnalyse)
        self.menuCorpus_locations.setObjectName("menuCorpus_locations")
        self.menuDensity_plots = QtWidgets.QMenu(self.menuAnalyse)
        self.menuDensity_plots.setEnabled(True)
        self.menuDensity_plots.setObjectName("menuDensity_plots")
        self.menuTime_data = QtWidgets.QMenu(self.menuAnalyse)
        self.menuTime_data.setObjectName("menuTime_data")
        self.menu_Results = QtWidgets.QMenu(self.menubar)
        self.menu_Results.setObjectName("menu_Results")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.statusbar.sizePolicy().hasHeightForWidth())
        self.statusbar.setSizePolicy(sizePolicy)
        self.statusbar.setSizeGripEnabled(True)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.action_open_input_file = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme("document-open")
        self.action_open_input_file.setIcon(icon)
        self.action_open_input_file.setObjectName("action_open_input_file")
        self.action_help = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme("help-contents")
        self.action_help.setIcon(icon)
        self.action_help.setObjectName("action_help")
        self.action_about_coquery = QtWidgets.QAction(MainWindow)
        self.action_about_coquery.setObjectName("action_about_coquery")
        self.actionDummy = QtWidgets.QAction(MainWindow)
        self.actionDummy.setObjectName("actionDummy")
        self.action_distinct_tokens = QtWidgets.QAction(MainWindow)
        self.action_distinct_tokens.setObjectName("action_distinct_tokens")
        self.action_frequency = QtWidgets.QAction(MainWindow)
        self.action_frequency.setObjectName("action_frequency")
        self.action_all_tokens = QtWidgets.QAction(MainWindow)
        self.action_all_tokens.setObjectName("action_all_tokens")
        self.action_statistics = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme("view-statistics")
        self.action_statistics.setIcon(icon)
        self.action_statistics.setObjectName("action_statistics")
        self.action_connection_settings = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme("server-database")
        self.action_connection_settings.setIcon(icon)
        self.action_connection_settings.setObjectName("action_connection_settings")
        self.action_settings = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme("configure")
        self.action_settings.setIcon(icon)
        self.action_settings.setObjectName("action_settings")
        self.action_quit = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme("application-exit")
        self.action_quit.setIcon(icon)
        self.action_quit.setObjectName("action_quit")
        self.action_build_corpus = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme("document-new")
        self.action_build_corpus.setIcon(icon)
        self.action_build_corpus.setObjectName("action_build_corpus")
        self.action_remove_corpus = QtWidgets.QAction(MainWindow)
        self.action_remove_corpus.setEnabled(False)
        icon = QtGui.QIcon.fromTheme("edit-delete")
        self.action_remove_corpus.setIcon(icon)
        self.action_remove_corpus.setObjectName("action_remove_corpus")
        self.action_manage_corpus = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme("server-database")
        self.action_manage_corpus.setIcon(icon)
        self.action_manage_corpus.setObjectName("action_manage_corpus")
        self.action_tree_map = QtWidgets.QAction(MainWindow)
        self.action_tree_map.setEnabled(False)
        self.action_tree_map.setObjectName("action_tree_map")
        self.action_heat_map = QtWidgets.QAction(MainWindow)
        self.action_heat_map.setEnabled(True)
        self.action_heat_map.setObjectName("action_heat_map")
        self.action_word_cloud = QtWidgets.QAction(MainWindow)
        self.action_word_cloud.setEnabled(False)
        self.action_word_cloud.setObjectName("action_word_cloud")
        self.action_barcode_plot = QtWidgets.QAction(MainWindow)
        self.action_barcode_plot.setObjectName("action_barcode_plot")
        self.action_beeswarm_plot = QtWidgets.QAction(MainWindow)
        self.action_beeswarm_plot.setObjectName("action_beeswarm_plot")
        self.action_barchart_plot = QtWidgets.QAction(MainWindow)
        self.action_barchart_plot.setObjectName("action_barchart_plot")
        self.action_time_series_plot = QtWidgets.QAction(MainWindow)
        self.action_time_series_plot.setObjectName("action_time_series_plot")
        self.action_corpus_documentation = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme("help-browser")
        self.action_corpus_documentation.setIcon(icon)
        self.action_corpus_documentation.setObjectName("action_corpus_documentation")
        self.action_percentage_area_plot = QtWidgets.QAction(MainWindow)
        self.action_percentage_area_plot.setObjectName("action_percentage_area_plot")
        self.action_stacked_area_plot = QtWidgets.QAction(MainWindow)
        self.action_stacked_area_plot.setObjectName("action_stacked_area_plot")
        self.action_line_plot = QtWidgets.QAction(MainWindow)
        self.action_line_plot.setObjectName("action_line_plot")
        self.actionStop_words = QtWidgets.QAction(MainWindow)
        self.actionStop_words.setObjectName("actionStop_words")
        self.actionStop_words_2 = QtWidgets.QAction(MainWindow)
        self.actionStop_words_2.setObjectName("actionStop_words_2")
        self.action_percentage_bars = QtWidgets.QAction(MainWindow)
        self.action_percentage_bars.setObjectName("action_percentage_bars")
        self.action_stacked_bars = QtWidgets.QAction(MainWindow)
        self.action_stacked_bars.setObjectName("action_stacked_bars")
        self.action_view_log = QtWidgets.QAction(MainWindow)
        self.action_view_log.setObjectName("action_view_log")
        self.action_mysql_server_help = QtWidgets.QAction(MainWindow)
        self.action_mysql_server_help.setObjectName("action_mysql_server_help")
        self.action_Column_context_menu = QtWidgets.QAction(MainWindow)
        self.action_Column_context_menu.setObjectName("action_Column_context_menu")
        self.action_Row_context_menu = QtWidgets.QAction(MainWindow)
        self.action_Row_context_menu.setObjectName("action_Row_context_menu")
        self.actionCopy_to_clipboard = QtWidgets.QAction(MainWindow)
        self.actionCopy_to_clipboard.setObjectName("actionCopy_to_clipboard")
        self.actionSave_results = QtWidgets.QAction(MainWindow)
        self.actionSave_results.setObjectName("actionSave_results")
        self.action_Selection_menu = QtWidgets.QAction(MainWindow)
        self.action_Selection_menu.setObjectName("action_Selection_menu")
        self.action_bubble_chart = QtWidgets.QAction(MainWindow)
        self.action_bubble_chart.setObjectName("action_bubble_chart")
        self.action_save_results = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme("document-save")
        self.action_save_results.setIcon(icon)
        self.action_save_results.setObjectName("action_save_results")
        self.action_copy_to_clipboard = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme("edit-copy")
        self.action_copy_to_clipboard.setIcon(icon)
        self.action_copy_to_clipboard.setObjectName("action_copy_to_clipboard")
        self.action_kde_plot = QtWidgets.QAction(MainWindow)
        self.action_kde_plot.setObjectName("action_kde_plot")
        self.action_ecd_plot = QtWidgets.QAction(MainWindow)
        self.action_ecd_plot.setObjectName("action_ecd_plot")
        self.action_save_selection = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme("document-save")
        self.action_save_selection.setIcon(icon)
        self.action_save_selection.setObjectName("action_save_selection")
        self.action_toggle_management = QtWidgets.QAction(MainWindow)
        self.action_toggle_management.setCheckable(True)
        self.action_toggle_management.setObjectName("action_toggle_management")
        self.action_toggle_columns = QtWidgets.QAction(MainWindow)
        self.action_toggle_columns.setCheckable(True)
        self.action_toggle_columns.setObjectName("action_toggle_columns")
        self.action_create_textgrid = QtWidgets.QAction(MainWindow)
        self.action_create_textgrid.setObjectName("action_create_textgrid")
        self.action_available_modules = QtWidgets.QAction(MainWindow)
        self.action_available_modules.setObjectName("action_available_modules")
        self.actionKWIC_Keywords_in_context = QtWidgets.QAction(MainWindow)
        self.actionKWIC_Keywords_in_context.setObjectName("actionKWIC_Keywords_in_context")
        self.actionSingle_string = QtWidgets.QAction(MainWindow)
        self.actionSingle_string.setObjectName("actionSingle_string")
        self.actionContext_columns = QtWidgets.QAction(MainWindow)
        self.actionContext_columns.setObjectName("actionContext_columns")
        self.actionEdit_stop_word_list = QtWidgets.QAction(MainWindow)
        self.actionEdit_stop_word_list.setObjectName("actionEdit_stop_word_list")
        self.actionAdd_or_remove_grouping_column = QtWidgets.QAction(MainWindow)
        self.actionAdd_or_remove_grouping_column.setObjectName("actionAdd_or_remove_grouping_column")
        self.actionUse_grouping_functions = QtWidgets.QAction(MainWindow)
        self.actionUse_grouping_functions.setCheckable(True)
        self.actionUse_grouping_functions.setObjectName("actionUse_grouping_functions")
        self.actionUse_group_filters = QtWidgets.QAction(MainWindow)
        self.actionUse_group_filters.setCheckable(True)
        self.actionUse_group_filters.setObjectName("actionUse_group_filters")
        self.actionFrequency_list = QtWidgets.QAction(MainWindow)
        self.actionFrequency_list.setObjectName("actionFrequency_list")
        self.actionContingency_table = QtWidgets.QAction(MainWindow)
        self.actionContingency_table.setObjectName("actionContingency_table")
        self.actionCollocations = QtWidgets.QAction(MainWindow)
        self.actionCollocations.setObjectName("actionCollocations")
        self.actionG_test_matrix = QtWidgets.QAction(MainWindow)
        self.actionG_test_matrix.setObjectName("actionG_test_matrix")
        self.actionUse_summary_functions = QtWidgets.QAction(MainWindow)
        self.actionUse_summary_functions.setCheckable(True)
        self.actionUse_summary_functions.setObjectName("actionUse_summary_functions")
        self.actionSelect_summary_functions = QtWidgets.QAction(MainWindow)
        self.actionSelect_summary_functions.setObjectName("actionSelect_summary_functions")
        self.actionAdd_edit_or_remove_row_filter = QtWidgets.QAction(MainWindow)
        self.actionAdd_edit_or_remove_row_filter.setObjectName("actionAdd_edit_or_remove_row_filter")
        self.actionApply_row_filters = QtWidgets.QAction(MainWindow)
        self.actionApply_row_filters.setCheckable(True)
        self.actionApply_row_filters.setObjectName("actionApply_row_filters")
        self.actionDrop_duplicate_rows = QtWidgets.QAction(MainWindow)
        self.actionDrop_duplicate_rows.setCheckable(True)
        self.actionDrop_duplicate_rows.setObjectName("actionDrop_duplicate_rows")
        self.actionAdd_edit_or_remove_group_filters = QtWidgets.QAction(MainWindow)
        self.actionAdd_edit_or_remove_group_filters.setObjectName("actionAdd_edit_or_remove_group_filters")
        self.actionSelect_group_functions = QtWidgets.QAction(MainWindow)
        self.actionSelect_group_functions.setObjectName("actionSelect_group_functions")
        self.actionContext_options = QtWidgets.QAction(MainWindow)
        self.actionContext_options.setObjectName("actionContext_options")
        self.action_reference_corpus = QtWidgets.QAction(MainWindow)
        self.action_reference_corpus.setObjectName("action_reference_corpus")
        self.action_save_query = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme("document-save")
        self.action_save_query.setIcon(icon)
        self.action_save_query.setObjectName("action_save_query")
        self.action_load_query = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme("document-open")
        self.action_load_query.setIcon(icon)
        self.action_load_query.setObjectName("action_load_query")
        self.action_share_query = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme("document-share")
        self.action_share_query.setIcon(icon)
        self.action_share_query.setObjectName("action_share_query")
        self.action_column_properties = QtWidgets.QAction(MainWindow)
        self.action_column_properties.setObjectName("action_column_properties")
        self.action_show_hidden = QtWidgets.QAction(MainWindow)
        self.action_show_hidden.setObjectName("action_show_hidden")
        self.action_scatter_plot = QtWidgets.QAction(MainWindow)
        self.action_scatter_plot.setObjectName("action_scatter_plot")
        self.action_add_column = QtWidgets.QAction(MainWindow)
        self.action_add_column.setObjectName("action_add_column")
        self.action_add_function = QtWidgets.QAction(MainWindow)
        self.action_add_function.setObjectName("action_add_function")
        self.action_link_external = QtWidgets.QAction(MainWindow)
        self.action_link_external.setObjectName("action_link_external")
        self.action_find = QtWidgets.QAction(MainWindow)
        self.action_find.setObjectName("action_find")
        self.action_visualization_designer = QtWidgets.QAction(MainWindow)
        self.action_visualization_designer.setObjectName("action_visualization_designer")
        self.action_how_to_cite = QtWidgets.QAction(MainWindow)
        self.action_how_to_cite.setObjectName("action_how_to_cite")
        self.action_regex_tester = QtWidgets.QAction(MainWindow)
        self.action_regex_tester.setObjectName("action_regex_tester")
        self.menuFile.addAction(self.action_save_results)
        self.menuFile.addAction(self.action_save_selection)
        self.menuFile.addAction(self.action_create_textgrid)
        self.menuFile.addAction(self.action_copy_to_clipboard)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.action_save_query)
        self.menuFile.addAction(self.action_load_query)
        self.menuFile.addAction(self.action_share_query)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.action_view_log)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.action_quit)
        self.menuHilfe.addAction(self.action_help)
        self.menuHilfe.addSeparator()
        self.menuHilfe.addAction(self.action_available_modules)
        self.menuHilfe.addAction(self.action_about_coquery)
        self.menuHilfe.addAction(self.action_how_to_cite)
        self.menuHilfe.addAction(self.action_regex_tester)
        self.menuCorpus.addAction(self.action_manage_corpus)
        self.menuCorpus.addSeparator()
        self.menuCorpus.addAction(self.action_link_external)
        self.menuCorpus.addAction(self.action_reference_corpus)
        self.menuCorpus.addSeparator()
        self.menuCorpus.addAction(self.action_statistics)
        self.menuCorpus.addAction(self.action_corpus_documentation)
        self.menuSettings.addAction(self.action_connection_settings)
        self.menuSettings.addAction(self.action_settings)
        self.menuSettings.addSeparator()
        self.menuSettings.addAction(self.action_toggle_columns)
        self.menuSettings.addAction(self.action_toggle_management)
        self.menuFrequencies.addAction(self.action_percentage_bars)
        self.menuFrequencies.addAction(self.action_stacked_bars)
        self.menuFrequencies.addAction(self.action_barchart_plot)
        self.menuFrequency_maps.addAction(self.action_heat_map)
        self.menuFrequency_maps.addAction(self.action_tree_map)
        self.menuFrequency_maps.addAction(self.action_word_cloud)
        self.menuFrequency_maps.addAction(self.action_bubble_chart)
        self.menuCorpus_locations.addAction(self.action_barcode_plot)
        self.menuCorpus_locations.addAction(self.action_beeswarm_plot)
        self.menuDensity_plots.addAction(self.action_kde_plot)
        self.menuDensity_plots.addAction(self.action_ecd_plot)
        self.menuDensity_plots.addAction(self.action_scatter_plot)
        self.menuTime_data.addAction(self.action_percentage_area_plot)
        self.menuTime_data.addAction(self.action_stacked_area_plot)
        self.menuTime_data.addAction(self.action_line_plot)
        self.menuAnalyse.addAction(self.menuCorpus_locations.menuAction())
        self.menuAnalyse.addAction(self.menuFrequencies.menuAction())
        self.menuAnalyse.addAction(self.menuTime_data.menuAction())
        self.menuAnalyse.addAction(self.menuFrequency_maps.menuAction())
        self.menuAnalyse.addAction(self.menuDensity_plots.menuAction())
        self.menuAnalyse.addSeparator()
        self.menuAnalyse.addAction(self.action_visualization_designer)
        self.menu_Results.addAction(self.action_column_properties)
        self.menu_Results.addAction(self.action_show_hidden)
        self.menu_Results.addAction(self.action_add_column)
        self.menu_Results.addAction(self.action_add_function)
        self.menu_Results.addSeparator()
        self.menu_Results.addAction(self.action_find)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuCorpus.menuAction())
        self.menubar.addAction(self.menu_Results.menuAction())
        self.menubar.addAction(self.menuAnalyse.menuAction())
        self.menubar.addAction(self.menuSettings.menuAction())
        self.menubar.addAction(self.menuHilfe.menuAction())
        self.label_2.setBuddy(self.combo_corpus)

        self.retranslateUi(MainWindow)
        self.tool_widget.setCurrentIndex(5)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Coquery"))
        self.box_input_settings.setTitle(_translate("MainWindow", "Quer&y strings"))
        self.edit_file_name.setText(_translate("MainWindow", "(no &query file selected)"))
        self.button_change_file.setText(_translate("MainWindow", "C&hange..."))
        self.button_change_file.setShortcut(_translate("MainWindow", "Alt+B"))
        self.group_management.setTitle(_translate("MainWindow", "Data &management"))
        __sortingEnabled = self.list_toolbox.isSortingEnabled()
        self.list_toolbox.setSortingEnabled(False)
        item = self.list_toolbox.item(0, 0)
        item.setText(_translate("MainWindow", "Feature order"))
        item = self.list_toolbox.item(1, 0)
        item.setText(_translate("MainWindow", "Context/KWIC"))
        item = self.list_toolbox.item(2, 0)
        item.setText(_translate("MainWindow", "Stopwords"))
        item = self.list_toolbox.item(3, 0)
        item.setText(_translate("MainWindow", "Data groups"))
        item = self.list_toolbox.item(4, 0)
        item.setText(_translate("MainWindow", "Transform"))
        item = self.list_toolbox.item(5, 0)
        item.setText(_translate("MainWindow", "Finalize"))
        self.list_toolbox.setSortingEnabled(__sortingEnabled)
        self.radio_context_mode_none.setText(_translate("MainWindow", "No context"))
        self.radio_context_mode_columns.setText(_translate("MainWindow", "Colu&mns"))
        self.radio_context_mode_kwic.setText(_translate("MainWindow", "&KWIC"))
        self.radio_context_mode_string.setText(_translate("MainWindow", "Sing&le string"))
        self.context_left_span.setPrefix(_translate("MainWindow", "Left: "))
        self.context_right_span.setPrefix(_translate("MainWindow", "Right: "))
        self.check_restrict.setText(_translate("MainWindow", "&Restrict to sentences"))
        self.label_stopwords.setText(_translate("MainWindow", "Number of stop words: {}"))
        self.button_stopwords.setText(_translate("MainWindow", "Change stop &words..."))
        self.button_add_summary_function.setText(_translate("MainWindow", "Summary functions{}..."))
        self.button_filters.setText(_translate("MainWindow", "Filter results{}..."))
        self.button_apply_management.setText(_translate("MainWindow", "&Apply"))
        self.button_apply_management.setShortcut(_translate("MainWindow", "F5"))
        self.button_cancel_management.setText(_translate("MainWindow", "Cancel"))
        self.button_run_query.setText(_translate("MainWindow", "&New query"))
        self.button_run_query.setShortcut(_translate("MainWindow", "Ctrl+N"))
        self.button_stop_query.setText(_translate("MainWindow", "&Stop"))
        self.box_corpus_select.setTitle(_translate("MainWindow", "Fe&ature selection"))
        self.label_2.setText(_translate("MainWindow", "&Corpus:"))
        self.button_toggle_hidden.setText(_translate("MainWindow", "Hidden columns"))
        self.text_no_match.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Droid Sans\'; font-size:11pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600;\">No match.</span></p></body></html>"))
        self.menuFile.setTitle(_translate("MainWindow", "&File"))
        self.menuHilfe.setTitle(_translate("MainWindow", "&Help"))
        self.menuCorpus.setTitle(_translate("MainWindow", "&Corpus"))
        self.menuSettings.setTitle(_translate("MainWindow", "Op&tions"))
        self.menuAnalyse.setTitle(_translate("MainWindow", "&Visualizations"))
        self.menuFrequencies.setTitle(_translate("MainWindow", "&Bar charts"))
        self.menuFrequency_maps.setTitle(_translate("MainWindow", "&Frequency maps"))
        self.menuCorpus_locations.setTitle(_translate("MainWindow", "&Corpus locations"))
        self.menuDensity_plots.setTitle(_translate("MainWindow", "&Numeric plots"))
        self.menuTime_data.setTitle(_translate("MainWindow", "&Time data"))
        self.menu_Results.setTitle(_translate("MainWindow", "&Results"))
        self.action_open_input_file.setText(_translate("MainWindow", "&Open input file..."))
        self.action_open_input_file.setShortcut(_translate("MainWindow", "Ctrl+O"))
        self.action_help.setText(_translate("MainWindow", "&Help"))
        self.action_help.setShortcut(_translate("MainWindow", "F1"))
        self.action_about_coquery.setText(_translate("MainWindow", "&About Coquery"))
        self.actionDummy.setText(_translate("MainWindow", "Dummy"))
        self.action_distinct_tokens.setText(_translate("MainWindow", "Distinct tokens"))
        self.action_frequency.setText(_translate("MainWindow", "Frequency"))
        self.action_all_tokens.setText(_translate("MainWindow", "All tokens"))
        self.action_statistics.setText(_translate("MainWindow", "&Statistics"))
        self.action_connection_settings.setText(_translate("MainWindow", "&Database connections..."))
        self.action_settings.setText(_translate("MainWindow", "&Settings..."))
        self.action_quit.setText(_translate("MainWindow", "&Quit"))
        self.action_quit.setShortcut(_translate("MainWindow", "Ctrl+Q"))
        self.action_build_corpus.setText(_translate("MainWindow", "&Build new corpus..."))
        self.action_build_corpus.setToolTip(_translate("MainWindow", "Build a new corpus from text files in a folder"))
        self.action_remove_corpus.setText(_translate("MainWindow", "&Remove corpus..."))
        self.action_remove_corpus.setToolTip(_translate("MainWindow", "Permanently and irrevocably remove corpus database"))
        self.action_manage_corpus.setText(_translate("MainWindow", "Corpus &manager..."))
        self.action_manage_corpus.setToolTip(_translate("MainWindow", "Install a corpus into a MySQL database"))
        self.action_manage_corpus.setShortcut(_translate("MainWindow", "Ctrl+M"))
        self.action_tree_map.setText(_translate("MainWindow", "&Tree map"))
        self.action_heat_map.setText(_translate("MainWindow", "&Heat map"))
        self.action_word_cloud.setText(_translate("MainWindow", "&Word cloud"))
        self.action_barcode_plot.setText(_translate("MainWindow", "&Barcode plot"))
        self.action_beeswarm_plot.setText(_translate("MainWindow", "Bee&swarm plot"))
        self.action_barchart_plot.setText(_translate("MainWindow", "&Bars"))
        self.action_time_series_plot.setText(_translate("MainWindow", "T&ime series"))
        self.action_corpus_documentation.setText(_translate("MainWindow", "&Documentation..."))
        self.action_percentage_area_plot.setText(_translate("MainWindow", "&Percentage areas"))
        self.action_stacked_area_plot.setText(_translate("MainWindow", "&Stacked areas"))
        self.action_line_plot.setText(_translate("MainWindow", "&Lines"))
        self.actionStop_words.setText(_translate("MainWindow", "Stop words..."))
        self.actionStop_words_2.setText(_translate("MainWindow", "&Stop words..."))
        self.action_percentage_bars.setText(_translate("MainWindow", "&Percentage bars"))
        self.action_stacked_bars.setText(_translate("MainWindow", "&Stacked bars"))
        self.action_view_log.setText(_translate("MainWindow", "View session &log..."))
        self.action_mysql_server_help.setText(_translate("MainWindow", "MySQL server help"))
        self.action_Column_context_menu.setText(_translate("MainWindow", "[Column context menu]"))
        self.action_Row_context_menu.setText(_translate("MainWindow", "[Row context menu]"))
        self.actionCopy_to_clipboard.setText(_translate("MainWindow", "Copy to clipboard"))
        self.actionSave_results.setText(_translate("MainWindow", "Save"))
        self.action_Selection_menu.setText(_translate("MainWindow", "[Selection menu]"))
        self.action_bubble_chart.setText(_translate("MainWindow", "&Bubble chart"))
        self.action_save_results.setText(_translate("MainWindow", "&Save results..."))
        self.action_save_results.setShortcut(_translate("MainWindow", "Ctrl+S"))
        self.action_copy_to_clipboard.setText(_translate("MainWindow", "&Copy selection to clipboard"))
        self.action_copy_to_clipboard.setShortcut(_translate("MainWindow", "Ctrl+C"))
        self.action_kde_plot.setText(_translate("MainWindow", "&Kernel Density Estimate"))
        self.action_ecd_plot.setText(_translate("MainWindow", "&Estimated cumulative distribution"))
        self.action_save_selection.setText(_translate("MainWindow", "Sa&ve selection..."))
        self.action_save_selection.setShortcut(_translate("MainWindow", "Ctrl+Shift+S"))
        self.action_toggle_management.setText(_translate("MainWindow", "Show &output management"))
        self.action_toggle_columns.setText(_translate("MainWindow", "Show &column &selection"))
        self.action_create_textgrid.setText(_translate("MainWindow", "Create te&xtgrids..."))
        self.action_create_textgrid.setShortcut(_translate("MainWindow", "Ctrl+T"))
        self.action_available_modules.setText(_translate("MainWindow", "Available &modules..."))
        self.actionKWIC_Keywords_in_context.setText(_translate("MainWindow", "KWIC (Keywords in context)"))
        self.actionSingle_string.setText(_translate("MainWindow", "Single context string"))
        self.actionContext_columns.setText(_translate("MainWindow", "Context columns"))
        self.actionEdit_stop_word_list.setText(_translate("MainWindow", "Edit stop word list.."))
        self.actionAdd_or_remove_grouping_column.setText(_translate("MainWindow", "Add or remove grouping column..."))
        self.actionUse_grouping_functions.setText(_translate("MainWindow", "Apply group functions"))
        self.actionUse_group_filters.setText(_translate("MainWindow", "Use group filters"))
        self.actionFrequency_list.setText(_translate("MainWindow", "Frequency list"))
        self.actionContingency_table.setText(_translate("MainWindow", "Contingency table"))
        self.actionCollocations.setText(_translate("MainWindow", "Collocations"))
        self.actionG_test_matrix.setText(_translate("MainWindow", "G-test matrix"))
        self.actionUse_summary_functions.setText(_translate("MainWindow", "Apply summary functions"))
        self.actionSelect_summary_functions.setText(_translate("MainWindow", "Select summary functions..."))
        self.actionAdd_edit_or_remove_row_filter.setText(_translate("MainWindow", "Add, edit or remove row filter..."))
        self.actionApply_row_filters.setText(_translate("MainWindow", "Apply row filters"))
        self.actionDrop_duplicate_rows.setText(_translate("MainWindow", "Drop duplicate rows"))
        self.actionAdd_edit_or_remove_group_filters.setText(_translate("MainWindow", "Add, edit or remove group filters..."))
        self.actionSelect_group_functions.setText(_translate("MainWindow", "Select group functions..."))
        self.actionContext_options.setText(_translate("MainWindow", "Context options..."))
        self.action_reference_corpus.setText(_translate("MainWindow", "Set &reference corpus:"))
        self.action_reference_corpus.setShortcut(_translate("MainWindow", "Ctrl+R"))
        self.action_save_query.setText(_translate("MainWindow", "S&ave query..."))
        self.action_load_query.setText(_translate("MainWindow", "L&oad query..."))
        self.action_share_query.setText(_translate("MainWindow", "S&hare query..."))
        self.action_column_properties.setText(_translate("MainWindow", "Column &properties..."))
        self.action_column_properties.setShortcut(_translate("MainWindow", "Ctrl+I"))
        self.action_show_hidden.setText(_translate("MainWindow", "Show &hidden columns"))
        self.action_scatter_plot.setText(_translate("MainWindow", "&Scatter plot"))
        self.action_add_column.setText(_translate("MainWindow", "Add &user data column"))
        self.action_add_function.setText(_translate("MainWindow", "Add &function..."))
        self.action_add_function.setShortcut(_translate("MainWindow", "Ctrl+U"))
        self.action_link_external.setText(_translate("MainWindow", "Link e&xternal corpus"))
        self.action_link_external.setShortcut(_translate("MainWindow", "Ctrl+E"))
        self.action_find.setText(_translate("MainWindow", "F&ind..."))
        self.action_find.setShortcut(_translate("MainWindow", "Ctrl+F"))
        self.action_visualization_designer.setText(_translate("MainWindow", "&Visualization designer..."))
        self.action_visualization_designer.setShortcut(_translate("MainWindow", "Ctrl+D"))
        self.action_how_to_cite.setText(_translate("MainWindow", "How to &cite"))
        self.action_regex_tester.setText(_translate("MainWindow", "Regular &expression tester..."))

from ..buttonlist import CoqButtonList
from ..classes import CoqClickableLabel, CoqRotatedButton, CoqTextEdit
from ..findwidget import CoqFindWidget
from ..grouptree import CoqGroupTree
from ..resultstable import CoqHiddenResultsTable, CoqResultsTableView

