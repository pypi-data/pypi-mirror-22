# ----------------------------------------------------------------------
# Network-related settings:
# ----------------------------------------------------------------------
 
# Run on the test network instead of the real bitcoin network.
#testnet=0
 
# Connect via a socks4 proxy
#proxy=127.0.0.1:9050
 
# Use as many addnode= settings as you like to connect to specific peers
#addnode=69.164.218.197
#addnode=10.0.0.2:8333
 
# ... or use as many connect= settings as you like to connect ONLY
# to specific peers:
#connect=69.164.218.197
#connect=10.0.0.1:8333
  
# Maximum number of inbound+outbound connections. Start low and watch
# your bandwidth, then increase gradually until you reach a comfortable
# level.
maxconnections=20

# Enable or Disable UPnP
upnp=0

# ----------------------------------------------------------------------
# JSON-RPC options (for controlling a running Bitcoin/bitcoind process)
# ----------------------------------------------------------------------
 
# server=1 tells Bitcoin-QT to accept JSON-RPC commands. Be sure
# to select a good password below!
server=1
 
# You must set rpcuser and rpcpassword to secure the JSON-RPC api
rpcuser=user1
rpcpassword=YOUR_LONG_PASSWORD_HERE
 
# How many seconds bitcoin will wait for a complete RPC HTTP request.
# after the HTTP connection is established. 
#rpctimeout=30
 
# By default, only RPC connections from localhost are allowed.  Specify
# as many rpcallowip= settings as you like to allow connections from
# other hosts (and you may use * as a wildcard character).
# NOTE: opening up the RPC port to hosts outside your local
# trusted network is NOT RECOMMENDED, because the rpcpassword
# is transmitted over the network unencrypted.
#rpcallowip=10.1.1.34
#rpcallowip=192.168.1.*
 
# Listen for RPC connections on this TCP port:
#rpcport=8332
 
# You can use Bitcoin or bitcoind to send commands to Bitcoin/bitcoind
# running on another host using this option:
#rpcconnect=127.0.0.1
 
# Use Secure Sockets Layer (also known as TLS or HTTPS) to communicate
# with Bitcoin -server or bitcoind
#rpcssl=1

# OpenSSL settings used when rpcssl=1
#rpcsslciphers=TLSv1+HIGH:!SSLv2:!aNULL:!eNULL:!AH:!3DES:@STRENGTH
#rpcsslcertificatechainfile=server.cert
#rpcsslprivatekeyfile=server.pem

# ----------------------------------------------------------------------
# Miscellaneous options
# ----------------------------------------------------------------------
 
# Set gen=1 to attempt to generate bitcoins
#gen=0
 
# Pre-generate this many public/private key pairs, so wallet backups will be valid for
# both prior transactions and several dozen future transactions.
#keypool=100

# Pay an optional transaction fee every time you send bitcoins.  Transactions with fees
# are more likely than free transactions to be included in generated blocks, so may
# be validated sooner.
#paytxfee=0.00

# Allow direct connections for the 'pay via IP address' feature.
#allowreceivebyip=1

# Daemonize the bitcoin node
daemon=1

# Disable wallet-related functions and rpc calls
disablewallet=1

# Execute a command when a new block is found
#blocknotify=/home/bitcoin/.bitcoin/block_log.sh %s

# Execute a command when an allert is received
#alertnotify=/home/bitcoin/.bitcoin/alert.sh %s

# ----------------------------------------------------------------------
# User interface options
# ----------------------------------------------------------------------

# Start Bitcoin minimized
#min=1

# Minimize to the system tray
#minimizetotray=1
