from telethon.tl.mtproto_request import MTProtoRequest


class UpdateReadHistoryInbox(MTProtoRequest):
    """Class generated by TLObjects' generator. All changes will be ERASED. Original .tl definition below.
    updateReadHistoryInbox#9961fd5c peer:Peer max_id:int pts:int pts_count:int = Update"""

    # Telegram's constructor ID (and unique identifier) for this class
    constructor_id = 0x9961fd5c

    def __init__(self, peer, max_id, pts, pts_count):
        """
        :param peer: Telegram type: «Peer».
        :param max_id: Telegram type: «int».
        :param pts: Telegram type: «int».
        :param pts_count: Telegram type: «int».
        """
        super().__init__()

        self.peer = peer
        self.max_id = max_id
        self.pts = pts
        self.pts_count = pts_count

    def on_send(self, writer):
        writer.write_int(UpdateReadHistoryInbox.constructor_id, signed=False)
        self.peer.on_send(writer)
        writer.write_int(self.max_id)
        writer.write_int(self.pts)
        writer.write_int(self.pts_count)

    @staticmethod
    def empty():
        """Returns an "empty" instance (all attributes are None)"""
        return UpdateReadHistoryInbox(None, None, None, None)

    def on_response(self, reader):
        self.peer = reader.tgread_object()
        self.max_id = reader.read_int()
        self.pts = reader.read_int()
        self.pts_count = reader.read_int()

    def __repr__(self):
        return 'updateReadHistoryInbox#9961fd5c peer:Peer max_id:int pts:int pts_count:int = Update'

    def __str__(self):
        return '(updateReadHistoryInbox (ID: 0x9961fd5c) = (peer={}, max_id={}, pts={}, pts_count={}))'.format(str(self.peer), str(self.max_id), str(self.pts), str(self.pts_count))
