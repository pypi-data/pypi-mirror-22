from telethon.tl.mtproto_request import MTProtoRequest


class UpdateChatParticipantAdmin(MTProtoRequest):
    """Class generated by TLObjects' generator. All changes will be ERASED. Original .tl definition below.
    updateChatParticipantAdmin#b6901959 chat_id:int user_id:int is_admin:Bool version:int = Update"""

    # Telegram's constructor ID (and unique identifier) for this class
    constructor_id = 0xb6901959

    def __init__(self, chat_id, user_id, is_admin, version):
        """
        :param chat_id: Telegram type: «int».
        :param user_id: Telegram type: «int».
        :param is_admin: Telegram type: «Bool».
        :param version: Telegram type: «int».
        """
        super().__init__()

        self.chat_id = chat_id
        self.user_id = user_id
        self.is_admin = is_admin
        self.version = version

    def on_send(self, writer):
        writer.write_int(UpdateChatParticipantAdmin.constructor_id, signed=False)
        writer.write_int(self.chat_id)
        writer.write_int(self.user_id)
        writer.tgwrite_bool(self.is_admin)
        writer.write_int(self.version)

    @staticmethod
    def empty():
        """Returns an "empty" instance (all attributes are None)"""
        return UpdateChatParticipantAdmin(None, None, None, None)

    def on_response(self, reader):
        self.chat_id = reader.read_int()
        self.user_id = reader.read_int()
        self.is_admin = reader.tgread_bool()
        self.version = reader.read_int()

    def __repr__(self):
        return 'updateChatParticipantAdmin#b6901959 chat_id:int user_id:int is_admin:Bool version:int = Update'

    def __str__(self):
        return '(updateChatParticipantAdmin (ID: 0xb6901959) = (chat_id={}, user_id={}, is_admin={}, version={}))'.format(str(self.chat_id), str(self.user_id), str(self.is_admin), str(self.version))
