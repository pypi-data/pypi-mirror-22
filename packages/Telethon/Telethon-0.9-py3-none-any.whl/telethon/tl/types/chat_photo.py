from telethon.tl.mtproto_request import MTProtoRequest


class ChatPhoto(MTProtoRequest):
    """Class generated by TLObjects' generator. All changes will be ERASED. Original .tl definition below.
    chatPhoto#6153276a photo_small:FileLocation photo_big:FileLocation = ChatPhoto"""

    # Telegram's constructor ID (and unique identifier) for this class
    constructor_id = 0x6153276a

    def __init__(self, photo_small, photo_big):
        """
        :param photo_small: Telegram type: «FileLocation».
        :param photo_big: Telegram type: «FileLocation».
        """
        super().__init__()

        self.photo_small = photo_small
        self.photo_big = photo_big

    def on_send(self, writer):
        writer.write_int(ChatPhoto.constructor_id, signed=False)
        self.photo_small.on_send(writer)
        self.photo_big.on_send(writer)

    @staticmethod
    def empty():
        """Returns an "empty" instance (all attributes are None)"""
        return ChatPhoto(None, None)

    def on_response(self, reader):
        self.photo_small = reader.tgread_object()
        self.photo_big = reader.tgread_object()

    def __repr__(self):
        return 'chatPhoto#6153276a photo_small:FileLocation photo_big:FileLocation = ChatPhoto'

    def __str__(self):
        return '(chatPhoto (ID: 0x6153276a) = (photo_small={}, photo_big={}))'.format(str(self.photo_small), str(self.photo_big))
