from telethon.tl.mtproto_request import MTProtoRequest


class LeaveChannelRequest(MTProtoRequest):
    """Class generated by TLObjects' generator. All changes will be ERASED. Original .tl definition below.
    channels.leaveChannel#f836aa95 channel:InputChannel = Updates"""

    # Telegram's constructor ID (and unique identifier) for this class
    constructor_id = 0xf836aa95

    def __init__(self, channel):
        """
        :param channel: Telegram type: «InputChannel».
        """
        super().__init__()
        self.result = None
        self.confirmed = True  # Confirmed by default

        self.channel = channel

    def on_send(self, writer):
        writer.write_int(LeaveChannelRequest.constructor_id, signed=False)
        self.channel.on_send(writer)

    @staticmethod
    def empty():
        """Returns an "empty" instance (all attributes are None)"""
        return LeaveChannelRequest(None)

    def on_response(self, reader):
        self.result = reader.tgread_object()

    def __repr__(self):
        return 'channels.leaveChannel#f836aa95 channel:InputChannel = Updates'

    def __str__(self):
        return '(channels.leaveChannel (ID: 0xf836aa95) = (channel={}))'.format(str(self.channel))
