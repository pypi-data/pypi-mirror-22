from telethon.tl.mtproto_request import MTProtoRequest


class UpdateBotInlineSend(MTProtoRequest):
    """Class generated by TLObjects' generator. All changes will be ERASED. Original .tl definition below.
    updateBotInlineSend#0e48f964 flags:# user_id:int query:string geo:flags.0?GeoPoint id:string msg_id:flags.1?InputBotInlineMessageID = Update"""

    # Telegram's constructor ID (and unique identifier) for this class
    constructor_id = 0xe48f964

    def __init__(self, user_id, query, id, geo=None, msg_id=None):
        """
        :param user_id: Telegram type: «int».
        :param query: Telegram type: «string».
        :param geo: Telegram type: «GeoPoint».
        :param id: Telegram type: «string».
        :param msg_id: Telegram type: «InputBotInlineMessageID».
        """
        super().__init__()

        self.user_id = user_id
        self.query = query
        self.geo = geo
        self.id = id
        self.msg_id = msg_id

    def on_send(self, writer):
        writer.write_int(UpdateBotInlineSend.constructor_id, signed=False)
        # Calculate the flags. This equals to those flag arguments which are NOT None
        flags = 0
        flags |= (1 << 0) if self.geo else 0
        flags |= (1 << 1) if self.msg_id else 0
        writer.write_int(flags)

        writer.write_int(self.user_id)
        writer.tgwrite_string(self.query)
        if self.geo:
            self.geo.on_send(writer)

        writer.tgwrite_string(self.id)
        if self.msg_id:
            self.msg_id.on_send(writer)

    @staticmethod
    def empty():
        """Returns an "empty" instance (all attributes are None)"""
        return UpdateBotInlineSend(None, None, None, None, None)

    def on_response(self, reader):
        flags = reader.read_int()

        self.user_id = reader.read_int()
        self.query = reader.tgread_string()
        if (flags & (1 << 0)) != 0:
            self.geo = reader.tgread_object()

        self.id = reader.tgread_string()
        if (flags & (1 << 1)) != 0:
            self.msg_id = reader.tgread_object()

    def __repr__(self):
        return 'updateBotInlineSend#0e48f964 flags:# user_id:int query:string geo:flags.0?GeoPoint id:string msg_id:flags.1?InputBotInlineMessageID = Update'

    def __str__(self):
        return '(updateBotInlineSend (ID: 0xe48f964) = (user_id={}, query={}, geo={}, id={}, msg_id={}))'.format(str(self.user_id), str(self.query), str(self.geo), str(self.id), str(self.msg_id))
