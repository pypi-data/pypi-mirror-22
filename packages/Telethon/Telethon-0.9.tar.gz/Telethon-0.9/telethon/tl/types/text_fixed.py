from telethon.tl.mtproto_request import MTProtoRequest


class TextFixed(MTProtoRequest):
    """Class generated by TLObjects' generator. All changes will be ERASED. Original .tl definition below.
    textFixed#6c3f19b9 text:RichText = RichText"""

    # Telegram's constructor ID (and unique identifier) for this class
    constructor_id = 0x6c3f19b9

    def __init__(self, text):
        """
        :param text: Telegram type: «RichText».
        """
        super().__init__()

        self.text = text

    def on_send(self, writer):
        writer.write_int(TextFixed.constructor_id, signed=False)
        self.text.on_send(writer)

    @staticmethod
    def empty():
        """Returns an "empty" instance (all attributes are None)"""
        return TextFixed(None)

    def on_response(self, reader):
        self.text = reader.tgread_object()

    def __repr__(self):
        return 'textFixed#6c3f19b9 text:RichText = RichText'

    def __str__(self):
        return '(textFixed (ID: 0x6c3f19b9) = (text={}))'.format(str(self.text))
