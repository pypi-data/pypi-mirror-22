from telethon.tl.mtproto_request import MTProtoRequest


class GetMaskStickersRequest(MTProtoRequest):
    """Class generated by TLObjects' generator. All changes will be ERASED. Original .tl definition below.
    messages.getMaskStickers#65b8c79f hash:int = messages.AllStickers"""

    # Telegram's constructor ID (and unique identifier) for this class
    constructor_id = 0x65b8c79f

    def __init__(self, hash):
        """
        :param hash: Telegram type: «int».
        """
        super().__init__()
        self.result = None
        self.confirmed = True  # Confirmed by default

        self.hash = hash

    def on_send(self, writer):
        writer.write_int(GetMaskStickersRequest.constructor_id, signed=False)
        writer.write_int(self.hash)

    @staticmethod
    def empty():
        """Returns an "empty" instance (all attributes are None)"""
        return GetMaskStickersRequest(None)

    def on_response(self, reader):
        self.result = reader.tgread_object()

    def __repr__(self):
        return 'messages.getMaskStickers#65b8c79f hash:int = messages.AllStickers'

    def __str__(self):
        return '(messages.getMaskStickers (ID: 0x65b8c79f) = (hash={}))'.format(str(self.hash))
