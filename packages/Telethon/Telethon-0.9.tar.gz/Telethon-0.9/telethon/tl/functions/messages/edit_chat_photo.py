from telethon.tl.mtproto_request import MTProtoRequest


class EditChatPhotoRequest(MTProtoRequest):
    """Class generated by TLObjects' generator. All changes will be ERASED. Original .tl definition below.
    messages.editChatPhoto#ca4c79d8 chat_id:int photo:InputChatPhoto = Updates"""

    # Telegram's constructor ID (and unique identifier) for this class
    constructor_id = 0xca4c79d8

    def __init__(self, chat_id, photo):
        """
        :param chat_id: Telegram type: «int».
        :param photo: Telegram type: «InputChatPhoto».
        """
        super().__init__()
        self.result = None
        self.confirmed = True  # Confirmed by default

        self.chat_id = chat_id
        self.photo = photo

    def on_send(self, writer):
        writer.write_int(EditChatPhotoRequest.constructor_id, signed=False)
        writer.write_int(self.chat_id)
        self.photo.on_send(writer)

    @staticmethod
    def empty():
        """Returns an "empty" instance (all attributes are None)"""
        return EditChatPhotoRequest(None, None)

    def on_response(self, reader):
        self.result = reader.tgread_object()

    def __repr__(self):
        return 'messages.editChatPhoto#ca4c79d8 chat_id:int photo:InputChatPhoto = Updates'

    def __str__(self):
        return '(messages.editChatPhoto (ID: 0xca4c79d8) = (chat_id={}, photo={}))'.format(str(self.chat_id), str(self.photo))
