from telethon.tl.mtproto_request import MTProtoRequest


class ReadHistoryRequest(MTProtoRequest):
    """Class generated by TLObjects' generator. All changes will be ERASED. Original .tl definition below.
    messages.readHistory#0e306d3a peer:InputPeer max_id:int = messages.AffectedMessages"""

    # Telegram's constructor ID (and unique identifier) for this class
    constructor_id = 0xe306d3a

    def __init__(self, peer, max_id):
        """
        :param peer: Telegram type: «InputPeer».
        :param max_id: Telegram type: «int».
        """
        super().__init__()
        self.result = None
        self.confirmed = True  # Confirmed by default

        self.peer = peer
        self.max_id = max_id

    def on_send(self, writer):
        writer.write_int(ReadHistoryRequest.constructor_id, signed=False)
        self.peer.on_send(writer)
        writer.write_int(self.max_id)

    @staticmethod
    def empty():
        """Returns an "empty" instance (all attributes are None)"""
        return ReadHistoryRequest(None, None)

    def on_response(self, reader):
        self.result = reader.tgread_object()

    def __repr__(self):
        return 'messages.readHistory#0e306d3a peer:InputPeer max_id:int = messages.AffectedMessages'

    def __str__(self):
        return '(messages.readHistory (ID: 0xe306d3a) = (peer={}, max_id={}))'.format(str(self.peer), str(self.max_id))
