
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '4C9C407F5D6E80895E688C340BFBCF50'
    
_lr_action_items = {'OP_MODULO':([3,8,9,11,12,15,20,65,69,],[-37,42,-34,-33,-38,-35,-36,-39,-40,]),'OP_AND_P':([2,3,8,9,10,11,12,14,15,20,21,41,49,53,54,55,56,57,58,59,60,61,65,69,71,72,73,74,75,],[-26,-37,-32,-34,-16,-33,-38,-14,-35,-36,51,-15,-13,-19,-25,-24,-22,-20,-17,-23,-21,-18,-39,-40,-31,-30,-28,-27,-29,]),'RPAREN':([1,2,3,6,8,9,10,11,12,14,15,16,17,19,20,21,39,41,49,52,53,54,55,56,57,58,59,60,61,65,69,70,71,72,73,74,75,76,77,78,79,],[-10,-26,-37,-8,-32,-34,-16,-33,-38,-14,-35,-2,-4,-6,-36,-12,69,-15,-13,-9,-19,-25,-24,-22,-20,-17,-23,-21,-18,-39,-40,-7,-31,-30,-28,-27,-29,-1,-3,-5,-11,]),'OP_OR_P':([1,2,3,6,8,9,10,11,12,14,15,20,21,41,49,52,53,54,55,56,57,58,59,60,61,65,69,71,72,73,74,75,79,],[-10,-26,-37,40,-32,-34,-16,-33,-38,-14,-35,-36,-12,-15,-13,-9,-19,-25,-24,-22,-20,-17,-23,-21,-18,-39,-40,-31,-30,-28,-27,-29,-11,]),'OP_IS':([2,3,8,9,11,12,15,20,65,69,71,72,73,74,75,],[23,-37,-32,-34,-33,-38,-35,-36,-39,-40,-31,-30,-28,-27,-29,]),'OP_GE':([2,3,8,9,11,12,15,20,65,69,71,72,73,74,75,],[29,-37,-32,-34,-33,-38,-35,-36,-39,-40,-31,-30,-28,-27,-29,]),'OP_NE':([2,3,8,9,11,12,15,20,65,69,71,72,73,74,75,],[30,-37,-32,-34,-33,-38,-35,-36,-39,-40,-31,-30,-28,-27,-29,]),'RBRACK':([32,33,34,35,36,37,38,80,81,82,83,84,85,],[-42,-46,-43,65,-44,-45,-41,-48,-52,-49,-50,-51,-47,]),'OP_TIMES':([3,8,9,11,12,15,20,65,69,],[-37,46,-34,-33,-38,-35,-36,-39,-40,]),'OP_DIVIDE':([3,8,9,11,12,15,20,65,69,],[-37,43,-34,-33,-38,-35,-36,-39,-40,]),'OP_PLUS':([3,8,9,11,12,15,20,65,69,],[-37,45,-34,-33,-38,-35,-36,-39,-40,]),'OP_EQ':([2,3,8,9,11,12,15,20,65,69,71,72,73,74,75,],[27,-37,-32,-34,-33,-38,-35,-36,-39,-40,-31,-30,-28,-27,-29,]),'OP_LT':([2,3,8,9,11,12,15,20,65,69,71,72,73,74,75,],[25,-37,-32,-34,-33,-38,-35,-36,-39,-40,-31,-30,-28,-27,-29,]),'OP_XOR':([1,2,3,6,8,9,10,11,12,14,15,17,19,20,21,41,49,52,53,54,55,56,57,58,59,60,61,65,69,70,71,72,73,74,75,78,79,],[-10,-26,-37,-8,-32,-34,-16,-33,-38,-14,-35,48,-6,-36,-12,-15,-13,-9,-19,-25,-24,-22,-20,-17,-23,-21,-18,-39,-40,-7,-31,-30,-28,-27,-29,-5,-11,]),'$end':([1,2,3,6,8,9,10,11,12,13,14,15,16,17,19,20,21,41,49,52,53,54,55,56,57,58,59,60,61,65,69,70,71,72,73,74,75,76,77,78,79,],[-10,-26,-37,-8,-32,-34,-16,-33,-38,0,-14,-35,-2,-4,-6,-36,-12,-15,-13,-9,-19,-25,-24,-22,-20,-17,-23,-21,-18,-39,-40,-7,-31,-30,-28,-27,-29,-1,-3,-5,-11,]),'VARIABLE':([0,4,5,7,18,22,23,24,25,26,27,28,29,30,31,40,42,43,44,45,46,47,48,50,51,62,63,64,66,67,68,],[3,37,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,37,37,37,37,37,37,]),'OP_XOR_P':([1,2,3,8,9,10,11,12,14,15,20,21,41,49,53,54,55,56,57,58,59,60,61,65,69,71,72,73,74,75,79,],[22,-26,-37,-32,-34,-16,-33,-38,-14,-35,-36,-12,-15,-13,-19,-25,-24,-22,-20,-17,-23,-21,-18,-39,-40,-31,-30,-28,-27,-29,-11,]),'LPAREN':([0,5,7,18,22,23,24,25,26,27,28,29,30,31,40,42,43,44,45,46,47,48,50,51,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'FLOAT':([0,4,5,7,18,22,23,24,25,26,27,28,29,30,31,40,42,43,44,45,46,47,48,50,51,62,63,64,66,67,68,],[20,36,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,36,36,36,36,36,36,]),'CONSTANT':([0,4,5,7,18,22,23,24,25,26,27,28,29,30,31,40,42,43,44,45,46,47,48,50,51,62,63,64,66,67,68,],[12,33,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,33,33,33,33,33,33,]),'OP_AND':([1,2,3,6,8,9,10,11,12,14,15,19,20,21,41,49,52,53,54,55,56,57,58,59,60,61,65,69,70,71,72,73,74,75,79,],[-10,-26,-37,-8,-32,-34,-16,-33,-38,-14,-35,50,-36,-12,-15,-13,-9,-19,-25,-24,-22,-20,-17,-23,-21,-18,-39,-40,-7,-31,-30,-28,-27,-29,-11,]),'INTEGER':([0,4,5,7,18,22,23,24,25,26,27,28,29,30,31,40,42,43,44,45,46,47,48,50,51,62,63,64,66,67,68,],[15,34,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,34,34,34,34,34,34,]),'LBRACK':([0,5,7,18,22,23,24,25,26,27,28,29,30,31,40,42,43,44,45,46,47,48,50,51,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'OP_EXISTS':([0,5,18,22,40,47,48,50,51,],[7,7,7,7,7,7,7,7,7,]),'OP_IN':([2,3,8,9,11,12,15,20,65,69,71,72,73,74,75,],[31,-37,-32,-34,-33,-38,-35,-36,-39,-40,-31,-30,-28,-27,-29,]),'OP_NOT':([0,5,22,40,47,48,50,51,],[18,18,18,18,18,18,18,18,]),'COMMA':([32,33,34,36,37,38,],[62,63,64,66,67,68,]),'IPV6':([0,4,5,7,18,22,23,24,25,26,27,28,29,30,31,40,42,43,44,45,46,47,48,50,51,62,63,64,66,67,68,],[9,32,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,32,32,32,32,32,32,]),'OP_MINUS':([3,8,9,11,12,15,20,65,69,],[-37,44,-34,-33,-38,-35,-36,-39,-40,]),'IPV4':([0,4,5,7,18,22,23,24,25,26,27,28,29,30,31,40,42,43,44,45,46,47,48,50,51,62,63,64,66,67,68,],[11,38,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,38,38,38,38,38,38,]),'OP_LIKE':([2,3,8,9,11,12,15,20,65,69,71,72,73,74,75,],[28,-37,-32,-34,-33,-38,-35,-36,-39,-40,-31,-30,-28,-27,-29,]),'OP_OR':([1,2,3,6,8,9,10,11,12,14,15,16,17,19,20,21,41,49,52,53,54,55,56,57,58,59,60,61,65,69,70,71,72,73,74,75,77,78,79,],[-10,-26,-37,-8,-32,-34,-16,-33,-38,-14,-35,47,-4,-6,-36,-12,-15,-13,-9,-19,-25,-24,-22,-20,-17,-23,-21,-18,-39,-40,-7,-31,-30,-28,-27,-29,-3,-5,-11,]),'OP_GT':([2,3,8,9,11,12,15,20,65,69,71,72,73,74,75,],[26,-37,-32,-34,-33,-38,-35,-36,-39,-40,-31,-30,-28,-27,-29,]),'OP_LE':([2,3,8,9,11,12,15,20,65,69,71,72,73,74,75,],[24,-37,-32,-34,-33,-38,-35,-36,-39,-40,-31,-30,-28,-27,-29,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'ex_expression':([0,5,18,22,40,47,48,50,51,],[14,14,49,14,14,14,14,14,14,]),'xor_p_expression':([0,5,22,40,47,48,50,],[6,6,52,6,6,6,6,]),'factor':([0,5,7,18,22,23,24,25,26,27,28,29,30,31,40,42,43,44,45,46,47,48,50,51,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'term':([0,5,7,18,22,23,24,25,26,27,28,29,30,31,40,42,43,44,45,46,47,48,50,51,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,71,72,73,74,75,2,2,2,2,]),'xor_expression':([0,5,47,48,],[16,16,16,77,]),'and_expression':([0,5,47,48,50,],[17,17,17,17,78,]),'cmp_expression':([0,5,7,18,22,23,24,25,26,27,28,29,30,31,40,47,48,50,51,],[10,10,41,10,10,53,54,55,56,57,58,59,60,61,10,10,10,10,10,]),'or_p_expression':([0,5,40,47,48,50,],[19,19,70,19,19,19,]),'expression':([0,5,47,],[13,39,76,]),'list':([4,62,63,64,66,67,68,],[35,80,81,82,83,84,85,]),'and_p_expression':([0,5,22,40,47,48,50,51,],[1,1,1,1,1,1,1,79,]),'not_expression':([0,5,22,40,47,48,50,51,],[21,21,21,21,21,21,21,21,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> xor_expression OP_OR expression','expression',3,'p_expression','gparser.py',192),
  ('expression -> xor_expression','expression',1,'p_expression','gparser.py',193),
  ('xor_expression -> and_expression OP_XOR xor_expression','xor_expression',3,'p_xor_expression','gparser.py',200),
  ('xor_expression -> and_expression','xor_expression',1,'p_xor_expression','gparser.py',201),
  ('and_expression -> or_p_expression OP_AND and_expression','and_expression',3,'p_and_expression','gparser.py',208),
  ('and_expression -> or_p_expression','and_expression',1,'p_and_expression','gparser.py',209),
  ('or_p_expression -> xor_p_expression OP_OR_P or_p_expression','or_p_expression',3,'p_or_p_expression','gparser.py',216),
  ('or_p_expression -> xor_p_expression','or_p_expression',1,'p_or_p_expression','gparser.py',217),
  ('xor_p_expression -> and_p_expression OP_XOR_P xor_p_expression','xor_p_expression',3,'p_xor_p_expression','gparser.py',224),
  ('xor_p_expression -> and_p_expression','xor_p_expression',1,'p_xor_p_expression','gparser.py',225),
  ('and_p_expression -> not_expression OP_AND_P and_p_expression','and_p_expression',3,'p_and_p_expression','gparser.py',232),
  ('and_p_expression -> not_expression','and_p_expression',1,'p_and_p_expression','gparser.py',233),
  ('not_expression -> OP_NOT ex_expression','not_expression',2,'p_not_expression','gparser.py',240),
  ('not_expression -> ex_expression','not_expression',1,'p_not_expression','gparser.py',241),
  ('ex_expression -> OP_EXISTS cmp_expression','ex_expression',2,'p_ex_expression','gparser.py',248),
  ('ex_expression -> cmp_expression','ex_expression',1,'p_ex_expression','gparser.py',249),
  ('cmp_expression -> term OP_LIKE cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',256),
  ('cmp_expression -> term OP_IN cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',257),
  ('cmp_expression -> term OP_IS cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',258),
  ('cmp_expression -> term OP_EQ cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',259),
  ('cmp_expression -> term OP_NE cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',260),
  ('cmp_expression -> term OP_GT cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',261),
  ('cmp_expression -> term OP_GE cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',262),
  ('cmp_expression -> term OP_LT cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',263),
  ('cmp_expression -> term OP_LE cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',264),
  ('cmp_expression -> term','cmp_expression',1,'p_cmp_expression','gparser.py',265),
  ('term -> factor OP_PLUS term','term',3,'p_term','gparser.py',272),
  ('term -> factor OP_MINUS term','term',3,'p_term','gparser.py',273),
  ('term -> factor OP_TIMES term','term',3,'p_term','gparser.py',274),
  ('term -> factor OP_DIVIDE term','term',3,'p_term','gparser.py',275),
  ('term -> factor OP_MODULO term','term',3,'p_term','gparser.py',276),
  ('term -> factor','term',1,'p_term','gparser.py',277),
  ('factor -> IPV4','factor',1,'p_factor','gparser.py',284),
  ('factor -> IPV6','factor',1,'p_factor','gparser.py',285),
  ('factor -> INTEGER','factor',1,'p_factor','gparser.py',286),
  ('factor -> FLOAT','factor',1,'p_factor','gparser.py',287),
  ('factor -> VARIABLE','factor',1,'p_factor','gparser.py',288),
  ('factor -> CONSTANT','factor',1,'p_factor','gparser.py',289),
  ('factor -> LBRACK list RBRACK','factor',3,'p_factor','gparser.py',290),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor','gparser.py',291),
  ('list -> IPV4','list',1,'p_list','gparser.py',298),
  ('list -> IPV6','list',1,'p_list','gparser.py',299),
  ('list -> INTEGER','list',1,'p_list','gparser.py',300),
  ('list -> FLOAT','list',1,'p_list','gparser.py',301),
  ('list -> VARIABLE','list',1,'p_list','gparser.py',302),
  ('list -> CONSTANT','list',1,'p_list','gparser.py',303),
  ('list -> IPV4 COMMA list','list',3,'p_list','gparser.py',304),
  ('list -> IPV6 COMMA list','list',3,'p_list','gparser.py',305),
  ('list -> INTEGER COMMA list','list',3,'p_list','gparser.py',306),
  ('list -> FLOAT COMMA list','list',3,'p_list','gparser.py',307),
  ('list -> VARIABLE COMMA list','list',3,'p_list','gparser.py',308),
  ('list -> CONSTANT COMMA list','list',3,'p_list','gparser.py',309),
]
