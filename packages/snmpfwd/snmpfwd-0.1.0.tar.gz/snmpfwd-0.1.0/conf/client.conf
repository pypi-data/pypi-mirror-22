#
# SNMP forwarder: Manager part configuration
#
# This file is composed of a set of option/value pairs possibly
# enclosed into blocks. Blocks provide lexical scopes for options.
# Blocks names have no pre-defined meaning and serve as hints
# to human reader.
#
# For example:
#
# global-option: value
#
# outermost-block
# {
#     common-option: value
#
#     more-specific-block
#     {
#         more-specific-option: value
#
#         very-concrete-settings
#         {
#             concrete-option: value
#         }
#     }
# }
#
# Some options can appear inside a block while some can only be of global
# scope. Options specified inside a block apply to their current scopes as
# well as to all nested scopes unless the same option exists there.
#
# Options are distinguished from values by trailing colon (:). There may be
# several whitespace separated values assigned to option.
#
# The following options are recognized.
#
# Option                              Semantics
# ------                              ---------
# config-version                      configuration syntax version
# program-name                        program name to use this configuration
# snmp-peer-id                        SNMP target ID
# snmp-engine-id                      SNMP engine ID
# snmp-transport-domain               identifies SNMP local network endpoint
# snmp-transport-options              transparent-proxy, virtual-interface
# snmp-peer-address                   send SNMP packets to this endpoint
# snmp-bind-address                   send SNMP packets from this endpoint
# snmp-peer-timeout                   SNMP request timeout in seconds
# snmp-peer-retries                   number of SNMP request retries
# snmp-security-model                 SNMP security model (0, 1, 3)
# snmp-security-level                 SNMP security level (1, 2, 3)
# snmp-security-name                  SNMP security name
# snmp-community-name                 SNMPv1/v2c community name
# snmp-usm-user                       SNMPv3/USM username
# snmp-usm-auth-protocol              SNMPv3/USM authentication protocol
# snmp-usm-auth-key                   SNMPv3/USM authentication key
# snmp-usm-priv-protocol              SNMPv3/USM privacy protocol
# snmp-usm-priv-key                   SNMPv3/USM privacy key
# snmp-context-engine-id              SNMP Context Engine ID
# snmp-context-name                   SNMP Context Name
# trunk-id                            trunk ID
# trunk-bind-address                  trunk connection local endpoint
# trunk-peer-address                  trunk connection peer address
# trunk-connection-mode               trunking client or server
# trunk-crypto-key                    trunk data encryption key
# orig-snmp-engine-id-pattern         true if SNMP EngineId matches this regexp
# orig-snmp-transport-domain-pattern  true if SNMP peer transport domain
#                                     matches this regexp
# orig-snmp-peer-address-pattern      true if SNMP peer address matches this
#                                     regexp
# orig-snmp-bind-address-pattern      true if SNMP peer sent request to one
#                                     of the addresses matching this regexp
# orig-snmp-security-model-pattern    true if SNMP peer Security Model matches
#                                     this regexp
# orig-snmp-security-name-pattern     true if SNMP peer Security Name matches 
#                                     this regexp
# orig-snmp-security-level-pattern    true if SNMP peer Security Level matches 
#                                     this regexp
# orig-snmp-context-engine-id-pattern true if SNMP peer ContextEngineId matches
#                                     this regexp
# orig-snmp-context-name-pattern      true if SNMP peer ContextName matches 
#                                     this regexp
# orig-snmp-pdu-type-pattern          true if SNMP Request PDU sent by peer 
#                                     matches specified type(s)
#                                     (SET/GET/GETNEXT/GETBULK)
# orig-snmp-oid-prefix-pattern        true if SNMP Request PDU sent by peer 
#                                     carries OIDs that match regexp in the list
# orig-snmp-peer-id                   distant SNMP peer ID
# matching-trunk-id-list              true if source trunk ID is present in 
#                                     this list
# matching-orig-snmp-peer-id-list     true if source trunk ID is present in 
#                                     this list
# using-snmp-peer-id-list             send SNMP messages to this SNMP peer
#
# General configuration strategy is:
#
# 1) Configure SNMP credentials and targets for SNMP Manager part of
#    the Forwarder to communicate with. Each target is identified by
#    snmp-peer-id.
# 2) Configure server<->client communication link(s) called "trunks". Both
#    Forwarder client and server could initiate and/or receive trunking
#    connections. Each trunk is identified by a trunk-id which is used
#    for message routing. Trunk initiator is responsible for trunk ID
#    definition.
# 3) Describe original SNMP credentials and peers used by the server part
#    of the SNMP Forwarder to communicate with SNMP Managers. Each peer (or
#    a group of them) is identified by orig-snmp-credentials-id.
# 4) Configure message routing in form of matching-trunk-id-list and
#    matching-orig-snmp-credentials-id-list options mapped to the
#    contents of using-snmp-peer-id-list option. The latter identifies SNMP
#    peer IDs to forward SNMP messages to.
#

config-version: 2
program-name: snmpfwd-client

peers-group {
#  # use original context info
#  snmp-context-engine-id: ${context-engine-id}
#  snmp-context-name: ${context-name}

  snmp-peer-timeout: 1
  snmp-peer-retries: 0

  snmp-engine-A {
    snmp-engine-id: 0x0102030405070809

    udp {
      snmp-transport-domain: 1.3.6.1.6.1.1.1
      snmp-bind-address: 0.0.0.0:0

      snmp-security-level: 1

      v1 {
        snmp-community-name: public
        snmp-security-name: public
        snmp-security-model: 1

        targets {
          snmplabs {
            snmp-peer-address: 104.236.166.95:161
            snmp-peer-id: snmplabs-v1
          }

          localhost {
            snmp-peer-address: 127.0.0.1:161
            snmp-peer-id: localhost-v1
          }
        }
      }

      v2c {
        snmp-community-name: abrakadabra
        snmp-security-name: abrakadabra
        snmp-security-model: 2

        targets {
          snmplabs {
            snmp-peer-address: 104.236.166.95:161
            snmp-peer-id: snmplabs-v2c
          }

          localhost {
            snmp-peer-address: 127.0.0.1:161
            snmp-peer-id: localhost-v2c
          }
        }
      }

      v3 {
        snmp-security-model: 3

        my-user-1 {
          snmp-security-level: 3
          snmp-security-name: usr-md5-des

          snmp-usm-user: usr-md5-des
          snmp-usm-auth-protocol: 1.3.6.1.6.3.10.1.1.2
          snmp-usm-auth-key: authkey1
          snmp-usm-priv-protocol: 1.3.6.1.6.3.10.1.2.2
          snmp-usm-priv-key: privkey1

          targets {
            snmplabs {
              snmp-peer-address: 104.236.166.95:161
              snmp-peer-id: snmplabs-v3
            }

            localhost {
              snmp-peer-address: 127.0.0.1:161
              snmp-peer-id: localhost-v3
            }
          }          
        }
      }
    }
  }

  snmp-engine-B {
    snmp-engine-id: 0x010203040E0F0103
    snmp-context-engine-id: 0x010203040E0F0103
    snmp-context-name: "somecontext"

    v3 {
      snmp-security-model: 3
      snmp-security-level: 3
      snmp-security-name: usr-md5-des

      snmp-usm-user: usr-md5-des
      snmp-usm-auth-protocol: 1.3.6.1.6.3.10.1.1.2
      snmp-usm-auth-key: authkey1
      snmp-usm-priv-protocol: 1.3.6.1.6.3.10.1.2.2
      snmp-usm-priv-key: privkey1

      udpv4 {
        snmp-transport-domain: 1.3.6.1.6.1.1.200
        snmp-bind-address: 0.0.0.0:0

        # This option allows sending requests from any local address 
        # without explicitly binding to it.
#        snmp-transport-options: virtual-interface

        # This option allows sending requests from a spoofed IP address,
        # e.g. if there is no such local IP interface exists. Superuser
        # required.
#        snmp-transport-options: transparent-proxy

        targets {
          snmplabs {
            snmp-peer-address: 104.236.166.95:161
            snmp-peer-id: snmplabs-v3-bis
          }

          localhost {
            snmp-peer-address: 127.0.0.1:161
            snmp-peer-id: localhost-v3-bis
          }

          send-from-spoofed-peer-source {
            snmp-bind-address: 1.2.3.4:0
            snmp-peer-address: 104.236.166.95:161
            snmp-peer-id: snmplabs-v3-spoofed-source
          }

#          send-from-original-peer-source {
#            # send from source address of original SNMP request
#            snmp-bind-address: ${snmp-peer-address}
#            snmp-peer-address: 104.236.166.95:161
#            snmp-peer-id: snmplabs-v3-original-source
#          }

#          send-to-original-peer-destination {
#            # send to original destination address of SNMP request
#            snmp-peer-address: ${snmp-bind-address}
#            snmp-peer-id: snmplabs-v3-original-destination
#          }

        }
      }
    }
  }
}

trunking-group {
  trunk-crypto-key: 1234567890

  clients {
    host-1 {
      trunk-bind-address: 127.0.0.1
      trunk-peer-address: 127.0.0.1:30201
      trunk-connection-mode: client
      trunk-id: clienttrunk
    }
  }

  servers {
    interface-1 {
      trunk-connection-mode: server
      trunk-bind-address: 127.0.0.1:30301
      trunk-id: <discover>
    }
  }
}

original-snmp-peer-info-group {
  orig-snmp-bind-address-pattern: .*

  orig-snmp-context-name-pattern: ""

  orig-snmp-pdu-type-pattern: .*
  orig-snmp-oid-prefix-pattern: .*

  snmp-engine-A {
    orig-snmp-engine-id-pattern: 0x0102030405070809
    orig-snmp-context-engine-id-pattern: 0x0102030405070809

    udp {
      orig-snmp-transport-domain-pattern: 1\.3\.6\.1\.6\.1\.1\.100
      orig-snmp-peer-address-pattern: 127\.0\.0\.1:[0-9]*

      orig-snmp-security-level-pattern: 1

      v1 {
        orig-snmp-security-name-pattern: public
        orig-snmp-security-model-pattern: 1
        orig-snmp-peer-id: agent-config-1
      }

      v2c {
        orig-snmp-security-name-pattern: abrakadabra
        orig-snmp-security-model-pattern: 2
        orig-snmp-peer-id: agent-config-2

        set-operations {
          orig-snmp-pdu-type-pattern: SET
          orig-snmp-peer-id: agent-config-2-set
        }

        specific-gets {
          orig-snmp-oid-prefix-pattern: 1\.3\.6\.1\.2\.1\.2\.1\.0|1\.3\.6\.1\.2\.1\.2\.2\.0
          orig-snmp-peer-id: agent-config-2-some-gets
        }
      }

      v3 {
        orig-snmp-security-model-pattern: 3

        my-user-1 {
          orig-snmp-security-level-pattern: 3
          orig-snmp-security-name-pattern: test.*

          orig-snmp-peer-id: agent-config-3

          context-two {
            orig-snmp-context-name-pattern: mycontext2
            orig-snmp-peer-id: agent-config-3-1
          }
        }

        my-user-2 {
          orig-snmp-security-level-pattern: 1
          orig-snmp-security-name-pattern: testuser
          orig-snmp-peer-id: agent-config-3-2
        }
      }
    }
  }

  snmp-engine-B {
    orig-snmp-engine-id-pattern: 0x010203040E0F0103
    orig-snmp-context-engine-id-pattern: 0x010203040E0F0103

    v1 {
      orig-snmp-transport-domain-pattern: 1\.3\.6\.1\.6\.1\.1\.150
      orig-snmp-peer-address-pattern: 127\.0\.0\.1:[0-9]*
      orig-snmp-bind-address-pattern: 127\.0\.0\.[1-3]:[0-9]*
      orig-snmp-security-name-pattern: public
      orig-snmp-security-model-pattern: 1
      orig-snmp-security-level-pattern: 1
      orig-snmp-peer-id: agent-config-1-6
    }

    v3 {
      orig-snmp-security-model-pattern: 3
      orig-snmp-security-level-pattern: 3
      orig-snmp-security-name-pattern: test-user

      udpv4 {
        orig-snmp-transport-domain-pattern: 1\.3\.6\.1\.6\.1\.1\.200
        orig-snmp-peer-address-pattern: 127\.0\.0\.1:[0-9]*

        context-one {
          orig-snmp-context-name-pattern: mycontext
          orig-snmp-peer-id: config-3
        }

        context-two {
          orig-snmp-context-name-pattern: mycontext2
          orig-snmp-peer-id: config-3-1
        }
      }
    }
  }
}

routing-map {
  route-1 {
    matching-trunk-id-list: servertrunk
    matching-orig-snmp-peer-id-list: agent-config-1
    using-snmp-peer-id-list: snmplabs-v3
  }
  
  route-2 {
    matching-trunk-id-list: clienttrunk
    matching-orig-snmp-peer-id-list: agent-config-3-1
    using-snmp-peer-id-list: localhost-v1
  }

  route-3 {
    matching-trunk-id-list: clienttrunk
    matching-orig-snmp-peer-id-list: agent-config-2-set
    using-snmp-peer-id-list: localhost-v2c
  }

  route-4 {
    matching-trunk-id-list: clienttrunk
    matching-orig-snmp-peer-id-list: agent-config-1-6
    using-snmp-peer-id-list: snmplabs-v3-spoofed-source
#    using-snmp-peer-id-list: snmplabs-v3-original-source
  }
}
