[tox]
minversion = 1.8.1
envlist = py27,py34,pep8,pylint,docs
skipsdist = True

[testenv]
usedevelop = True
deps =
    -r{toxinidir}/requirements.txt
    -r{toxinidir}/test-requirements.txt

passenv =
    FREEZER_TEST_SSH_KEY
    FREEZER_TEST_SSH_USERNAME
    FREEZER_TEST_SSH_HOST
    FREEZER_TEST_CONTAINER
    FREEZER_TEST_OS_TENANT_NAME
    FREEZER_TEST_OS_USERNAME
    FREEZER_TEST_OS_REGION_NAME
    FREEZER_TEST_OS_PASSWORD
    FREEZER_TEST_OS_AUTH_URL
    FREEZER_TEST_NO_LVM
    http_proxy HTTP_PROXY https_proxy HTTPS_PROXY no_proxy NO_PROXY

install_command = pip install -U {opts} {packages}
setenv = VIRTUAL_ENV={envdir}

whitelist_externals =
    find
    coverage
    rm

python_files = test_*.py
norecursedirs  = .tox .venv specs

[testenv:py27]
basepython = python2.7
setenv = OS_PATH_TEST = ./freezer_api/tests/unit
commands =
    find . -type f -name "*.pyc" -delete
    rm -rf .testrepository
    python setup.py test --coverage --coverage-package-name freezer_api --testr-args="{posargs}"
    coverage report -m
    rm -f .coverage
    rm -rf .testrepository


[testenv:py34]
basepython = python3.4
setenv = OS_PATH_TEST = ./freezer_api/tests/unit
commands =
    find . -type f -name "*.pyc" -delete
    rm -rf .testrepository
    python setup.py test --coverage --coverage-package-name freezer_api --testr-args="{posargs}"
    coverage report -m
    rm -f .coverage
    rm -rf .testrepository

[testenv:py35]
basepython = python3.5
setenv = OS_PATH_TEST = ./freezer_api/tests/unit
commands =
    find . -type f -name "*.pyc" -delete
    rm -rf .testrepository
    python setup.py test --coverage --coverage-package-name freezer_api --testr-args="{posargs}"
    coverage report -m
    rm -f .coverage
    rm -rf .testrepository

[testenv:venv]
commands = {posargs}

[testenv:cover]
commands =
    find . -type f -name "*.pyc" -delete
    python setup.py test --coverage --coverage-package-name freezer_api --testr-args="{posargs}"
    coverage report -m
    rm -f .coverage
    rm -rf .testrepository

[testenv:pylint]
commands = pylint --rcfile .pylintrc freezer_api

[testenv:pep8]
commands = flake8 freezer_api

[flake8]
# it's not a bug that we aren't using all of hacking
# H102 -> apache2 license exists
# H103 -> license is apache
# H201 -> no bare excepts
# H501 -> don't use locals() for str formatting
# H903 -> \n not \r\n
ignore = H
select = H102, H103, H201, H501, H903, H201, H306, H301, H233
show-source = True
exclude = .venv,.tox,dist,doc,test,*egg,tests,specs,build

[testenv:docs]
commands =
  python setup.py build_sphinx
  sphinx-build -b html api-ref/source api-ref/build/html

[testenv:api-ref]
whitelist_externals = bash
                      rm
install_command = pip install -U --force-reinstall {opts} {packages}
commands =
  rm -rf api-ref/build
  sphinx-build -b html -d api-ref/build/doctrees api-ref/source api-ref/build/html
