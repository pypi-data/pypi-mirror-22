# coding: utf-8

"""
    DDOTS RESTful API Server

    ## Explore the demo server  I suggest you start with signing up a new user. To do so, use `POST /users/` endpoint with `recaptcha_key=\"secret_key\"`.  You will need to know the API Client ID to authenticate, so here it is: `documentation`. Sometimes (e.g. for token refreshing) you might need API Client Secret: `KQ()SWK)SQK)QWSKQW(SKQ)S(QWSQW(SJ*HQ&HQW*SQ*^SSQWSGQSG`.  There are also two built-in users: * `root` (administrator with all permissions) with password `q` * `user` (regular user) with password `w` 

    OpenAPI spec version: 0.1.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import os
import sys
import unittest

import ddots_client
from ddots_client.rest import ApiException
from ddots_client.apis.solutions_api import SolutionsApi


class TestSolutionsApi(unittest.TestCase):
    """ SolutionsApi unit test stubs """

    def setUp(self):
        self.api = ddots_client.apis.solutions_api.SolutionsApi()

    def tearDown(self):
        pass

    def test_delete_solution_by_id(self):
        """
        Test case for delete_solution_by_id

        Delete a solution by ID
        """
        pass

    def test_get_solution_by_id(self):
        """
        Test case for get_solution_by_id

        Get solution details by ID
        """
        pass

    def test_get_solution_source_code_by_id(self):
        """
        Test case for get_solution_source_code_by_id

        Get solution source code by ID
        """
        pass

    def test_get_solutions(self):
        """
        Test case for get_solutions

        List of solutions
        """
        pass

    def test_options_solution_by_id(self):
        """
        Test case for options_solution_by_id

        Check which methods are allowed
        """
        pass

    def test_options_solution_for_testing(self):
        """
        Test case for options_solution_for_testing

        Check which methods are allowed
        """
        pass

    def test_options_solution_source_code_by_id(self):
        """
        Test case for options_solution_source_code_by_id

        Check which methods are allowed
        """
        pass

    def test_options_solution_testing_report_by_id(self):
        """
        Test case for options_solution_testing_report_by_id

        Check which methods are allowed
        """
        pass

    def test_options_solutions(self):
        """
        Test case for options_solutions

        Check which methods are allowed
        """
        pass

    def test_patch_solution_by_id(self):
        """
        Test case for patch_solution_by_id

        Patch solution details by ID
        """
        pass

    def test_patch_solution_for_testing(self):
        """
        Test case for patch_solution_for_testing

        Fetch a solution for testing
        """
        pass

    def test_post_solution_testing_report_by_id(self):
        """
        Test case for post_solution_testing_report_by_id

        Send a testing report for the solution
        """
        pass

    def test_send_solution(self):
        """
        Test case for send_solution

        Upload a new solution
        """
        pass


if __name__ == '__main__':
    unittest.main()
