__author__ = 'Bohdan Mushkevych'

import os
from antlr4 import *

from grammar.sdplLexer import sdplLexer
from grammar.sdplParser import sdplParser
from grammar.sdplListener import sdplListener
from parser.pig_generator import PigGenerator


def run_generator(input_file, output_stream, generator_class=PigGenerator):
    assert issubclass(generator_class, sdplListener)

    input_stream = FileStream(input_file, encoding='utf-8')
    lexer = sdplLexer(input_stream)
    token_stream = CommonTokenStream(lexer)
    parser = sdplParser(token_stream)
    tree = parser.start_rule()

    walker = ParseTreeWalker()
    collector = PigGenerator(token_stream, output_stream)

    _print_header(output_stream, input_file)
    walker.walk(collector, tree)
    _print_footer(output_stream)


def _print_header(output_stream, file_name):
    head, name = os.path.split(file_name)   # fetch file_name
    _, directory = os.path.split(head)      # fetch directory

    # NOTICE: full path in the file header breaks the UnitTests if executed on different machines
    output_stream.write('-- File generated by SDPL compiler from {0}/{1}'.format(directory, name))
    output_stream.write('\n')
    output_stream.write('-- Do not edit the file manually')
    output_stream.write('\n')


def _print_footer(output_stream):
    output_stream.write('-- SDPL output: EOF')
    output_stream.write('\n')
