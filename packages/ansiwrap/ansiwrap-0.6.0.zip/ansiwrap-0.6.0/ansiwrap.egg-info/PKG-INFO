Metadata-Version: 1.1
Name: ansiwrap
Version: 0.6.0
Summary: textwrap, but savvy to ANSI colors and styles
Home-page: https://github.com/jonathaneunice/ansiwrap
Author: Jonathan Eunice
Author-email: jonathan.eunice@gmail.com
License: Apache License 2.0
Description: 
        | |travisci| |version| |versions| |impls| |wheel| |coverage|
        
        .. |travisci| image:: https://api.travis-ci.org/jonathaneunice/ansiwrap.svg
            :target: http://travis-ci.org/jonathaneunice/ansiwrap
        
        .. |version| image:: http://img.shields.io/pypi/v/ansiwrap.svg?style=flat
            :alt: PyPI Package latest release
            :target: https://pypi.python.org/pypi/ansiwrap
        
        .. |versions| image:: https://img.shields.io/pypi/pyversions/ansiwrap.svg
            :alt: Supported versions
            :target: https://pypi.python.org/pypi/ansiwrap
        
        .. |impls| image:: https://img.shields.io/pypi/implementation/ansiwrap.svg
            :alt: Supported implementations
            :target: https://pypi.python.org/pypi/ansiwrap
        
        .. |wheel| image:: https://img.shields.io/pypi/wheel/ansiwrap.svg
            :alt: Wheel packaging support
            :target: https://pypi.python.org/pypi/ansiwrap
        
        .. |coverage| image:: https://img.shields.io/badge/test_coverage-100%25-6600CC.svg
            :alt: Test line coverage
            :target: https://pypi.python.org/pypi/ansiwrap
        
        
        ``ansiwrap`` wraps text, like the standard ``textwrap`` module.
        But it also correctly wraps text that contains ANSI control
        sequences that colorize or style text.
        
        Where ``textwrap`` is fooled by the raw string length of those control codes,
        ``ansiwrap`` is not; it understands that however much those codes affect color
        and display style, but have no logical length.
        
        The API mirrors the ``wrap`` and ``fill`` functions of ``textwrap``.
        
        It also exports several other functions:
        
        * ``ansilen`` (giving the effective length of a string, ignoring ANSI control codes)
        * ``ansi_terminate_lines`` (propogates control codes though a list of strings/lines
          and terminates each line.)
        * ``strip_color`` (removes ANSI control codes from a string)
        
        See also the enclosed ``demo.py``.
        
        .. image:: https://content.screencast.com/users/jonathaneunice/folders/Jing/media/8db64be2-01cc-4da4-b46a-789c53c63b44/00000569.png
           :align: center
        
Keywords: text textwrap ANSI colors
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Console
Classifier: Operating System :: OS Independent
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Intended Audience :: Developers
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.6
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Programming Language :: Python :: Implementation :: PyPy
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Text Processing
Classifier: Topic :: Text Processing :: Filters
