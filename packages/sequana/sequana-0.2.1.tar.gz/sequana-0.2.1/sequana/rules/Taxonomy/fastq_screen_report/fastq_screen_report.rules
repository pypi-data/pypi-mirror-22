rule fastq_screen_report:
    """
    fastq_screen_report rule draw a svg plot after fastq_screen. The database used is dedicated to Biomics Pole (Institut Pasteur)

    Required input:
        __fastq_screen_report__input: a output fastq_screen directory

    Required output:
        __fastq_screen_report__figure: fastq_screen plot in svg format
    """

    input :
        __fastq_screen_report__input,
        __fastq_screen_report__input_done
    log :
        __fastq_screen_report__logs
    output:
        __fastq_screen_report__figure
    run:
        from re import findall
        import os
        import matplotlib.pyplot as pl
        pl.style.use('ggplot')
        import csv
        from numpy import array, arange

        species=[]
        ohol=[]
        mhol=[]
        ohml=[]
        mhml=[]
        file = ""
        for fp in os.listdir(input[0]):
            if fp.endswith("_screen.txt"):
                file = fp

        for line in csv.reader(open(os.path.join(input[0], file), "r"), dialect="excel-tab") :
            if(len(line) == 0) :
                continue
            if(line[0].startswith("#")) :
                continue
            if(line[0].startswith("Library")) or (line[0].startswith("Genome")):
                continue
            if (line[0].startswith("%Hit")) :
                ## get the number of no hit
                nohit = findall(r'\d+\.\d+',str(line))
                break

            species.append(line[0])
            ohol.append(float(line[5]))
            mhol.append(float(line[7]))
            ohml.append(float(line[9]))
            mhml.append(float(line[11]))
        ohol = array(ohol)
        mhol = array(mhol)
        ohml = array(ohml)
        mhml = array(mhml)

        fig = pl.figure(figsize=(24,10))
        ind = arange(len(species))
        pl.bar(ind, tuple(ohol), color="#0000FF", label="unique")
        pl.bar(ind, tuple(mhol), color="#6699FF", bottom=tuple(ohol), label="multimap")
        pl.bar(ind, tuple(ohml), color="#FF0000", bottom=tuple(ohol+mhol), label="conserved")
        pl.bar(ind, tuple(mhml), color="#FF6347", bottom=tuple(ohol+mhol+ohml), label="repeat")
        #p5 = bar(25, nohit, color="#6699FF")

        pl.title("%s" % file.replace("_screen.txt","").split("/")[-1])
        pl.ylabel("%")
        pl.ylim((0,105))
        pl.xticks(ind+0.4, species, rotation="vertical")
        pl.yticks(arange(0,110,10))
        pl.legend( loc='upper right', bbox_to_anchor=(0.99, 0.9), fancybox=True)


        ##add phylum
        pl.axvspan(0,3,facecolor='#008000', alpha=0.3,label="Mammals")
        pl.annotate('Mammals', xy=(1, 100), xycoords='data')

        pl.axvspan(4,9,facecolor='#008000', alpha=0.2,label="Fungi")
        pl.annotate('Fungi', xy=(6, 100), xycoords='data')

        pl.axvspan(9,14,facecolor='#008000', alpha=0.1,label="Gram+")
        pl.annotate('Gram+', xy=(11, 100), xycoords='data')

        pl.axvspan(14,23,facecolor='#ADFF2F', alpha=0.1,label="Gram-")
        pl.annotate('Gram-', xy=(19, 100), xycoords='data')

        pl.axvspan(23,25,facecolor='#ADFF2F', alpha=0.2,label="Insects")
        pl.annotate('Insects', xy=(23.5, 100), xycoords='data')

        pl.axvspan(25,29,facecolor='#FFD700', alpha=0.2,label="Protozoa")
        pl.annotate('Protozoa', xy=(26.5, 100), xycoords='data')

        pl.axvspan(29,32,facecolor='#FFD700', alpha=0.3,label="viruses")
        pl.annotate('Viruses', xy=(30.5, 100), xycoords='data')
        pl.tight_layout()
        fig.savefig(output[0],format='svg')
        pl.close()