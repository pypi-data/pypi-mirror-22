---
# Generate Kubernetes certificates
- name: certificates | Set fact for opendc masters FQDN 
  set_fact:
    opendc_fqdn: "kubernetes.default.svc.{{ solutions.cs1_cluster_services.domain }}"

- name: certificates | Set fact for opendc masters DNS values
  set_fact:
    opendc_master_dns_values: >-
      kubernetes,
      kubernetes.default,
      kubernetes.default.svc,
      {%- for apiserver in groups['opendc-masters'] -%}
        {{ apiserver }},
      {%- endfor -%}
      {{ opendc_fqdn }}

- name: certificates | Convert fact for opendc masters DNS values to a list
  set_fact:
    opendc_master_dns_values: >-
      {{ opendc_master_dns_values.split(',') | map('regex_replace', ' ', '') | list }}

- name: certificates | Set fact for opendc masters IP addresses
  set_fact:
    opendc_master_ip_values: >-
      10.254.0.1,
      {%- for apiserver in groups['opendc-masters'] -%}
      {{ hostvars[apiserver]['ansible_' + interface].ipv4.address }}
      {%- if not loop.last -%},{%- endif -%}
      {%- endfor -%}

- name: certificates | Convert fact for opendc masters IP addresses to a list
  set_fact:
    opendc_master_ip_values: >-
      {{ opendc_master_ip_values.split(',') | list }}

- name: certificates | Generate certificates
  include: ../../opendc-ca/tasks/certificate.yaml
  vars:
    cn:         "{{ item.cn }}"
    cert_name:  "{{ item.cert_name }}"
    dns_values: "{{ item.dns_values }}"
    ip_values:  "{{ item.ip_values }}"
  with_items:
    - { cn:         'kube-apiserver', 
        cert_name:  'kube_apiserver', 
        dns_values: "{{ opendc_master_dns_values }}", 
        ip_values:  "{{ opendc_master_ip_values }}" }
    - { cn:         'kube-controller-manager', 
        cert_name:  'kube_controller_manager', 
        dns_values: "{{ opendc_master_dns_values }}", 
        ip_values:  "{{ opendc_master_ip_values }}" }
  delegate_to: "{{ groups['opendc-ca'][0] }}"
  run_once: yes







