Metadata-Version: 1.1
Name: castle.cms
Version: 2.0.33
Summary: Castle CMS Plone distribution main package
Home-page: https://github.com/castlecms/castle.cms
Author: Nathan Van Gheem
Author-email: nathan.vangheem@wildcardcorp.com
License: GPL2
Description: .. image:: https://www.wildcardcorp.com/logo.png
            :height: 50
            :width: 382
            :alt: Original work by wildcardcorp.com
            :scale: 50 %
        
        
        For access to CastleCloud, our hosted CastleCMS service, or to request customizations and demos, please contact us at https://castlecms.io or https://wildcardcorp.com
        
        info@wildcardcorp.com
        
        +1 (715) 869-3440
        
        =======================================
        Welcome to the main Castle CMS package!
        =======================================
        
        This package includes a lot of customizations to default Plone and, without an installer,
        this package won't be very useful.
        
        Until there is an installer, here are some of the things you'll need:
        
        - this version of plone.app.blocks: https://github.com/castlecms/plone.app.blocks
        - this version of plone.app.registry: https://github.com/plone/plone.app.registry/pull/15
        - Redis
        - avconv (needs to be updated for ffmpeg again)
        - ElasticSearch 2.3
        - https://github.com/castlecms/elasticsearch-castle-scoring
        - https://github.com/castlecms/castlehps installed for faster search integration
        - Amazon S3 credentials
        - Google Analytics API integration
        - Plivo API
        - reCAPTCHA key
        
        
        Feature List
        ============
        
        In addition to Plone standard features...
        
        - Login/lockout support
        - Content archival to Amazon S3 Storage
        - Large files automatically moved to S3 storage
        - Redis cache support
        - Advanced content layout editor
        - Improved management toolbar
        - Intuitive content creation and organization
        - Elasticsearch integration
        - Search results are tuned by social media impact
        - Search result pinning
        - Celery task queue integration (asynchronous actions)
            - PDF generation
            - Video conversion
            - Amazon S3 interaction
            - copying and pasting of large batches of items
            - deletion of large batches of items
        - Advanced content tiles:
            - maps
            - videos
            - audio
            - sliders
            - galleries
            - table of contents
        - Audio and video content
        - Automatic conversion of videos to web compatible format
        - Search weighting based on popularity using Google Analytics API
        - Content alias management
        - Disqus integration
        - reCAPTCHA integration
        - fullcalendar integration
        - Business metadata
        - Emergency notification system with SMS support
        - Preview content
        - Map content
        - KML feeds
        - Social media integration with
            - Twitter, Facebook, Pinterest
        - Etherpad collaborative spaces support
        - Stripping metadata from files
        - Ability to view the site as another user
        - Audit log, user activity reports
        - Session management and inspection
        - Analytics dashboard
        - De-duplication of uploaded images
        - Trash can / recycle bin
        - 2-factor authentication
        
        
        Optional Dependencies
        =====================
        
        - install `argon2_cffi` to use more secure password hashing
        
        
        Running tests
        =============
        
        Assuming you have buildout properly installed to run the tests:
        
        .. code-block:: shell
        
            Xvfb :99 &
            Xvfb :99 -fp /usr/share/X11/fonts/misc -screen 0 1900x1900x24 &
            export DISPLAY=:99
        
        To access the running Selenium test server on port 55001:
        
        .. code-block:: shell
        
            ZSERVER_HOST=0.0.0.0 ./bin/test -s castle.cms
        
        To specify custom Firefox binary to match versions:
        
        .. code-block:: shell
        
            FIREFOX_BINARY=/opt/firefox/firefox ./bin/test  -s castle.cms
        
        Non-Selenium tests:
        
        since selenium can be flaky...
        
        .. code-block:: shell
        
          ./bin/test -s castle.cms -t \!selenium
        
        
        Google Analytics Key File
        -------------------------
        
        - go to the Google API console
        - create new credentials
          - service account
          - p12
        - enable Analytics API api for credentials
        - fill out email with email provided and p12 file in Castle API settings
        - use email for email you want to access and add it as an authorized user for the account in Google Analytics
        
        
        Cron jobs
        =========
        
        Castle uses many cron jobs that need to be setup.
        
        Daily
        -----
        
        - ``bin/clean-plone-users``: removes disabled users
        - ``bin/social-counts``: goes through all content and updates social media counts. Can be done monthly
        - ``bin/content-popularity``: if GA setup, will get content statistics for popularity
        
        Weekly
        ------
        
        - ``bin/archive-content``: Archive content and send out content warnings about content that will be archived
        - ``bin/empty-trash``: Delete items that have been in trash for 30 days
        - ``bin/send-forced-publish-alert``: Send update to admins about content that was forced published
        
        
        Processes
        ---------
        
        - ``bin/twitter-monitor``: Monitor Twitter for mentions of your site
        
        
        
        Export/Import
        -------------
        
        Castle provides a simple export/import mechanism that does not use transmogrifier.
        
        You are still able to build your own custom transmogrifier pipelines to import/export
        into castle; however, our scripts seem to work in a lot of cases to get your
        content moved over to start working with.
        
        
        Export
        ~~~~~~
        
        Copy the export script into your existing site's main buildout folder of your site::
        
          https://raw.githubusercontent.com/castlecms/castle.cms/master/castle/cms/_scripts/export-content.py
        
        Then, to run the export script::
        
          ./bin/client1 run export-content.py --site-id=mysiteid --dir=./export
        
        This is assuming that "client1" is an instance of your site and "mysiteid" is the
        id of your install plone site.
        
        To customize the export script so only parts of the site are exported,
        you can change the final line in the script to a custom catalog query that only
        pulls in the content you want to export.
        
        
        Import
        ~~~~~~
        
        First off, copy the exported directory that you did in the previous step to
        the castle installation folder.
        
        Next, copy the import script into your new castle site's main buildout folder::
        
          https://raw.githubusercontent.com/castlecms/castle.cms/master/castle/cms/_scripts/importjson.py
        
        Then, to run the import script::
        
          ./bin/client1 run importjson.py --site-id=mysiteid --export-directory=./export
        
        This is assuming that "client1" is an instance of your site and "mysiteid" is the
        id of your install plone site.
        
        
        To register your own import type(Event example)::
        
            from castle.cms._scripts.importtypes import BaseImportType
            from castle.cms._scripts.importtypes import register_import_type
            from castle.cms._scripts.importtypes import DateTime_to_datetime
        
            class MyImportType(BaseImportType):
                fields_mapping = {
                    # list of original field names to new field names
                    # 'startDate': 'start'
                }
                data_converters = {
                    # field name -> func(val) -> val
                    # convert data to the format it should be
                    # 'start': DateTime_to_datetime,
                }
                behavior_data_mappers = (
                    # (Behavior Interface, field name)
                    # to set behavior data from export data...
                    # (IEventBasic, 'start'),
                )
        
                def post_creation(self, obj):
                    '''
                    Additional custom data migration after object is created
                    ''''
                    super(MyType, self).post_creation(obj)
                    obj.foo = 'bar'
        
            register_import_type('MyType', MyImportType)
        
        
        
        Tile display types
        ------------------
        
        There are a few different tiles that castle provides that allow you to customize
        the display type. The display type field is a way of providing a different
        view onto the content.
        
        Available display type tiles(listing with display type vocab id):
        
         - Navigation(navigation)
         - Existing content(existing)
         - Gallery(gallery)
         - Query Listing(querylisting)
        
        
        Providing your own display types
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        
        There are 3 components to registering a display type for a tile:
          - Display type class
          - Page template
          - ZCML registration
        
        I know, probably too much but not a lot of thought has gone into how to make
        this more simple for the developer at this point.
        
        
        Example custom display type
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~
        
        We'll go through an example for the existing content tile
        
        Display type class::
        
            class MyTileView(BaseTileView):
                name = 'myview'
                preview = '++plone++castle/path/to/image.png'
                order = 1
                index = ViewPageTemplateFile('myview.pt')
                tile_name = 'existing'
        
        
        Then, the template::
        
            <tal:wrap tal:define="utils view/tile/utils;
                                  data view/tile/data;
                                  df view/tile/display_fields;
                                  idt data/image_display_type|string:landscape;
                                  existing nocall: view/tile/content|nothing;
                                  url python: utils.get_object_url(existing);
                                  has_image python: 'image' in df and utils.has_image(existing);">
             <h3><a href="${url}">${existing/Title}</a></h3>
            </tal:wrap>
        
        
        Finally, the ZCML to register it::
        
            <adapter
              name="existing.myview"
              provides="castle.cms.interfaces.ITileView"
              for="plone.dexterity.interfaces.IDexterityContent castle.cms.interfaces.ICastleLayer"
              factory=".myview.MyTileView"
              />
        
        
        
        Lead images
        -----------
        
        - all content has lead images
        - lead images can be references to other images on the site
        
        
        
        Castle upgrades
        ---------------
        
        Right now, there is no way that is exposed nicely in site setup to run castle
        upgrades.
        
        To run upgrades::
        
          - go to /manage on your plone site
          - Then, portal_setup
          - click the "Upgrades" tab
          - select "castle.cms:default" and click "choose profile"
          - from here, you should get a list of available upgrades to run
        
        
        After the deadline
        ------------------
        
        Castle integrates with Plone's basic tinymce after the deadline support to::
        
          - also support after the deadline in rich text tiles
          - integrate spelling/grammar check with content quality check
        
        To utilize after the deadline integration, configure after the deadline in the
        plone tinymce configuration panel and castle will pay attention to the settings
        selected there.
        
        Changelog
        =========
        
        2.0.33 (2017-05-8)
        -------------------
        
        - Site install now wont add duplicate slot tiles
          [obct537]
        
        - Original image scale now actually does something
          [obct537]
        
        
        2.0.32 (2017-04-28)
        -------------------
        
        - Better error pages with stacktrace info if it's possible to provide
          [vangheem]
        
        - Be able to modify comments made on a historic content object history data
          [vangheem]
        
        - Fix 404 not being protected by login shield.
          [vangheem]
        
        - After login should now redirect you to `/@@dashboard` or to the original
          url you requested if you were redirected to login page
          [vangheem]
        
        - Updated defaults for the image tile
          [obct537]
        
        
        2.0.31 (2017-04-18)
        -------------------
        
        - Fix version pin for plone.app.content to work correctly with folder contents
          and changing date properties
          [vangheem]
        
        - Build css/js with latest mockup but disable now/clear buttons on pickadate
          so they are unstyled and look bad with castle.
          [vangheem]
        
        - Fix password reset template to send user's username instead of id
          [vangheem]
        
        - export-content.py now works to export dexterity and mosaic pages
          [vangheem]
        
        - fix crawling gz sitemaps
          [vangheem]
        
        - Resolved issue where the the words 'site settings' showed up when clicked
          [robzonenet]
        
        2.0.30 (2017-04-12)
        -------------------
        
        - Fix create user to send out correct password reset url
          [vangheem]
        
        - Handle issue getting current user when logging in. Can happen with authomatic
          [vangheem]
        
        - fix cases where generated absolute url was incorrect based on the original
          result html not being used for the base path
          [vangheem]
        
        - Resolved issue where invalid sort parameters broke the querystring tile. Closes issue #42
          [obct537]
        
        - Resolved issue where the images were missing due to the url being wrong. Closes issue #17
          [robzonenet]
        
        
        
        2.0.29 (2017-04-04)
        -------------------
        
        - Change "Read transcript" link to "Transcript | Download"
          [vangheem]
        - Fix issue where a span tag was being added to the castle toolbar which is an accessibility issue.
          [robzonenet]
        - Fix accessibility issue of not having words in the cog button. The screen reader needs to read something.
          [robzonenet]
        
        
        2.0.28 (2017-03-28)
        -------------------
        
        - Use ssl for maps data urls
          [vangheem]
        
        
        2.0.27 (2017-03-27)
        -------------------
        
        - Fix issue where archetypes content in castle.cms would cause potentially
          inconsistent search results.
          [vangheem]
        
        
        2.0.26 (2017-03-27)
        -------------------
        
        - Fix potential issue with upgrading to latest version of collective.elasticsearch
          [vangheem]
        
        
        2.0.25 (2017-03-27)
        -------------------
        
        - Fix regression from login fix
          [vangheem]
        
        
        2.0.24 (2017-03-27)
        -------------------
        
        - Do not require selection of images for gallery/slider tile so that query
          field will work
          [vangheem]
        
        
        2.0.24 (2017-03-27)
        -------------------
        
        - Fix cron scripts to look in more locations for zope.conf
          [vangheem]
        
        
        2.0.23 (2017-03-27)
        -------------------
        
        - Be able to provide dynamic query for gallery and slider tiles
          [vangheem]
        
        - Fix issue where feature tile was not mobile friendly
          [RobZoneNet]
        
        - Provide link back to original image item from slider/gallery tiles
          [vangheem]
        
        
        2.0.22 (2017-03-27)
        -------------------
        
        - Fix case where query results would not correctly get results when using the filter.
          [vangheem]
        
        
        2.0.21 (2017-03-24)
        -------------------
        
        - Fix some cases where default plone workflow was assumed
          [vangheem]
        
        
        2.0.20 (2017-03-24)
        -------------------
        
        - Be able to specify external url for the image tile.
          [vangheem]
        
        
        2.0.19 (2017-03-23)
        -------------------
        
        - Fix case where default page would not be imported correctly on some sites. By
          default import will always attempt to treat a lead image for folder content.
          [vangheem]
        
        
        2.0.18 (2017-03-22)
        -------------------
        
        - Make AtD support work with mosaic rich text tiles
          [vangheem]
        
        - Integrate AtD with quality check. If active, quality check will also notify
          potential spelling/grammar issues.
          [vangheem]
        
        
        2.0.17 (2017-03-22)
        -------------------
        
        - Fix issue where empty lead images would get imported from old lead image package
          and no filename would be found.
          [vangheem]
        
        
        2.0.16 (2017-03-21)
        -------------------
        
        - Fix event type to have lead image and search customization
          [vangheem]
        
        - Fix import of event type
          [vangheem]
        
        
        2.0.15 (2017-03-21)
        -------------------
        
        - Fix OFS missing import in importtypes
          [vangheem]
        
        - JSON feed now works with body option
          [obct537]
        
        
        2.0.14 (2017-03-20)
        -------------------
        
        - Provide information on lead image when inspecting history
          [vangheem]
        
        - Handle zeoserver errors for syndication
          [vangheem]
        
        
        2.0.13 (2017-03-20)
        -------------------
        
        - Fix invalid date issue from crawled pages on search results page
          [vangheem]
        
        - auto detect lead images from content in the layout
          [vangheem]
        
        
        2.0.12 (2017-03-15)
        -------------------
        
        - Fix paste button not working and throwing unauthorized errors because of
          missing csrf token. Fixes #19
          [vangheem]
        
        - Automatically detect image in content if no lead image is set. Fixes #28
          [vangheem]
        
        - Fix showing non-image content on lead image browse selector. Fixes #30
          [vangheem]
        
        - Be able to provide additional views for the existing content tile
          [vangheem]
        
        - Be able to specify upload location
          [vangheem]
        
        
        2.0.11 (2017-03-09)
        -------------------
        
        - Fix image focus point upgrade issue where it would request more images than
          it should
          [vangheem]
        
        - Provide image_url for json feed
          [vangheem]
        
        - If commenting enabled on a folder, it will become the default for all children
          in that folder.
          [vangheem]
        
        
        2.0.10 (2017-02-06)
        -------------------
        
        - Fix next/prev nav fragment to work with pages and site root
          [vangheem]
        
        - Fix fullcalendar issue with selecting text when one is dropped on page.
          This requires building with mockup on fix-jquery-event-drag-compat branch
          or master once it's merged
          [vangheem]
        
        - Override default Zope2 logging to log actual plone username in Z2.log
          [vangheem]
        
        
        2.0.9 (2017-01-23)
        ------------------
        
        - Add automatic session refresh support
          [vangheem]
        
        
        2.0.8 (2017-01-21)
        ------------------
        
        - Be able to provide your own google maps api key so that working with the
          mapping widget works more consistently.
          [vangheem]
        
        - Use argon2 pw encryption scheme by default
          [vangheem]
        
        
        2.0.7 (2017-01-18)
        ------------------
        
        - Fix previous release
        
        
        2.0.6 (2017-01-18)
        ------------------
        
        - Fix logged in event not recorder in the audit log correctly
          [vangheem]
        
        
        2.0.5 (2017-01-18)
        ------------------
        
        New:
        
        - Add new JSON feed type
          [vangheem]
        
        Fixes:
        
        - Fix parsing querylisting selected-year query
          [vangheem]
        
        - Fix parsing querylisting Title/SearchableText query
          [vangheem]
        
        2.0.4 (2017-01-09)
        ------------------
        
        - add rocket chat integration
          [sam schwartz]
        
        - fix issue where password reset wasn't sticking
          [vangheem]
        
        - make sure logout page shows login form
          [vangheem]
        
        - add clean-drafts script
          [vangheem]
        
        - add ping draft view so that the clean-drafts script knows not to clean a potentially
          active draft
          [vangheem]
        
        2.0.3 (2016-12-20)
        ------------------
        
        - Be able to pass in a site object to the render_content_core function for
          layout aware items
          [vangheem]
        
        
        2.0.2 (2016-12-14)
        ------------------
        
        - build resources
          [vangheem]
        
        2.0.1 (2016-12-14)
        ------------------
        
        - fix ipod/ipad safari video background image issue
          [robzonenet]
        
        
        2.0.0 (2016-12-07)
        ------------------
        
        - Initial public release
        
Keywords: plone cms castle
Platform: UNKNOWN
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2.7
Classifier: Framework :: Plone :: 5.0
Classifier: Framework :: Plone
Classifier: Framework :: Plone :: 5.1
