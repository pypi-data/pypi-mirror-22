# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: rst/geometry/CameraPoseCollection.proto

from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)


import rst.geometry.CameraPose_pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='rst/geometry/CameraPoseCollection.proto',
  package='rst.geometry',
  serialized_pb='\n\'rst/geometry/CameraPoseCollection.proto\x12\x0crst.geometry\x1a\x1drst/geometry/CameraPose.proto\"A\n\x14\x43\x61meraPoseCollection\x12)\n\x07\x65lement\x18\x01 \x03(\x0b\x32\x18.rst.geometry.CameraPoseB\x1a\x42\x18\x43\x61meraPoseCollectionType')




_CAMERAPOSECOLLECTION = _descriptor.Descriptor(
  name='CameraPoseCollection',
  full_name='rst.geometry.CameraPoseCollection',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='element', full_name='rst.geometry.CameraPoseCollection.element', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=88,
  serialized_end=153,
)

_CAMERAPOSECOLLECTION.fields_by_name['element'].message_type = rst.geometry.CameraPose_pb2._CAMERAPOSE
DESCRIPTOR.message_types_by_name['CameraPoseCollection'] = _CAMERAPOSECOLLECTION

class CameraPoseCollection(_message.Message):
  __metaclass__ = _reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _CAMERAPOSECOLLECTION

  # @@protoc_insertion_point(class_scope:rst.geometry.CameraPoseCollection)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), 'B\030CameraPoseCollectionType')
# @@protoc_insertion_point(module_scope)
