# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: rst/generic/DictionaryCollection.proto

from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)


import rst.generic.Dictionary_pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='rst/generic/DictionaryCollection.proto',
  package='rst.generic',
  serialized_pb='\n&rst/generic/DictionaryCollection.proto\x12\x0brst.generic\x1a\x1crst/generic/Dictionary.proto\"@\n\x14\x44ictionaryCollection\x12(\n\x07\x65lement\x18\x01 \x03(\x0b\x32\x17.rst.generic.DictionaryB\x1a\x42\x18\x44ictionaryCollectionType')




_DICTIONARYCOLLECTION = _descriptor.Descriptor(
  name='DictionaryCollection',
  full_name='rst.generic.DictionaryCollection',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='element', full_name='rst.generic.DictionaryCollection.element', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=85,
  serialized_end=149,
)

_DICTIONARYCOLLECTION.fields_by_name['element'].message_type = rst.generic.Dictionary_pb2._DICTIONARY
DESCRIPTOR.message_types_by_name['DictionaryCollection'] = _DICTIONARYCOLLECTION

class DictionaryCollection(_message.Message):
  __metaclass__ = _reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _DICTIONARYCOLLECTION

  # @@protoc_insertion_point(class_scope:rst.generic.DictionaryCollection)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), 'B\030DictionaryCollectionType')
# @@protoc_insertion_point(module_scope)
