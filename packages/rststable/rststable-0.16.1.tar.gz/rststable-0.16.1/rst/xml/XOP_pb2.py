# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: rst/xml/XOP.proto

from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)




DESCRIPTOR = _descriptor.FileDescriptor(
  name='rst/xml/XOP.proto',
  package='rst.xml',
  serialized_pb='\n\x11rst/xml/XOP.proto\x12\x07rst.xml\"<\n\nAttachment\x12\x0b\n\x03url\x18\x01 \x01(\t\x12\x13\n\x0bwire_schema\x18\x02 \x01(\x0c\x12\x0c\n\x04\x64\x61ta\x18\x03 \x01(\x0c\"H\n\x03XOP\x12\x0b\n\x03xml\x18\x01 \x01(\t\x12(\n\x0b\x61ttachments\x18\x02 \x03(\x0b\x32\x13.rst.xml.Attachment\x12\n\n\x02id\x18\x03 \x01(\x04\x42\tB\x07XOPType')




_ATTACHMENT = _descriptor.Descriptor(
  name='Attachment',
  full_name='rst.xml.Attachment',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='url', full_name='rst.xml.Attachment.url', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='wire_schema', full_name='rst.xml.Attachment.wire_schema', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value="",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='data', full_name='rst.xml.Attachment.data', index=2,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value="",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=30,
  serialized_end=90,
)


_XOP = _descriptor.Descriptor(
  name='XOP',
  full_name='rst.xml.XOP',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='xml', full_name='rst.xml.XOP.xml', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='attachments', full_name='rst.xml.XOP.attachments', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='id', full_name='rst.xml.XOP.id', index=2,
      number=3, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=92,
  serialized_end=164,
)

_XOP.fields_by_name['attachments'].message_type = _ATTACHMENT
DESCRIPTOR.message_types_by_name['Attachment'] = _ATTACHMENT
DESCRIPTOR.message_types_by_name['XOP'] = _XOP

class Attachment(_message.Message):
  __metaclass__ = _reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _ATTACHMENT

  # @@protoc_insertion_point(class_scope:rst.xml.Attachment)

class XOP(_message.Message):
  __metaclass__ = _reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _XOP

  # @@protoc_insertion_point(class_scope:rst.xml.XOP)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), 'B\007XOPType')
# @@protoc_insertion_point(module_scope)
