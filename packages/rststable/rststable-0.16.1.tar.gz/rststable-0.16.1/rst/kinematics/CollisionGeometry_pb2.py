# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: rst/kinematics/CollisionGeometry.proto

from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)


import rst.geometry.Translation_pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='rst/kinematics/CollisionGeometry.proto',
  package='rst.kinematics',
  serialized_pb='\n&rst/kinematics/CollisionGeometry.proto\x12\x0erst.kinematics\x1a\x1erst/geometry/Translation.proto\"F\n\x11\x43ollisionGeometry\x12\x31\n\x0e\x63ontact_points\x18\x01 \x03(\x0b\x32\x19.rst.geometry.TranslationB\x17\x42\x15\x43ollisionGeometryType')




_COLLISIONGEOMETRY = _descriptor.Descriptor(
  name='CollisionGeometry',
  full_name='rst.kinematics.CollisionGeometry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='contact_points', full_name='rst.kinematics.CollisionGeometry.contact_points', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=90,
  serialized_end=160,
)

_COLLISIONGEOMETRY.fields_by_name['contact_points'].message_type = rst.geometry.Translation_pb2._TRANSLATION
DESCRIPTOR.message_types_by_name['CollisionGeometry'] = _COLLISIONGEOMETRY

class CollisionGeometry(_message.Message):
  __metaclass__ = _reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _COLLISIONGEOMETRY

  # @@protoc_insertion_point(class_scope:rst.kinematics.CollisionGeometry)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), 'B\025CollisionGeometryType')
# @@protoc_insertion_point(module_scope)
