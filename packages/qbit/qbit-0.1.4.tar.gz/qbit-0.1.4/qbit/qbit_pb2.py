# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: qbit.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import any_pb2 as google_dot_protobuf_dot_any__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from google.protobuf import struct_pb2 as google_dot_protobuf_dot_struct__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='qbit.proto',
  package='qbit.services',
  syntax='proto3',
  serialized_pb=_b('\n\nqbit.proto\x12\rqbit.services\x1a\x19google/protobuf/any.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1cgoogle/protobuf/struct.proto\"z\n\x0e\x43ompareRequest\x12\x0e\n\x06smiles\x18\x01 \x03(\t\x12\x13\n\x0bsolver_type\x18\x02 \x01(\t\x12\x18\n\x10should_visualize\x18\x03 \x01(\x08\x12)\n\x08\x63riteria\x18\x04 \x01(\x0b\x32\x17.google.protobuf.Struct\"z\n\x10\x43omparisonResult\x12\n\n\x02ok\x18\x01 \x01(\x08\x12\x12\n\nsimilarity\x18\x02 \x01(\x02\x12\x16\n\x0evisualizations\x18\x03 \x03(\t\x12.\n\rshared_traits\x18\x04 \x01(\x0b\x32\x17.google.protobuf.Struct\"#\n\x0bMathRequest\x12\t\n\x01\x61\x18\x01 \x01(\x05\x12\t\n\x01\x62\x18\x02 \x01(\x05\" \n\x0cMathResponse\x12\x10\n\x08solution\x18\x01 \x01(\x05\"*\n\x10QuadraticRequest\x12\x16\n\x0equadraticArray\x18\x01 \x03(\x02\"\xb8\x01\n\x11QuadraticSolution\x12\x0e\n\x06\x65nergy\x18\x01 \x01(\x02\x12\x11\n\tfrequency\x18\x02 \x01(\x02\x12J\n\rconfiguration\x18\x03 \x03(\x0b\x32\x33.qbit.services.QuadraticSolution.ConfigurationEntry\x1a\x34\n\x12\x43onfigurationEntry\x12\x0b\n\x03key\x18\x01 \x01(\x05\x12\r\n\x05value\x18\x02 \x01(\x08:\x02\x38\x01\"n\n\x11QuadraticResponse\x12\x15\n\rresult_status\x18\x01 \x01(\x08\x12\x0e\n\x06timing\x18\x02 \x01(\x02\x12\x32\n\x08solution\x18\x03 \x03(\x0b\x32 .qbit.services.QuadraticSolution\"y\n\x10\x42inaryPolynomial\x12\x33\n\x05terms\x18\x01 \x03(\x0b\x32$.qbit.services.BinaryPolynomial.term\x1a\x30\n\x04term\x12\x13\n\x0b\x63oefficient\x18\x01 \x01(\x02\x12\x13\n\x0bpolynomials\x18\x02 \x03(\x05\"\xcf\x04\n\x0fQuadprogRequest\x12\x13\n\x0blin_obj_vec\x18\x01 \x03(\x02\x12?\n\x0cquad_obj_mat\x18\x02 \x03(\x0b\x32).qbit.services.QuadprogRequest.float_list\x12\n\n\x02lb\x18\x03 \x03(\x02\x12\n\n\x02ub\x18\x04 \x03(\x02\x12?\n\x0cineq_con_mat\x18\x05 \x03(\x0b\x32).qbit.services.QuadprogRequest.float_list\x12\x14\n\x0cineq_con_vec\x18\x06 \x03(\x02\x12=\n\neq_con_mat\x18\x07 \x03(\x0b\x32).qbit.services.QuadprogRequest.float_list\x12\x12\n\neq_con_vec\x18\x08 \x03(\x02\x12;\n\tlpProblem\x18\t \x01(\x0e\x32(.qbit.services.QuadprogRequest.LpProblem\x12\x12\n\nmultiplier\x18\n \x01(\x05\x12\x0f\n\x07verbose\x18\x0b \x01(\x08\x12\x14\n\x0clp_file_name\x18\x0c \x01(\t\x12\x0f\n\x07threads\x18\r \x01(\x05\x12\x10\n\x08presolve\x18\x0e \x01(\x08\x12\x0c\n\x04\x63uts\x18\x0f \x01(\x08\x12\x0c\n\x04\x64ual\x18\x10 \x01(\x08\x12\x0e\n\x06strong\x18\x11 \x01(\x08\x12\x13\n\x0bmax_seconds\x18\x12 \x01(\x05\x1a\x1f\n\nfloat_list\x12\x11\n\x05items\x18\x01 \x03(\x02\x42\x02\x10\x01\"\'\n\tLpProblem\x12\x0c\n\x08MINIMIZE\x10\x00\x12\x0c\n\x08MAXIMIZE\x10\x01\"\"\n\x10QuadprogResponse\x12\x0e\n\x06shares\x18\x01 \x03(\x02\"\xab\x01\n\tOperation\x12\x0c\n\x04name\x18\x01 \x01(\t\x12&\n\x08metadata\x18\x02 \x01(\x0b\x32\x14.google.protobuf.Any\x12\x0c\n\x04\x64one\x18\x03 \x01(\x08\x12&\n\x05\x65rror\x18\x04 \x01(\x0b\x32\x15.qbit.services.StatusH\x00\x12(\n\x08response\x18\x05 \x01(\x0b\x32\x14.google.protobuf.AnyH\x00\x42\x08\n\x06result\"#\n\x13GetOperationRequest\x12\x0c\n\x04name\x18\x01 \x01(\t\"\'\n\x15ListOperationsRequest\x12\x0e\n\x06\x66ilter\x18\x01 \x01(\t\"_\n\x16ListOperationsResponse\x12,\n\noperations\x18\x01 \x03(\x0b\x32\x18.qbit.services.Operation\x12\x17\n\x0fnext_page_token\x18\x02 \x01(\t\"&\n\x16\x43\x61ncelOperationRequest\x12\x0c\n\x04name\x18\x01 \x01(\t\"&\n\x16\x44\x65leteOperationRequest\x12\x0c\n\x04name\x18\x01 \x01(\t\"N\n\x06Status\x12\x0c\n\x04\x63ode\x18\x01 \x01(\x05\x12\x0f\n\x07message\x18\x02 \x01(\t\x12%\n\x07\x64\x65tails\x18\x03 \x03(\x0b\x32\x14.google.protobuf.Any2\xc6\x02\n\x04Qubo\x12R\n\tSQAMatrix\x12\x1f.qbit.services.QuadraticRequest\x1a .qbit.services.QuadraticResponse\"\x00(\x01\x12M\n\x04Tabu\x12\x1f.qbit.services.QuadraticRequest\x1a .qbit.services.QuadraticResponse\"\x00(\x01\x12J\n\x03SQA\x12\x1f.qbit.services.BinaryPolynomial\x1a .qbit.services.QuadraticResponse\"\x00\x12O\n\tHobo2Qubo\x12\x1f.qbit.services.BinaryPolynomial\x1a\x1f.qbit.services.BinaryPolynomial\"\x00\x32\x62\n\x13MolecularSimilarity\x12K\n\x07\x43ompare\x12\x1d.qbit.services.CompareRequest\x1a\x1f.qbit.services.ComparisonResult\"\x00\x32\x8a\x01\n\x04Math\x12@\n\x03\x41\x64\x64\x12\x1a.qbit.services.MathRequest\x1a\x1b.qbit.services.MathResponse\"\x00\x12@\n\x03Sub\x12\x1a.qbit.services.MathRequest\x1a\x1b.qbit.services.MathResponse\"\x00\x32\xa3\x01\n\x05Qbcbc\x12M\n\x08Quadprog\x12\x1e.qbit.services.QuadprogRequest\x1a\x1f.qbit.services.QuadprogResponse\"\x00\x12K\n\rAsyncQuadprog\x12\x1e.qbit.services.QuadprogRequest\x1a\x18.qbit.services.Operation\"\x00\x32\x91\x02\n\nOperations\x12_\n\x0eListOperations\x12$.qbit.services.ListOperationsRequest\x1a%.qbit.services.ListOperationsResponse\"\x00\x12N\n\x0cGetOperation\x12\".qbit.services.GetOperationRequest\x1a\x18.qbit.services.Operation\"\x00\x12R\n\x0f\x43\x61ncelOperation\x12%.qbit.services.CancelOperationRequest\x1a\x16.google.protobuf.Empty\"\x00\x62\x06proto3')
  ,
  dependencies=[google_dot_protobuf_dot_any__pb2.DESCRIPTOR,google_dot_protobuf_dot_empty__pb2.DESCRIPTOR,google_dot_protobuf_dot_struct__pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)



_QUADPROGREQUEST_LPPROBLEM = _descriptor.EnumDescriptor(
  name='LpProblem',
  full_name='qbit.services.QuadprogRequest.LpProblem',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='MINIMIZE', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MAXIMIZE', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1453,
  serialized_end=1492,
)
_sym_db.RegisterEnumDescriptor(_QUADPROGREQUEST_LPPROBLEM)


_COMPAREREQUEST = _descriptor.Descriptor(
  name='CompareRequest',
  full_name='qbit.services.CompareRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='smiles', full_name='qbit.services.CompareRequest.smiles', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='solver_type', full_name='qbit.services.CompareRequest.solver_type', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='should_visualize', full_name='qbit.services.CompareRequest.should_visualize', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='criteria', full_name='qbit.services.CompareRequest.criteria', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=115,
  serialized_end=237,
)


_COMPARISONRESULT = _descriptor.Descriptor(
  name='ComparisonResult',
  full_name='qbit.services.ComparisonResult',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ok', full_name='qbit.services.ComparisonResult.ok', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='similarity', full_name='qbit.services.ComparisonResult.similarity', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='visualizations', full_name='qbit.services.ComparisonResult.visualizations', index=2,
      number=3, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='shared_traits', full_name='qbit.services.ComparisonResult.shared_traits', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=239,
  serialized_end=361,
)


_MATHREQUEST = _descriptor.Descriptor(
  name='MathRequest',
  full_name='qbit.services.MathRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='a', full_name='qbit.services.MathRequest.a', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='b', full_name='qbit.services.MathRequest.b', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=363,
  serialized_end=398,
)


_MATHRESPONSE = _descriptor.Descriptor(
  name='MathResponse',
  full_name='qbit.services.MathResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='solution', full_name='qbit.services.MathResponse.solution', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=400,
  serialized_end=432,
)


_QUADRATICREQUEST = _descriptor.Descriptor(
  name='QuadraticRequest',
  full_name='qbit.services.QuadraticRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='quadraticArray', full_name='qbit.services.QuadraticRequest.quadraticArray', index=0,
      number=1, type=2, cpp_type=6, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=434,
  serialized_end=476,
)


_QUADRATICSOLUTION_CONFIGURATIONENTRY = _descriptor.Descriptor(
  name='ConfigurationEntry',
  full_name='qbit.services.QuadraticSolution.ConfigurationEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='qbit.services.QuadraticSolution.ConfigurationEntry.key', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='qbit.services.QuadraticSolution.ConfigurationEntry.value', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=611,
  serialized_end=663,
)

_QUADRATICSOLUTION = _descriptor.Descriptor(
  name='QuadraticSolution',
  full_name='qbit.services.QuadraticSolution',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='energy', full_name='qbit.services.QuadraticSolution.energy', index=0,
      number=1, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='frequency', full_name='qbit.services.QuadraticSolution.frequency', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='configuration', full_name='qbit.services.QuadraticSolution.configuration', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_QUADRATICSOLUTION_CONFIGURATIONENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=479,
  serialized_end=663,
)


_QUADRATICRESPONSE = _descriptor.Descriptor(
  name='QuadraticResponse',
  full_name='qbit.services.QuadraticResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='result_status', full_name='qbit.services.QuadraticResponse.result_status', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='timing', full_name='qbit.services.QuadraticResponse.timing', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='solution', full_name='qbit.services.QuadraticResponse.solution', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=665,
  serialized_end=775,
)


_BINARYPOLYNOMIAL_TERM = _descriptor.Descriptor(
  name='term',
  full_name='qbit.services.BinaryPolynomial.term',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='coefficient', full_name='qbit.services.BinaryPolynomial.term.coefficient', index=0,
      number=1, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='polynomials', full_name='qbit.services.BinaryPolynomial.term.polynomials', index=1,
      number=2, type=5, cpp_type=1, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=850,
  serialized_end=898,
)

_BINARYPOLYNOMIAL = _descriptor.Descriptor(
  name='BinaryPolynomial',
  full_name='qbit.services.BinaryPolynomial',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='terms', full_name='qbit.services.BinaryPolynomial.terms', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_BINARYPOLYNOMIAL_TERM, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=777,
  serialized_end=898,
)


_QUADPROGREQUEST_FLOAT_LIST = _descriptor.Descriptor(
  name='float_list',
  full_name='qbit.services.QuadprogRequest.float_list',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='items', full_name='qbit.services.QuadprogRequest.float_list.items', index=0,
      number=1, type=2, cpp_type=6, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1420,
  serialized_end=1451,
)

_QUADPROGREQUEST = _descriptor.Descriptor(
  name='QuadprogRequest',
  full_name='qbit.services.QuadprogRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='lin_obj_vec', full_name='qbit.services.QuadprogRequest.lin_obj_vec', index=0,
      number=1, type=2, cpp_type=6, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='quad_obj_mat', full_name='qbit.services.QuadprogRequest.quad_obj_mat', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='lb', full_name='qbit.services.QuadprogRequest.lb', index=2,
      number=3, type=2, cpp_type=6, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ub', full_name='qbit.services.QuadprogRequest.ub', index=3,
      number=4, type=2, cpp_type=6, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ineq_con_mat', full_name='qbit.services.QuadprogRequest.ineq_con_mat', index=4,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ineq_con_vec', full_name='qbit.services.QuadprogRequest.ineq_con_vec', index=5,
      number=6, type=2, cpp_type=6, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='eq_con_mat', full_name='qbit.services.QuadprogRequest.eq_con_mat', index=6,
      number=7, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='eq_con_vec', full_name='qbit.services.QuadprogRequest.eq_con_vec', index=7,
      number=8, type=2, cpp_type=6, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='lpProblem', full_name='qbit.services.QuadprogRequest.lpProblem', index=8,
      number=9, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='multiplier', full_name='qbit.services.QuadprogRequest.multiplier', index=9,
      number=10, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='verbose', full_name='qbit.services.QuadprogRequest.verbose', index=10,
      number=11, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='lp_file_name', full_name='qbit.services.QuadprogRequest.lp_file_name', index=11,
      number=12, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='threads', full_name='qbit.services.QuadprogRequest.threads', index=12,
      number=13, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='presolve', full_name='qbit.services.QuadprogRequest.presolve', index=13,
      number=14, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='cuts', full_name='qbit.services.QuadprogRequest.cuts', index=14,
      number=15, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dual', full_name='qbit.services.QuadprogRequest.dual', index=15,
      number=16, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='strong', full_name='qbit.services.QuadprogRequest.strong', index=16,
      number=17, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='max_seconds', full_name='qbit.services.QuadprogRequest.max_seconds', index=17,
      number=18, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_QUADPROGREQUEST_FLOAT_LIST, ],
  enum_types=[
    _QUADPROGREQUEST_LPPROBLEM,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=901,
  serialized_end=1492,
)


_QUADPROGRESPONSE = _descriptor.Descriptor(
  name='QuadprogResponse',
  full_name='qbit.services.QuadprogResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='shares', full_name='qbit.services.QuadprogResponse.shares', index=0,
      number=1, type=2, cpp_type=6, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1494,
  serialized_end=1528,
)


_OPERATION = _descriptor.Descriptor(
  name='Operation',
  full_name='qbit.services.Operation',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='qbit.services.Operation.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='metadata', full_name='qbit.services.Operation.metadata', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='done', full_name='qbit.services.Operation.done', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='error', full_name='qbit.services.Operation.error', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='response', full_name='qbit.services.Operation.response', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='result', full_name='qbit.services.Operation.result',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=1531,
  serialized_end=1702,
)


_GETOPERATIONREQUEST = _descriptor.Descriptor(
  name='GetOperationRequest',
  full_name='qbit.services.GetOperationRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='qbit.services.GetOperationRequest.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1704,
  serialized_end=1739,
)


_LISTOPERATIONSREQUEST = _descriptor.Descriptor(
  name='ListOperationsRequest',
  full_name='qbit.services.ListOperationsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='filter', full_name='qbit.services.ListOperationsRequest.filter', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1741,
  serialized_end=1780,
)


_LISTOPERATIONSRESPONSE = _descriptor.Descriptor(
  name='ListOperationsResponse',
  full_name='qbit.services.ListOperationsResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='operations', full_name='qbit.services.ListOperationsResponse.operations', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='next_page_token', full_name='qbit.services.ListOperationsResponse.next_page_token', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1782,
  serialized_end=1877,
)


_CANCELOPERATIONREQUEST = _descriptor.Descriptor(
  name='CancelOperationRequest',
  full_name='qbit.services.CancelOperationRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='qbit.services.CancelOperationRequest.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1879,
  serialized_end=1917,
)


_DELETEOPERATIONREQUEST = _descriptor.Descriptor(
  name='DeleteOperationRequest',
  full_name='qbit.services.DeleteOperationRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='qbit.services.DeleteOperationRequest.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1919,
  serialized_end=1957,
)


_STATUS = _descriptor.Descriptor(
  name='Status',
  full_name='qbit.services.Status',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='code', full_name='qbit.services.Status.code', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='message', full_name='qbit.services.Status.message', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='details', full_name='qbit.services.Status.details', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1959,
  serialized_end=2037,
)

_COMPAREREQUEST.fields_by_name['criteria'].message_type = google_dot_protobuf_dot_struct__pb2._STRUCT
_COMPARISONRESULT.fields_by_name['shared_traits'].message_type = google_dot_protobuf_dot_struct__pb2._STRUCT
_QUADRATICSOLUTION_CONFIGURATIONENTRY.containing_type = _QUADRATICSOLUTION
_QUADRATICSOLUTION.fields_by_name['configuration'].message_type = _QUADRATICSOLUTION_CONFIGURATIONENTRY
_QUADRATICRESPONSE.fields_by_name['solution'].message_type = _QUADRATICSOLUTION
_BINARYPOLYNOMIAL_TERM.containing_type = _BINARYPOLYNOMIAL
_BINARYPOLYNOMIAL.fields_by_name['terms'].message_type = _BINARYPOLYNOMIAL_TERM
_QUADPROGREQUEST_FLOAT_LIST.containing_type = _QUADPROGREQUEST
_QUADPROGREQUEST.fields_by_name['quad_obj_mat'].message_type = _QUADPROGREQUEST_FLOAT_LIST
_QUADPROGREQUEST.fields_by_name['ineq_con_mat'].message_type = _QUADPROGREQUEST_FLOAT_LIST
_QUADPROGREQUEST.fields_by_name['eq_con_mat'].message_type = _QUADPROGREQUEST_FLOAT_LIST
_QUADPROGREQUEST.fields_by_name['lpProblem'].enum_type = _QUADPROGREQUEST_LPPROBLEM
_QUADPROGREQUEST_LPPROBLEM.containing_type = _QUADPROGREQUEST
_OPERATION.fields_by_name['metadata'].message_type = google_dot_protobuf_dot_any__pb2._ANY
_OPERATION.fields_by_name['error'].message_type = _STATUS
_OPERATION.fields_by_name['response'].message_type = google_dot_protobuf_dot_any__pb2._ANY
_OPERATION.oneofs_by_name['result'].fields.append(
  _OPERATION.fields_by_name['error'])
_OPERATION.fields_by_name['error'].containing_oneof = _OPERATION.oneofs_by_name['result']
_OPERATION.oneofs_by_name['result'].fields.append(
  _OPERATION.fields_by_name['response'])
_OPERATION.fields_by_name['response'].containing_oneof = _OPERATION.oneofs_by_name['result']
_LISTOPERATIONSRESPONSE.fields_by_name['operations'].message_type = _OPERATION
_STATUS.fields_by_name['details'].message_type = google_dot_protobuf_dot_any__pb2._ANY
DESCRIPTOR.message_types_by_name['CompareRequest'] = _COMPAREREQUEST
DESCRIPTOR.message_types_by_name['ComparisonResult'] = _COMPARISONRESULT
DESCRIPTOR.message_types_by_name['MathRequest'] = _MATHREQUEST
DESCRIPTOR.message_types_by_name['MathResponse'] = _MATHRESPONSE
DESCRIPTOR.message_types_by_name['QuadraticRequest'] = _QUADRATICREQUEST
DESCRIPTOR.message_types_by_name['QuadraticSolution'] = _QUADRATICSOLUTION
DESCRIPTOR.message_types_by_name['QuadraticResponse'] = _QUADRATICRESPONSE
DESCRIPTOR.message_types_by_name['BinaryPolynomial'] = _BINARYPOLYNOMIAL
DESCRIPTOR.message_types_by_name['QuadprogRequest'] = _QUADPROGREQUEST
DESCRIPTOR.message_types_by_name['QuadprogResponse'] = _QUADPROGRESPONSE
DESCRIPTOR.message_types_by_name['Operation'] = _OPERATION
DESCRIPTOR.message_types_by_name['GetOperationRequest'] = _GETOPERATIONREQUEST
DESCRIPTOR.message_types_by_name['ListOperationsRequest'] = _LISTOPERATIONSREQUEST
DESCRIPTOR.message_types_by_name['ListOperationsResponse'] = _LISTOPERATIONSRESPONSE
DESCRIPTOR.message_types_by_name['CancelOperationRequest'] = _CANCELOPERATIONREQUEST
DESCRIPTOR.message_types_by_name['DeleteOperationRequest'] = _DELETEOPERATIONREQUEST
DESCRIPTOR.message_types_by_name['Status'] = _STATUS

CompareRequest = _reflection.GeneratedProtocolMessageType('CompareRequest', (_message.Message,), dict(
  DESCRIPTOR = _COMPAREREQUEST,
  __module__ = 'qbit_pb2'
  # @@protoc_insertion_point(class_scope:qbit.services.CompareRequest)
  ))
_sym_db.RegisterMessage(CompareRequest)

ComparisonResult = _reflection.GeneratedProtocolMessageType('ComparisonResult', (_message.Message,), dict(
  DESCRIPTOR = _COMPARISONRESULT,
  __module__ = 'qbit_pb2'
  # @@protoc_insertion_point(class_scope:qbit.services.ComparisonResult)
  ))
_sym_db.RegisterMessage(ComparisonResult)

MathRequest = _reflection.GeneratedProtocolMessageType('MathRequest', (_message.Message,), dict(
  DESCRIPTOR = _MATHREQUEST,
  __module__ = 'qbit_pb2'
  # @@protoc_insertion_point(class_scope:qbit.services.MathRequest)
  ))
_sym_db.RegisterMessage(MathRequest)

MathResponse = _reflection.GeneratedProtocolMessageType('MathResponse', (_message.Message,), dict(
  DESCRIPTOR = _MATHRESPONSE,
  __module__ = 'qbit_pb2'
  # @@protoc_insertion_point(class_scope:qbit.services.MathResponse)
  ))
_sym_db.RegisterMessage(MathResponse)

QuadraticRequest = _reflection.GeneratedProtocolMessageType('QuadraticRequest', (_message.Message,), dict(
  DESCRIPTOR = _QUADRATICREQUEST,
  __module__ = 'qbit_pb2'
  # @@protoc_insertion_point(class_scope:qbit.services.QuadraticRequest)
  ))
_sym_db.RegisterMessage(QuadraticRequest)

QuadraticSolution = _reflection.GeneratedProtocolMessageType('QuadraticSolution', (_message.Message,), dict(

  ConfigurationEntry = _reflection.GeneratedProtocolMessageType('ConfigurationEntry', (_message.Message,), dict(
    DESCRIPTOR = _QUADRATICSOLUTION_CONFIGURATIONENTRY,
    __module__ = 'qbit_pb2'
    # @@protoc_insertion_point(class_scope:qbit.services.QuadraticSolution.ConfigurationEntry)
    ))
  ,
  DESCRIPTOR = _QUADRATICSOLUTION,
  __module__ = 'qbit_pb2'
  # @@protoc_insertion_point(class_scope:qbit.services.QuadraticSolution)
  ))
_sym_db.RegisterMessage(QuadraticSolution)
_sym_db.RegisterMessage(QuadraticSolution.ConfigurationEntry)

QuadraticResponse = _reflection.GeneratedProtocolMessageType('QuadraticResponse', (_message.Message,), dict(
  DESCRIPTOR = _QUADRATICRESPONSE,
  __module__ = 'qbit_pb2'
  # @@protoc_insertion_point(class_scope:qbit.services.QuadraticResponse)
  ))
_sym_db.RegisterMessage(QuadraticResponse)

BinaryPolynomial = _reflection.GeneratedProtocolMessageType('BinaryPolynomial', (_message.Message,), dict(

  term = _reflection.GeneratedProtocolMessageType('term', (_message.Message,), dict(
    DESCRIPTOR = _BINARYPOLYNOMIAL_TERM,
    __module__ = 'qbit_pb2'
    # @@protoc_insertion_point(class_scope:qbit.services.BinaryPolynomial.term)
    ))
  ,
  DESCRIPTOR = _BINARYPOLYNOMIAL,
  __module__ = 'qbit_pb2'
  # @@protoc_insertion_point(class_scope:qbit.services.BinaryPolynomial)
  ))
_sym_db.RegisterMessage(BinaryPolynomial)
_sym_db.RegisterMessage(BinaryPolynomial.term)

QuadprogRequest = _reflection.GeneratedProtocolMessageType('QuadprogRequest', (_message.Message,), dict(

  float_list = _reflection.GeneratedProtocolMessageType('float_list', (_message.Message,), dict(
    DESCRIPTOR = _QUADPROGREQUEST_FLOAT_LIST,
    __module__ = 'qbit_pb2'
    # @@protoc_insertion_point(class_scope:qbit.services.QuadprogRequest.float_list)
    ))
  ,
  DESCRIPTOR = _QUADPROGREQUEST,
  __module__ = 'qbit_pb2'
  # @@protoc_insertion_point(class_scope:qbit.services.QuadprogRequest)
  ))
_sym_db.RegisterMessage(QuadprogRequest)
_sym_db.RegisterMessage(QuadprogRequest.float_list)

QuadprogResponse = _reflection.GeneratedProtocolMessageType('QuadprogResponse', (_message.Message,), dict(
  DESCRIPTOR = _QUADPROGRESPONSE,
  __module__ = 'qbit_pb2'
  # @@protoc_insertion_point(class_scope:qbit.services.QuadprogResponse)
  ))
_sym_db.RegisterMessage(QuadprogResponse)

Operation = _reflection.GeneratedProtocolMessageType('Operation', (_message.Message,), dict(
  DESCRIPTOR = _OPERATION,
  __module__ = 'qbit_pb2'
  # @@protoc_insertion_point(class_scope:qbit.services.Operation)
  ))
_sym_db.RegisterMessage(Operation)

GetOperationRequest = _reflection.GeneratedProtocolMessageType('GetOperationRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETOPERATIONREQUEST,
  __module__ = 'qbit_pb2'
  # @@protoc_insertion_point(class_scope:qbit.services.GetOperationRequest)
  ))
_sym_db.RegisterMessage(GetOperationRequest)

ListOperationsRequest = _reflection.GeneratedProtocolMessageType('ListOperationsRequest', (_message.Message,), dict(
  DESCRIPTOR = _LISTOPERATIONSREQUEST,
  __module__ = 'qbit_pb2'
  # @@protoc_insertion_point(class_scope:qbit.services.ListOperationsRequest)
  ))
_sym_db.RegisterMessage(ListOperationsRequest)

ListOperationsResponse = _reflection.GeneratedProtocolMessageType('ListOperationsResponse', (_message.Message,), dict(
  DESCRIPTOR = _LISTOPERATIONSRESPONSE,
  __module__ = 'qbit_pb2'
  # @@protoc_insertion_point(class_scope:qbit.services.ListOperationsResponse)
  ))
_sym_db.RegisterMessage(ListOperationsResponse)

CancelOperationRequest = _reflection.GeneratedProtocolMessageType('CancelOperationRequest', (_message.Message,), dict(
  DESCRIPTOR = _CANCELOPERATIONREQUEST,
  __module__ = 'qbit_pb2'
  # @@protoc_insertion_point(class_scope:qbit.services.CancelOperationRequest)
  ))
_sym_db.RegisterMessage(CancelOperationRequest)

DeleteOperationRequest = _reflection.GeneratedProtocolMessageType('DeleteOperationRequest', (_message.Message,), dict(
  DESCRIPTOR = _DELETEOPERATIONREQUEST,
  __module__ = 'qbit_pb2'
  # @@protoc_insertion_point(class_scope:qbit.services.DeleteOperationRequest)
  ))
_sym_db.RegisterMessage(DeleteOperationRequest)

Status = _reflection.GeneratedProtocolMessageType('Status', (_message.Message,), dict(
  DESCRIPTOR = _STATUS,
  __module__ = 'qbit_pb2'
  # @@protoc_insertion_point(class_scope:qbit.services.Status)
  ))
_sym_db.RegisterMessage(Status)


_QUADRATICSOLUTION_CONFIGURATIONENTRY.has_options = True
_QUADRATICSOLUTION_CONFIGURATIONENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_QUADPROGREQUEST_FLOAT_LIST.fields_by_name['items'].has_options = True
_QUADPROGREQUEST_FLOAT_LIST.fields_by_name['items']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))
try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces


  class QuboStub(object):

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.SQAMatrix = channel.stream_unary(
          '/qbit.services.Qubo/SQAMatrix',
          request_serializer=QuadraticRequest.SerializeToString,
          response_deserializer=QuadraticResponse.FromString,
          )
      self.Tabu = channel.stream_unary(
          '/qbit.services.Qubo/Tabu',
          request_serializer=QuadraticRequest.SerializeToString,
          response_deserializer=QuadraticResponse.FromString,
          )
      self.SQA = channel.unary_unary(
          '/qbit.services.Qubo/SQA',
          request_serializer=BinaryPolynomial.SerializeToString,
          response_deserializer=QuadraticResponse.FromString,
          )
      self.Hobo2Qubo = channel.unary_unary(
          '/qbit.services.Qubo/Hobo2Qubo',
          request_serializer=BinaryPolynomial.SerializeToString,
          response_deserializer=BinaryPolynomial.FromString,
          )


  class QuboServicer(object):

    def SQAMatrix(self, request_iterator, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def Tabu(self, request_iterator, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def SQA(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def Hobo2Qubo(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_QuboServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'SQAMatrix': grpc.stream_unary_rpc_method_handler(
            servicer.SQAMatrix,
            request_deserializer=QuadraticRequest.FromString,
            response_serializer=QuadraticResponse.SerializeToString,
        ),
        'Tabu': grpc.stream_unary_rpc_method_handler(
            servicer.Tabu,
            request_deserializer=QuadraticRequest.FromString,
            response_serializer=QuadraticResponse.SerializeToString,
        ),
        'SQA': grpc.unary_unary_rpc_method_handler(
            servicer.SQA,
            request_deserializer=BinaryPolynomial.FromString,
            response_serializer=QuadraticResponse.SerializeToString,
        ),
        'Hobo2Qubo': grpc.unary_unary_rpc_method_handler(
            servicer.Hobo2Qubo,
            request_deserializer=BinaryPolynomial.FromString,
            response_serializer=BinaryPolynomial.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'qbit.services.Qubo', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class MolecularSimilarityStub(object):

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.Compare = channel.unary_unary(
          '/qbit.services.MolecularSimilarity/Compare',
          request_serializer=CompareRequest.SerializeToString,
          response_deserializer=ComparisonResult.FromString,
          )


  class MolecularSimilarityServicer(object):

    def Compare(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_MolecularSimilarityServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'Compare': grpc.unary_unary_rpc_method_handler(
            servicer.Compare,
            request_deserializer=CompareRequest.FromString,
            response_serializer=ComparisonResult.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'qbit.services.MolecularSimilarity', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class MathStub(object):

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.Add = channel.unary_unary(
          '/qbit.services.Math/Add',
          request_serializer=MathRequest.SerializeToString,
          response_deserializer=MathResponse.FromString,
          )
      self.Sub = channel.unary_unary(
          '/qbit.services.Math/Sub',
          request_serializer=MathRequest.SerializeToString,
          response_deserializer=MathResponse.FromString,
          )


  class MathServicer(object):

    def Add(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def Sub(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_MathServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'Add': grpc.unary_unary_rpc_method_handler(
            servicer.Add,
            request_deserializer=MathRequest.FromString,
            response_serializer=MathResponse.SerializeToString,
        ),
        'Sub': grpc.unary_unary_rpc_method_handler(
            servicer.Sub,
            request_deserializer=MathRequest.FromString,
            response_serializer=MathResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'qbit.services.Math', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class QbcbcStub(object):

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.Quadprog = channel.unary_unary(
          '/qbit.services.Qbcbc/Quadprog',
          request_serializer=QuadprogRequest.SerializeToString,
          response_deserializer=QuadprogResponse.FromString,
          )
      self.AsyncQuadprog = channel.unary_unary(
          '/qbit.services.Qbcbc/AsyncQuadprog',
          request_serializer=QuadprogRequest.SerializeToString,
          response_deserializer=Operation.FromString,
          )


  class QbcbcServicer(object):

    def Quadprog(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def AsyncQuadprog(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_QbcbcServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'Quadprog': grpc.unary_unary_rpc_method_handler(
            servicer.Quadprog,
            request_deserializer=QuadprogRequest.FromString,
            response_serializer=QuadprogResponse.SerializeToString,
        ),
        'AsyncQuadprog': grpc.unary_unary_rpc_method_handler(
            servicer.AsyncQuadprog,
            request_deserializer=QuadprogRequest.FromString,
            response_serializer=Operation.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'qbit.services.Qbcbc', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class OperationsStub(object):

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.ListOperations = channel.unary_unary(
          '/qbit.services.Operations/ListOperations',
          request_serializer=ListOperationsRequest.SerializeToString,
          response_deserializer=ListOperationsResponse.FromString,
          )
      self.GetOperation = channel.unary_unary(
          '/qbit.services.Operations/GetOperation',
          request_serializer=GetOperationRequest.SerializeToString,
          response_deserializer=Operation.FromString,
          )
      self.CancelOperation = channel.unary_unary(
          '/qbit.services.Operations/CancelOperation',
          request_serializer=CancelOperationRequest.SerializeToString,
          response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
          )


  class OperationsServicer(object):

    def ListOperations(self, request, context):
      """Lists operations that match the specified filter in the request. If the
      server doesn't support this method, it returns `UNIMPLEMENTED`.

      NOTE: the `name` binding below allows API services to override the binding
      to use different resource name schemes, such as `users/*/operations`.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetOperation(self, request, context):
      """Gets the latest state of a long-running operation.  Clients can use this
      method to poll the operation result at intervals as recommended by the API
      service.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CancelOperation(self, request, context):
      """Deletes a long-running operation. This method indicates that the client is
      no longer interested in the operation result. It does not cancel the
      operation. If the server doesn't support this method, it returns
      `google.rpc.Code.UNIMPLEMENTED`.
      rpc DeleteOperation(DeleteOperationRequest) returns (google.protobuf.Empty) {}

      Starts asynchronous cancellation on a long-running operation.  The server
      makes a best effort to cancel the operation, but success is not
      guaranteed.  If the server doesn't support this method, it returns
      `google.rpc.Code.UNIMPLEMENTED`.  Clients can use
      [Operations.GetOperation][google.longrunning.Operations.GetOperation] or
      other methods to check whether the cancellation succeeded or whether the
      operation completed despite cancellation. On successful cancellation,
      the operation is not deleted; instead, it becomes an operation with
      an [Operation.error][google.longrunning.Operation.error] value with a [google.rpc.Status.code][google.rpc.Status.code] of 1,
      corresponding to `Code.CANCELLED`.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_OperationsServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'ListOperations': grpc.unary_unary_rpc_method_handler(
            servicer.ListOperations,
            request_deserializer=ListOperationsRequest.FromString,
            response_serializer=ListOperationsResponse.SerializeToString,
        ),
        'GetOperation': grpc.unary_unary_rpc_method_handler(
            servicer.GetOperation,
            request_deserializer=GetOperationRequest.FromString,
            response_serializer=Operation.SerializeToString,
        ),
        'CancelOperation': grpc.unary_unary_rpc_method_handler(
            servicer.CancelOperation,
            request_deserializer=CancelOperationRequest.FromString,
            response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'qbit.services.Operations', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class BetaQuboServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    def SQAMatrix(self, request_iterator, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def Tabu(self, request_iterator, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def SQA(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def Hobo2Qubo(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaQuboStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    def SQAMatrix(self, request_iterator, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    SQAMatrix.future = None
    def Tabu(self, request_iterator, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    Tabu.future = None
    def SQA(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    SQA.future = None
    def Hobo2Qubo(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    Hobo2Qubo.future = None


  def beta_create_Qubo_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('qbit.services.Qubo', 'Hobo2Qubo'): BinaryPolynomial.FromString,
      ('qbit.services.Qubo', 'SQA'): BinaryPolynomial.FromString,
      ('qbit.services.Qubo', 'SQAMatrix'): QuadraticRequest.FromString,
      ('qbit.services.Qubo', 'Tabu'): QuadraticRequest.FromString,
    }
    response_serializers = {
      ('qbit.services.Qubo', 'Hobo2Qubo'): BinaryPolynomial.SerializeToString,
      ('qbit.services.Qubo', 'SQA'): QuadraticResponse.SerializeToString,
      ('qbit.services.Qubo', 'SQAMatrix'): QuadraticResponse.SerializeToString,
      ('qbit.services.Qubo', 'Tabu'): QuadraticResponse.SerializeToString,
    }
    method_implementations = {
      ('qbit.services.Qubo', 'Hobo2Qubo'): face_utilities.unary_unary_inline(servicer.Hobo2Qubo),
      ('qbit.services.Qubo', 'SQA'): face_utilities.unary_unary_inline(servicer.SQA),
      ('qbit.services.Qubo', 'SQAMatrix'): face_utilities.stream_unary_inline(servicer.SQAMatrix),
      ('qbit.services.Qubo', 'Tabu'): face_utilities.stream_unary_inline(servicer.Tabu),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_Qubo_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('qbit.services.Qubo', 'Hobo2Qubo'): BinaryPolynomial.SerializeToString,
      ('qbit.services.Qubo', 'SQA'): BinaryPolynomial.SerializeToString,
      ('qbit.services.Qubo', 'SQAMatrix'): QuadraticRequest.SerializeToString,
      ('qbit.services.Qubo', 'Tabu'): QuadraticRequest.SerializeToString,
    }
    response_deserializers = {
      ('qbit.services.Qubo', 'Hobo2Qubo'): BinaryPolynomial.FromString,
      ('qbit.services.Qubo', 'SQA'): QuadraticResponse.FromString,
      ('qbit.services.Qubo', 'SQAMatrix'): QuadraticResponse.FromString,
      ('qbit.services.Qubo', 'Tabu'): QuadraticResponse.FromString,
    }
    cardinalities = {
      'Hobo2Qubo': cardinality.Cardinality.UNARY_UNARY,
      'SQA': cardinality.Cardinality.UNARY_UNARY,
      'SQAMatrix': cardinality.Cardinality.STREAM_UNARY,
      'Tabu': cardinality.Cardinality.STREAM_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'qbit.services.Qubo', cardinalities, options=stub_options)


  class BetaMolecularSimilarityServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    def Compare(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaMolecularSimilarityStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    def Compare(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    Compare.future = None


  def beta_create_MolecularSimilarity_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('qbit.services.MolecularSimilarity', 'Compare'): CompareRequest.FromString,
    }
    response_serializers = {
      ('qbit.services.MolecularSimilarity', 'Compare'): ComparisonResult.SerializeToString,
    }
    method_implementations = {
      ('qbit.services.MolecularSimilarity', 'Compare'): face_utilities.unary_unary_inline(servicer.Compare),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_MolecularSimilarity_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('qbit.services.MolecularSimilarity', 'Compare'): CompareRequest.SerializeToString,
    }
    response_deserializers = {
      ('qbit.services.MolecularSimilarity', 'Compare'): ComparisonResult.FromString,
    }
    cardinalities = {
      'Compare': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'qbit.services.MolecularSimilarity', cardinalities, options=stub_options)


  class BetaMathServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    def Add(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def Sub(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaMathStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    def Add(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    Add.future = None
    def Sub(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    Sub.future = None


  def beta_create_Math_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('qbit.services.Math', 'Add'): MathRequest.FromString,
      ('qbit.services.Math', 'Sub'): MathRequest.FromString,
    }
    response_serializers = {
      ('qbit.services.Math', 'Add'): MathResponse.SerializeToString,
      ('qbit.services.Math', 'Sub'): MathResponse.SerializeToString,
    }
    method_implementations = {
      ('qbit.services.Math', 'Add'): face_utilities.unary_unary_inline(servicer.Add),
      ('qbit.services.Math', 'Sub'): face_utilities.unary_unary_inline(servicer.Sub),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_Math_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('qbit.services.Math', 'Add'): MathRequest.SerializeToString,
      ('qbit.services.Math', 'Sub'): MathRequest.SerializeToString,
    }
    response_deserializers = {
      ('qbit.services.Math', 'Add'): MathResponse.FromString,
      ('qbit.services.Math', 'Sub'): MathResponse.FromString,
    }
    cardinalities = {
      'Add': cardinality.Cardinality.UNARY_UNARY,
      'Sub': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'qbit.services.Math', cardinalities, options=stub_options)


  class BetaQbcbcServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    def Quadprog(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def AsyncQuadprog(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaQbcbcStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    def Quadprog(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    Quadprog.future = None
    def AsyncQuadprog(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    AsyncQuadprog.future = None


  def beta_create_Qbcbc_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('qbit.services.Qbcbc', 'AsyncQuadprog'): QuadprogRequest.FromString,
      ('qbit.services.Qbcbc', 'Quadprog'): QuadprogRequest.FromString,
    }
    response_serializers = {
      ('qbit.services.Qbcbc', 'AsyncQuadprog'): Operation.SerializeToString,
      ('qbit.services.Qbcbc', 'Quadprog'): QuadprogResponse.SerializeToString,
    }
    method_implementations = {
      ('qbit.services.Qbcbc', 'AsyncQuadprog'): face_utilities.unary_unary_inline(servicer.AsyncQuadprog),
      ('qbit.services.Qbcbc', 'Quadprog'): face_utilities.unary_unary_inline(servicer.Quadprog),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_Qbcbc_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('qbit.services.Qbcbc', 'AsyncQuadprog'): QuadprogRequest.SerializeToString,
      ('qbit.services.Qbcbc', 'Quadprog'): QuadprogRequest.SerializeToString,
    }
    response_deserializers = {
      ('qbit.services.Qbcbc', 'AsyncQuadprog'): Operation.FromString,
      ('qbit.services.Qbcbc', 'Quadprog'): QuadprogResponse.FromString,
    }
    cardinalities = {
      'AsyncQuadprog': cardinality.Cardinality.UNARY_UNARY,
      'Quadprog': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'qbit.services.Qbcbc', cardinalities, options=stub_options)


  class BetaOperationsServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    def ListOperations(self, request, context):
      """Lists operations that match the specified filter in the request. If the
      server doesn't support this method, it returns `UNIMPLEMENTED`.

      NOTE: the `name` binding below allows API services to override the binding
      to use different resource name schemes, such as `users/*/operations`.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetOperation(self, request, context):
      """Gets the latest state of a long-running operation.  Clients can use this
      method to poll the operation result at intervals as recommended by the API
      service.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CancelOperation(self, request, context):
      """Deletes a long-running operation. This method indicates that the client is
      no longer interested in the operation result. It does not cancel the
      operation. If the server doesn't support this method, it returns
      `google.rpc.Code.UNIMPLEMENTED`.
      rpc DeleteOperation(DeleteOperationRequest) returns (google.protobuf.Empty) {}

      Starts asynchronous cancellation on a long-running operation.  The server
      makes a best effort to cancel the operation, but success is not
      guaranteed.  If the server doesn't support this method, it returns
      `google.rpc.Code.UNIMPLEMENTED`.  Clients can use
      [Operations.GetOperation][google.longrunning.Operations.GetOperation] or
      other methods to check whether the cancellation succeeded or whether the
      operation completed despite cancellation. On successful cancellation,
      the operation is not deleted; instead, it becomes an operation with
      an [Operation.error][google.longrunning.Operation.error] value with a [google.rpc.Status.code][google.rpc.Status.code] of 1,
      corresponding to `Code.CANCELLED`.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaOperationsStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    def ListOperations(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Lists operations that match the specified filter in the request. If the
      server doesn't support this method, it returns `UNIMPLEMENTED`.

      NOTE: the `name` binding below allows API services to override the binding
      to use different resource name schemes, such as `users/*/operations`.
      """
      raise NotImplementedError()
    ListOperations.future = None
    def GetOperation(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Gets the latest state of a long-running operation.  Clients can use this
      method to poll the operation result at intervals as recommended by the API
      service.
      """
      raise NotImplementedError()
    GetOperation.future = None
    def CancelOperation(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Deletes a long-running operation. This method indicates that the client is
      no longer interested in the operation result. It does not cancel the
      operation. If the server doesn't support this method, it returns
      `google.rpc.Code.UNIMPLEMENTED`.
      rpc DeleteOperation(DeleteOperationRequest) returns (google.protobuf.Empty) {}

      Starts asynchronous cancellation on a long-running operation.  The server
      makes a best effort to cancel the operation, but success is not
      guaranteed.  If the server doesn't support this method, it returns
      `google.rpc.Code.UNIMPLEMENTED`.  Clients can use
      [Operations.GetOperation][google.longrunning.Operations.GetOperation] or
      other methods to check whether the cancellation succeeded or whether the
      operation completed despite cancellation. On successful cancellation,
      the operation is not deleted; instead, it becomes an operation with
      an [Operation.error][google.longrunning.Operation.error] value with a [google.rpc.Status.code][google.rpc.Status.code] of 1,
      corresponding to `Code.CANCELLED`.
      """
      raise NotImplementedError()
    CancelOperation.future = None


  def beta_create_Operations_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('qbit.services.Operations', 'CancelOperation'): CancelOperationRequest.FromString,
      ('qbit.services.Operations', 'GetOperation'): GetOperationRequest.FromString,
      ('qbit.services.Operations', 'ListOperations'): ListOperationsRequest.FromString,
    }
    response_serializers = {
      ('qbit.services.Operations', 'CancelOperation'): google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ('qbit.services.Operations', 'GetOperation'): Operation.SerializeToString,
      ('qbit.services.Operations', 'ListOperations'): ListOperationsResponse.SerializeToString,
    }
    method_implementations = {
      ('qbit.services.Operations', 'CancelOperation'): face_utilities.unary_unary_inline(servicer.CancelOperation),
      ('qbit.services.Operations', 'GetOperation'): face_utilities.unary_unary_inline(servicer.GetOperation),
      ('qbit.services.Operations', 'ListOperations'): face_utilities.unary_unary_inline(servicer.ListOperations),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_Operations_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('qbit.services.Operations', 'CancelOperation'): CancelOperationRequest.SerializeToString,
      ('qbit.services.Operations', 'GetOperation'): GetOperationRequest.SerializeToString,
      ('qbit.services.Operations', 'ListOperations'): ListOperationsRequest.SerializeToString,
    }
    response_deserializers = {
      ('qbit.services.Operations', 'CancelOperation'): google_dot_protobuf_dot_empty__pb2.Empty.FromString,
      ('qbit.services.Operations', 'GetOperation'): Operation.FromString,
      ('qbit.services.Operations', 'ListOperations'): ListOperationsResponse.FromString,
    }
    cardinalities = {
      'CancelOperation': cardinality.Cardinality.UNARY_UNARY,
      'GetOperation': cardinality.Cardinality.UNARY_UNARY,
      'ListOperations': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'qbit.services.Operations', cardinalities, options=stub_options)
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
