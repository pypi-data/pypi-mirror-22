
     ____ __     ____   ___    ____ __         (((((()
    | |_  \ \  /   ) ) | |  ) | |_  \ \  /  \(@)- /
    |_|__  \_\/  __)_) |_|_/  |_|__  \_\/   /(@)- \
                                               ((())))
    ___         __________________________________
    ___ VERSION __________________________________

    ev3dev-c    0.9b8
                2017-05-05

    kernel      4.4.61-20-ev3dev-ev3
    ___             ______________________________
    ___ WHAT IS IT? ______________________________

    ev3dev-c is a C library for LEGO MINDSTORMS EV3 Debian
    (http://www.ev3dev.org/) which wraps an access to the EV3 hardware.

    The library also supports a remote access to the EV3 brick over UDP.
    So, if you set up WLAN on the brick you will be able to drive
    the EV3 hardware from your computer, e.g. under Windows.

    Python (see "python/ev3dev" folder), Ruby (see "ruby" folder) and
    Perl (see "perl" folder) libraries are automatically generated from
    C library using SWIG tool.

    Use pip to install ev3dev-c Python package:

        pip install --pre ev3dev-c

    ev3dev-c is currently in a beta stage, therefore you have to use
    the key "--pre".

    Python package contains the following binary modules:
    _ev3.pyd    – for a remote access, under Windows (x86);
    _ev3.so     – for LEGO Mindstorms EV3 Debian.

    You have to install "python-dev", "ruby-dev" and "libperl-dev"
    packages to build the corresponding library.

    ___       ____________________________________
    ___ F A Q ____________________________________

    * * *  What are unusual ".yu", ".yu-с" and ".yu-h" files for?

    ev3dev-c is written using yupp lexical preprocessor, but don't
    panic, generated source files in C also included.

    * * *  How can I see some examples?

    A comprehensive example based on coroutines:

        http://in4lio.github.io/ev3dev-c/drive_8c-example.html

    An example of using "brick" simplified library:

        http://in4lio.github.io/ev3dev-c/remote_8c-example.html
        http://in4lio.github.io/ev3dev-c/remote_8py-example.html

    There are a few more examples in C:

        https://github.com/in4lio/ev3dev-c/blob/master/eg/

    light    – LEDs blinking example
    sensor   – TOUCH and COLOR sensors usage
    tacho    – a TACHO motor running for 5 sec
    port     – Use of EV3 ports
    dc       – Use of a DC motor
    rcx_led  – Use of a RCX LED
    servo    – a SERVO motor example

    > cd eg/light/
    > make
    > Debug/light
    or
    > Debug\mingw\light.exe

    Similar examples in Python could be found in "python/ev3dev/eg".
    Examples for Ruby are placed in "ruby/eg", for Perl in "perl/eg".

    * * *  How to drive the EV3 hardware remotely

    https://github.com/in4lio/ev3dev-c/tree/master/source/ev3/ev3_link/

    * * *  How to make and install STATIC library

    > cd source/ev3/
    > make
    > make install

    * * *  How to make and install SHARED library

    > cd source/ev3/
    > make shared
    > make shared-install

    * * *  How to use SHARED library

    > cd eg/port/
    > gcc port.c -lev3dev-c -o port
    > export LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH
    > ./port

    ___          _________________________________
    ___ GET HELP _________________________________

    Docs generated by Doxygen can be found on

        http://in4lio.github.io/ev3dev-c/

    ___     ______________________________________
    ___ GIT ______________________________________

    Run the following on your command-line to clone the library
    repository and its submodules:

        git clone https://github.com/in4lio/ev3dev-c.git
        cd ev3dev-c
        git submodule update --init --recursive

    To pull the latest library and its submodules:

        cd ev3dev-c
        git pull origin master
        git submodule foreach git pull origin master

    ___         __________________________________
    ___ CONTACT __________________________________

    Please feel free to contact me at in4lio+ev3@gmail.com if you have
    any questions about the library.

    ___         __________________________________
    ___ LICENSE __________________________________

    Please see the file called "LICENSE".
