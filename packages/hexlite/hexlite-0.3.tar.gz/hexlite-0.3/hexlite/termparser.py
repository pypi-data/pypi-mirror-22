
# termparser.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = '36102C86C135ABA0E5C118D876BD38E7'
    
_lr_action_items = {'STRING':([0,1,2,4,5,6,7,8,9,12,20,22,23,24,25,26,27,28,29,30,31,],[2,2,-28,2,-31,-30,-29,2,2,-25,-27,-26,2,-22,2,2,2,2,2,-23,-24,]),']':([1,2,5,6,7,9,10,11,12,14,15,16,17,18,20,21,22,24,30,31,32,33,34,35,36,37,],[-21,-28,-31,-30,-29,22,-20,-12,-25,-13,-16,-17,-9,-8,-27,31,-26,-22,-23,-24,-14,-15,-18,-19,-11,-10,]),')':([1,2,4,5,6,7,10,11,12,13,14,15,16,17,18,20,22,24,30,31,32,33,34,35,36,37,],[-21,-28,12,-31,-30,-29,-20,-12,-25,24,-13,-16,-17,-9,-8,-27,-26,-22,-23,-24,-14,-15,-18,-19,-11,-10,]),'(':([0,1,2,4,5,6,7,8,9,12,20,22,23,24,25,26,27,28,29,30,31,],[4,4,-28,4,-31,-30,-29,4,4,-25,-27,-26,4,-22,4,4,4,4,4,-23,-24,]),'SEPCOL':([1,2,5,6,7,10,11,12,14,15,16,20,22,24,30,31,32,33,34,35,],[-21,-28,-31,-30,-29,-20,23,-25,25,-16,-17,-27,-26,-22,-23,-24,-14,-15,-18,-19,]),',':([1,2,5,6,7,10,12,15,16,20,22,24,30,31,34,35,],[-21,-28,-31,-30,-29,-20,-25,26,27,-27,-26,-22,-23,-24,-18,-19,]),'OTHER':([0,1,2,4,5,6,7,8,9,12,20,22,23,24,25,26,27,28,29,30,31,],[5,5,-28,5,-31,-30,-29,5,5,-25,-27,-26,5,-22,5,5,5,5,5,-23,-24,]),';':([1,2,5,6,7,10,11,12,14,15,16,17,18,20,22,24,30,31,32,33,34,35,36,37,],[-21,-28,-31,-30,-29,-20,-12,-25,-13,-16,-17,28,29,-27,-26,-22,-23,-24,-14,-15,-18,-19,-11,-10,]),'OPERATOR':([0,1,2,4,5,6,7,8,9,12,20,22,23,24,25,26,27,28,29,30,31,],[6,6,-28,6,-31,-30,-29,6,6,-25,-27,-26,6,-22,6,6,6,6,6,-23,-24,]),'INTEGER':([0,1,2,4,5,6,7,8,9,12,20,22,23,24,25,26,27,28,29,30,31,],[7,7,-28,7,-31,-30,-29,7,7,-25,-27,-26,7,-22,7,7,7,7,7,-23,-24,]),'{':([0,1,2,4,5,6,7,8,9,12,20,22,23,24,25,26,27,28,29,30,31,],[8,8,-28,8,-31,-30,-29,8,8,-25,-27,-26,8,-22,8,8,8,8,8,-23,-24,]),'}':([1,2,5,6,7,8,10,11,12,14,15,16,17,18,19,20,22,24,30,31,32,33,34,35,36,37,],[-21,-28,-31,-30,-29,20,-20,-12,-25,-13,-16,-17,-9,-8,30,-27,-26,-22,-23,-24,-14,-15,-18,-19,-11,-10,]),'[':([0,1,2,4,5,6,7,8,9,12,20,22,23,24,25,26,27,28,29,30,31,],[9,9,-28,9,-31,-30,-29,9,9,-25,-27,-26,9,-22,9,9,9,9,9,-23,-24,]),'$end':([1,2,3,5,6,7,10,12,20,22,24,30,31,],[-21,-28,0,-31,-30,-29,-20,-25,-27,-26,-22,-23,-24,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'eterm':([0,1,4,8,9,23,25,26,27,28,29,],[1,1,1,1,1,1,1,1,1,1,1,]),'collist':([4,8,9,28,29,],[11,11,11,11,11,]),'elist':([0,1,4,8,9,23,25,26,27,28,29,],[3,10,16,16,16,16,16,34,35,16,16,]),'expandlist':([4,8,9,28,29,],[17,17,17,36,37,]),'commalist':([4,8,9,23,25,28,29,],[15,15,15,15,15,15,15,]),'conjlist':([4,8,9,23,25,28,29,],[14,14,14,32,33,14,14,]),'disjlist':([4,8,9,],[13,19,21,]),'semicollist':([4,8,9,],[18,18,18,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> elist","S'",1,None,None,None),
  ('content -> statement content','content',2,'p_content_1','shallowhexparser.py',157),
  ('content -> <empty>','content',0,'p_content_2','shallowhexparser.py',160),
  ('statement -> rule STOP [ expandlist ]','statement',5,'p_statement','shallowhexparser.py',165),
  ('statement -> rule STOP','statement',2,'p_statement','shallowhexparser.py',166),
  ('statement -> disjlist STOP','statement',2,'p_statement','shallowhexparser.py',167),
  ('rule -> disjlist SEPRULE disjlist','rule',3,'p_rule','shallowhexparser.py',176),
  ('rule -> SEPRULE disjlist','rule',2,'p_rule','shallowhexparser.py',177),
  ('disjlist -> semicollist','disjlist',1,'p_disjlist','shallowhexparser.py',194),
  ('disjlist -> expandlist','disjlist',1,'p_disjlist','shallowhexparser.py',195),
  ('semicollist -> semicollist ; expandlist','semicollist',3,'p_semicollist_1','shallowhexparser.py',200),
  ('semicollist -> expandlist ; expandlist','semicollist',3,'p_semicollist_2','shallowhexparser.py',203),
  ('expandlist -> collist','expandlist',1,'p_expandlist','shallowhexparser.py',209),
  ('expandlist -> conjlist','expandlist',1,'p_expandlist','shallowhexparser.py',210),
  ('collist -> collist SEPCOL conjlist','collist',3,'p_collist_1','shallowhexparser.py',215),
  ('collist -> conjlist SEPCOL conjlist','collist',3,'p_collist_2','shallowhexparser.py',218),
  ('conjlist -> commalist','conjlist',1,'p_conjlist','shallowhexparser.py',223),
  ('conjlist -> elist','conjlist',1,'p_conjlist','shallowhexparser.py',224),
  ('commalist -> commalist , elist','commalist',3,'p_commalist_1','shallowhexparser.py',229),
  ('commalist -> elist , elist','commalist',3,'p_commalist_2','shallowhexparser.py',232),
  ('elist -> eterm elist','elist',2,'p_elist_1','shallowhexparser.py',236),
  ('elist -> eterm','elist',1,'p_elist_2','shallowhexparser.py',239),
  ('eterm -> ( disjlist )','eterm',3,'p_eterm_1','shallowhexparser.py',244),
  ('eterm -> { disjlist }','eterm',3,'p_eterm_1','shallowhexparser.py',245),
  ('eterm -> [ disjlist ]','eterm',3,'p_eterm_1','shallowhexparser.py',246),
  ('eterm -> ( )','eterm',2,'p_eterm_2','shallowhexparser.py',252),
  ('eterm -> [ ]','eterm',2,'p_eterm_2','shallowhexparser.py',253),
  ('eterm -> { }','eterm',2,'p_eterm_2','shallowhexparser.py',254),
  ('eterm -> STRING','eterm',1,'p_eterm_3','shallowhexparser.py',260),
  ('eterm -> INTEGER','eterm',1,'p_eterm_3','shallowhexparser.py',261),
  ('eterm -> OPERATOR','eterm',1,'p_eterm_3','shallowhexparser.py',262),
  ('eterm -> OTHER','eterm',1,'p_eterm_3','shallowhexparser.py',263),
]
