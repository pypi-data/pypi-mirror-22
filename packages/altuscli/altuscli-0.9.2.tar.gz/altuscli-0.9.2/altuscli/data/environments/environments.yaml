swagger: "2.0"
x-endpoint-name: environments
info:
  version: 0.1-SNAPSHOT
  title: Cloudera Environments Service
  license:
    name: Apache 2.0
  description: Cloudera Environments Service is a web service that manages cloud provider access.
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /environments/createAWSEnvironment:
    post:
      summary: Creates a new AWS environment.
      description: Creates a new AWS environment.
      operationId: createAWSEnvironment
      x-right: environments/createAWSEnvironment
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateAWSEnvironmentRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/CreateAWSEnvironmentResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /environments/deleteEnvironment:
    post:
      summary: Deletes an environment.
      description: Deletes an environment.
      operationId: deleteEnvironment
      x-right: environments/deleteEnvironment
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteEnvironmentRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/DeleteEnvironmentResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /environments/listEnvironments:
    post:
      summary: Lists environments.
      description: Lists environments. If no environment names are specified, the call lists all environments.
      operationId: listEnvironments
      x-right: environments/listEnvironments
      x-paginates: true
      x-paging-default-max-items: 100
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListEnvironmentsRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/ListEnvironmentsResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /environments/getInfoForAWSCrossAccountAccess:
    post:
      summary: Retrieves the information required to set up an AWS cross-account access role.
      description: Retrieves the information required to set up an AWS cross-account access role.
      operationId: getInfoForAWSCrossAccountAccess
      x-right: environments/getInfoForAWSCrossAccountAccess
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetInfoForAWSCrossAccountAccessRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/GetInfoForAWSCrossAccountAccessResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
  /environments/getClientAccountSetupCloudFormationTemplate:
    post:
      summary: Retrieves the CloudFormation template that creates all necessary resources in client's account.
      description: Retrieves the CloudFormation template that creates all necessary resources in client's account.
      operationId: getClientAccountSetupCloudFormationTemplate
      x-right: environments/getClientAccountSetupCloudFormationTemplate
      parameters:
        - name: input
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetClientAccountSetupCloudFormationTemplateRequest'
      responses:
        200:
          description: Expected response to a valid request.
          schema:
            $ref: '#/definitions/GetClientAccountSetupCloudFormationTemplateResponse'
        default:
          description: The default response on an error.
          schema:
            $ref: '#/definitions/Error'
definitions:
  Error:
    type: object
    description: An object returned on an error.
    properties:
      code:
        type: string
        description: The error code.
      message:
        type: string
        description: The error message.
  InfoForAWSCrossAccountAccess:
    type: object
    description: Container for information required to set up an AWS cross-account access role.
    required:
      - clouderaRoleARN
      - clouderaAccountId
      - externalIdForAWSDelegatedAccess
    properties:
      clouderaRoleARN:
        type: string
        description: The AWS IAM role that will be used by Cloudera when assuming the customer provided cross-account access role when accessing the cusotmer's AWS account.
      clouderaAccountId:
        type: string
        description: The role that will be used by Cloudera to assume the cross-account access role in the customer AWS account.
      externalIdForAWSDelegatedAccess:
        type: string
        description: The external ID that will be used by Cloudera when assuming the customer provided cross-account access role when accessing the customer's AWS account.
  S3GuardConfigurationRequest:
    type: object
    description: Defines configurations required to enable S3 consistent view (S3Guard).
    required:
      - enable
    properties:
      enable:
        type: boolean
        description: Enable S3Guard for operations in the environment. Only applies to clusters using CDH 5.11 and higher. Note that S3Guard tracks S3 metadata using an AWS DynamoDB database, so you will incur AWS charges for using that database.
      tableName:
        type: string
        description: The name of the DynamoDB table that stores the S3Guard Metadata (default s3guard-metadata).
      readCapacity:
        type: integer
        format: int32
        description: Provisioned throughput requirements, in capacity units, for read operations from the DynamoDB table used for the S3Guard Metadata. This value is only used when creating a new DynamoDB table. After the table is created, you can manually provision the throughput by increasing or decreasing read capacity as needed for existing tables (default 500).
      writeCapacity:
        type: integer
        format: int32
        description: Provisioned throughput requirements, in capacity units, for write operations to the DynamoDB table used for the S3Guard Metadata. This value is only used when creating a new DynamoDB table. After the table is created, you can manually provision the throughput by increasing or decreasing the write capacity as needed for existing tables (default 100).
      pruneAgeMs:
        type: integer
        format: int32
        description: Maximum age for S3Guard Metadata. Whenever the Prune command runs, entries in the S3Guard Metadata Cache older than this age will be deleted (default 24 hours).
  S3GuardConfiguration:
    type: object
    description: The S3 consistent view (S3Guard) configuration.
    required:
      - enable
    properties:
      enable:
        type: boolean
        description: Whether S3Guard is enabled.
      tableName:
        type: string
        description: The name of the DynamoDB table that stores the S3Guard Metadata.
      readCapacity:
        type: integer
        format: int32
        description: Provisioned throughput requirements, in capacity units, for read operations from the DynamoDB table used for the S3Guard Metadata. This value is only used when creating a new DynamoDB table. After the table is created, you can manually provision the throughput by increasing or decreasing read capacity as needed for existing tables.
      writeCapacity:
        type: integer
        format: int32
        description: Provisioned throughput requirements, in capacity units, for write operations to the DynamoDB table used for the S3Guard Metadata. This value is only used when creating a new DynamoDB table. After the table is created, you can manually provision the throughput by increasing or decreasing the write capacity as needed for existing tables.
      pruneAgeMs:
        type: integer
        format: int32
        description: Maximum age for S3Guard Metadata. Whenever the Prune command runs, entries in the S3Guard Metadata Cache older than this age will be deleted.
  EnvironmentType:
    type: string
    description: The type of environment.
    enum:
      - AWS
  Environment:
    type: object
    description: Container for the environment access data.
    required:
      - environmentId
      - crn
      - name
      - accountId
      - creationDate
      - type
    x-limits:
      - scope: account
        value: 10
        doc: The maximum number of environments that can be created in an account.
    properties:
      environmentId:
        type: string
        description: ID of the environment.
      crn:
        type: string
        description: CRN of the environment.
      name:
        type: string
        description: Name of the environment. This name must be unique, must have a maximum of 128 characters, and must contain only alphanumeric characters and hyphens and underscores. Names are case-sensitive.
      accountId:
        type: string
        description: Associated account id.
      creationDate:
        type: string
        format: date-time
        description: The date when the cloud account was created.
      type:
        $ref: '#/definitions/EnvironmentType'
        description: The type of the environment.
      awsDetails:
        type: object
        description: AWS-specific environment information.
        required:
          - delegatedRoleArn
          - instanceProfileName
          - subnets
          - securityGroups
          - region
        properties:
          delegatedRoleArn:
            type: string
            description: ARN of the delegated role.
          instanceProfileName:
            type: string
            description: The InstanceProfileName of the AWS IAM instance profile to use.
          logArchiveBucketName:
            type: string
            description: Name of S3 log archive bucket in which cluster logs will be stored after cluster termination.
          subnets:
            type: array
            items:
              type: string
            description: Network subnets.
          securityGroups:
            type: array
            items:
              type: string
            description: Security groups.
          region:
            type: string
            description: Network region.
          autoRegisterClusterSshKeys:
            type: boolean
            description: Flag to allow auto registration of SSH keys provided during cluster creation. Key pairs will be imported with name \"CLOUDERA-\" followed by the corresponding private key fingerprint.
          s3GuardConfiguration:
            $ref: '#/definitions/S3GuardConfiguration'
            description: Configurations required to enable S3 consistent view (S3Guard).
  CreateAWSEnvironmentRequest:
    type: object
    description: Request object for a CreateAWSEnvironment request.
    required:
      - name
      - delegatedRoleArn
      - subnets
      - securityGroups
      - region
      - instanceProfileName
    properties:
      name:
        type: string
        description: Name of the environment.
      delegatedRoleArn:
        type: string
        description: ARN of the delegated role.
      instanceProfileName:
        type: string
        description: The InstanceProfileName of the AWS IAM instance profile to use.
      logArchiveBucketName:
        type: string
        description: Name of S3 log archive bucket in which cluster logs will be stored after cluster termination.
      subnets:
        type: array
        items:
          type: string
        description: Network subnets.
      securityGroups:
        type: array
        items:
          type: string
        description: Security groups.
      region:
        type: string
        description: Network region.
        x-supported-options:
          - ap-northeast-1
          - ap-northeast-2
          - ap-south-1
          - ap-southeast-1
          - ap-southeast-2
          - ca-central-1
          - eu-central-1
          - eu-west-1
          - eu-west-2
          - sa-east-1
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
      autoRegisterClusterSshKeys:
        type: boolean
        description: Flag to allow auto registration of SSH keys provided during cluster creation. Key pairs will be imported with name \"CLOUDERA-\" followed by the corresponding private key fingerprint.
      s3GuardConfiguration:
        $ref: '#/definitions/S3GuardConfigurationRequest'
        description: Configurations for S3Guard (S3 consistent view layer).
  CreateAWSEnvironmentResponse:
    type: object
    description: Response object for a CreateAWSEnvironment request.
    required:
      - environment
    properties:
      environment:
        $ref: '#/definitions/Environment'
        description: Created environment object.
  DeleteEnvironmentRequest:
    type: object
    description: Request object for a DeleteEnvironment request.
    required:
      - environmentName
    properties:
      environmentName:
        type: string
        description: The name or CRN of the environment.
  DeleteEnvironmentResponse:
    type: object
    description: Response object for a DeleteEnvironment request.
  ListEnvironmentsRequest:
    type: object
    description: Request object for a ListEnvironment request.
    properties:
      environmentNames:
        type: array
        items:
          type: string
        description: The names or CRNs of the environments.
      pageSize:
        type: integer
        format: int32
        minimum: 1
        maximum: 100
        x-paging-page-size: true
        description: The size of each page.
      startingToken:
        type: string
        x-paging-input-token: true
        description: A token to specify where to start paginating. This is the nextToken from a previously truncated response.
  ListEnvironmentsResponse:
    type: object
    description: Response object for a ListEnvironments request.
    required:
      - environments
    properties:
      environments:
        type: array
        items:
          $ref: '#/definitions/Environment'
        x-paging-result: true
        description: The environments.
      nextToken:
        type: string
        x-paging-output-token: true
        description: The token to use when requesting the next set of results. If there are no additional results, the string is empty.
  GetInfoForAWSCrossAccountAccessRequest:
    type: object
    description: Request object for a GetInfoForAWSCrossAccountAccess request.
  GetInfoForAWSCrossAccountAccessResponse:
    type: object
    description: Response object for a GetInfoForAWSCrossAccountAccess request.
    required:
      - infoForAWSCrossAccountAccess
    properties:
      infoForAWSCrossAccountAccess:
        $ref: '#/definitions/InfoForAWSCrossAccountAccess'
        description: The information required for setting up an AWS cross-account access.
  ClientAccountSetupCloudFormationTemplateType:
    type: string
    description: The type of a client account setup template
    enum:
      - COMBINED
      - DELEGATED_ACCESS
      - INSTANCE_SETTINGS
      - NETWORK_SETTINGS
  GetClientAccountSetupCloudFormationTemplateRequest:
    type: object
    description: Request object for a GetClientAccountSetupCloudFormationTemplate request.
    properties:
      templateType:
        $ref: '#/definitions/ClientAccountSetupCloudFormationTemplateType'
        description: The type of a client account setup template, COMBINED by default.
  GetClientAccountSetupCloudFormationTemplateResponse:
    type: object
    description: Response object for a GetClientAccountSetupCloudFormationTemplate request.
    required:
      - template
    properties:
      template:
        type: string
        description: CloudFormation template that creates resources necessary to create clusters.

